--- tmp/litestar-1.0.0a0.tar.gz
+++ tmp/litestar-2.0.0a3.tar.gz
├── filetype from file(1)
│ @@ -1 +1 @@
│ -gzip compressed data, was "litestar-1.0.0a0.tar", max compression
│ +gzip compressed data, was "litestar-2.0.0a3.tar", max compression
│   --- litestar-1.0.0a0.tar
├── +++ litestar-2.0.0a3.tar
│ ├── file list
│ │ @@ -1,273 +1,273 @@
│ │ --rw-r--r--   0        0        0     1085 2023-04-01 09:39:41.622149 litestar-1.0.0a0/LICENSE
│ │ --rw-r--r--   0        0        0    47304 2023-04-01 09:55:50.014278 litestar-1.0.0a0/README.md
│ │ --rw-r--r--   0        0        0      739 2023-04-01 09:39:40.993357 litestar-1.0.0a0/litestar/__init__.py
│ │ --rw-r--r--   0        0        0      103 2023-04-01 09:40:38.827213 litestar-1.0.0a0/litestar/__main__.py
│ │ --rw-r--r--   0        0        0       77 2023-04-01 09:38:36.040538 litestar-1.0.0a0/litestar/_asgi/__init__.py
│ │ --rw-r--r--   0        0        0     8644 2023-04-01 09:39:41.162723 litestar-1.0.0a0/litestar/_asgi/asgi_router.py
│ │ --rw-r--r--   0        0        0      349 2023-04-01 09:38:37.892306 litestar-1.0.0a0/litestar/_asgi/routing_trie/__init__.py
│ │ --rw-r--r--   0        0        0     7823 2023-04-01 09:39:41.095579 litestar-1.0.0a0/litestar/_asgi/routing_trie/mapping.py
│ │ --rw-r--r--   0        0        0     5938 2023-04-01 09:38:36.744801 litestar-1.0.0a0/litestar/_asgi/routing_trie/traversal.py
│ │ --rw-r--r--   0        0        0     2598 2023-04-01 09:38:35.261786 litestar-1.0.0a0/litestar/_asgi/routing_trie/types.py
│ │ --rw-r--r--   0        0        0     1267 2023-04-01 09:38:35.508563 litestar-1.0.0a0/litestar/_asgi/routing_trie/validate.py
│ │ --rw-r--r--   0        0        0     1528 2023-04-01 09:38:36.523869 litestar-1.0.0a0/litestar/_asgi/utils.py
│ │ --rw-r--r--   0        0        0       66 2023-03-22 17:01:23.921014 litestar-1.0.0a0/litestar/_kwargs/__init__.py
│ │ --rw-r--r--   0        0        0     3868 2023-04-01 09:38:35.314179 litestar-1.0.0a0/litestar/_kwargs/cleanup.py
│ │ --rw-r--r--   0        0        0     4245 2023-04-01 09:38:35.799386 litestar-1.0.0a0/litestar/_kwargs/dependencies.py
│ │ --rw-r--r--   0        0        0    13506 2023-04-01 09:38:34.871817 litestar-1.0.0a0/litestar/_kwargs/extractors.py
│ │ --rw-r--r--   0        0        0    19413 2023-04-01 09:38:35.897434 litestar-1.0.0a0/litestar/_kwargs/kwargs_model.py
│ │ --rw-r--r--   0        0        0     2759 2023-04-01 09:38:37.316994 litestar-1.0.0a0/litestar/_kwargs/parameter_definition.py
│ │ --rw-r--r--   0        0        0        0 2023-03-22 17:01:23.923072 litestar-1.0.0a0/litestar/_layers/__init__.py
│ │ --rw-r--r--   0        0        0     1288 2023-04-01 09:38:36.991690 litestar-1.0.0a0/litestar/_layers/utils.py
│ │ --rw-r--r--   0        0        0     5935 2023-04-01 09:38:35.257654 litestar-1.0.0a0/litestar/_multipart.py
│ │ --rw-r--r--   0        0        0        0 2023-03-22 17:01:23.923737 litestar-1.0.0a0/litestar/_openapi/__init__.py
│ │ --rw-r--r--   0        0        0    10155 2023-04-01 09:38:36.865352 litestar-1.0.0a0/litestar/_openapi/parameters.py
│ │ --rw-r--r--   0        0        0     5490 2023-04-01 09:38:33.293577 litestar-1.0.0a0/litestar/_openapi/path_item.py
│ │ --rw-r--r--   0        0        0     1237 2023-04-01 09:38:35.426823 litestar-1.0.0a0/litestar/_openapi/request_body.py
│ │ --rw-r--r--   0        0        0    10059 2023-04-01 09:40:54.746639 litestar-1.0.0a0/litestar/_openapi/responses.py
│ │ --rw-r--r--   0        0        0       64 2023-03-22 17:01:23.925665 litestar-1.0.0a0/litestar/_openapi/schema_generation/__init__.py
│ │ --rw-r--r--   0        0        0     7998 2023-04-01 09:38:34.100434 litestar-1.0.0a0/litestar/_openapi/schema_generation/constrained_fields.py
│ │ --rw-r--r--   0        0        0     1755 2023-04-01 09:38:35.106942 litestar-1.0.0a0/litestar/_openapi/schema_generation/examples.py
│ │ --rw-r--r--   0        0        0    28143 2023-04-01 09:38:36.953914 litestar-1.0.0a0/litestar/_openapi/schema_generation/schema.py
│ │ --rw-r--r--   0        0        0        0 2023-03-22 17:01:23.926720 litestar-1.0.0a0/litestar/_openapi/typescript_converter/__init__.py
│ │ --rw-r--r--   0        0        0    10970 2023-04-01 09:38:38.567744 litestar-1.0.0a0/litestar/_openapi/typescript_converter/converter.py
│ │ --rw-r--r--   0        0        0     5242 2023-04-01 09:38:37.179918 litestar-1.0.0a0/litestar/_openapi/typescript_converter/schema_parsing.py
│ │ --rw-r--r--   0        0        0     7685 2023-03-22 17:01:23.927638 litestar-1.0.0a0/litestar/_openapi/typescript_converter/types.py
│ │ --rw-r--r--   0        0        0     1483 2023-04-01 09:38:38.357856 litestar-1.0.0a0/litestar/_openapi/utils.py
│ │ --rw-r--r--   0        0        0     2465 2023-03-22 17:01:23.928263 litestar-1.0.0a0/litestar/_parsers.py
│ │ --rw-r--r--   0        0        0      182 2023-04-01 09:37:51.113210 litestar-1.0.0a0/litestar/_signature/__init__.py
│ │ --rw-r--r--   0        0        0     5955 2023-04-01 09:55:49.966938 litestar-1.0.0a0/litestar/_signature/field.py
│ │ --rw-r--r--   0        0        0       64 2023-04-01 09:37:51.113944 litestar-1.0.0a0/litestar/_signature/models/__init__.py
│ │ --rw-r--r--   0        0        0    12453 2023-04-01 09:38:37.972390 litestar-1.0.0a0/litestar/_signature/models/attrs_signature_model.py
│ │ --rw-r--r--   0        0        0     3862 2023-04-01 09:38:35.277168 litestar-1.0.0a0/litestar/_signature/models/base.py
│ │ --rw-r--r--   0        0        0     7273 2023-04-01 09:38:38.462757 litestar-1.0.0a0/litestar/_signature/models/pydantic_signature_model.py
│ │ --rw-r--r--   0        0        0       99 2023-04-01 09:37:51.116336 litestar-1.0.0a0/litestar/_signature/parsing/__init__.py
│ │ --rw-r--r--   0        0        0     2598 2023-04-01 09:38:36.469370 litestar-1.0.0a0/litestar/_signature/parsing/signature_parameter.py
│ │ --rw-r--r--   0        0        0     6219 2023-04-01 09:38:35.699025 litestar-1.0.0a0/litestar/_signature/parsing/utils.py
│ │ --rw-r--r--   0        0        0     4054 2023-04-01 09:38:35.348710 litestar-1.0.0a0/litestar/_signature/utils.py
│ │ --rw-r--r--   0        0        0    37905 2023-04-01 09:39:40.886664 litestar-1.0.0a0/litestar/app.py
│ │ --rw-r--r--   0        0        0     2200 2023-04-01 09:38:38.458505 litestar-1.0.0a0/litestar/background_tasks.py
│ │ --rw-r--r--   0        0        0        0 2023-03-09 14:56:24.071923 litestar-1.0.0a0/litestar/cli/__init__.py
│ │ --rw-r--r--   0        0        0    11820 2023-04-01 09:49:34.898057 litestar-1.0.0a0/litestar/cli/_utils.py
│ │ --rw-r--r--   0        0        0        0 2023-03-09 14:56:24.054246 litestar-1.0.0a0/litestar/cli/commands/__init__.py
│ │ --rw-r--r--   0        0        0     4553 2023-04-01 09:55:50.008884 litestar-1.0.0a0/litestar/cli/commands/core.py
│ │ --rw-r--r--   0        0        0     2365 2023-04-01 09:49:34.853718 litestar-1.0.0a0/litestar/cli/commands/schema.py
│ │ --rw-r--r--   0        0        0     2224 2023-04-01 09:49:38.494462 litestar-1.0.0a0/litestar/cli/commands/sessions.py
│ │ --rw-r--r--   0        0        0      807 2023-04-01 09:49:34.891217 litestar-1.0.0a0/litestar/cli/main.py
│ │ --rw-r--r--   0        0        0        0 2023-03-22 17:01:23.932070 litestar-1.0.0a0/litestar/config/__init__.py
│ │ --rw-r--r--   0        0        0     1747 2023-04-01 09:39:41.654644 litestar-1.0.0a0/litestar/config/allowed_hosts.py
│ │ --rw-r--r--   0        0        0    11826 2023-04-01 09:39:40.966304 litestar-1.0.0a0/litestar/config/app.py
│ │ --rw-r--r--   0        0        0     2742 2023-04-01 09:39:41.035358 litestar-1.0.0a0/litestar/config/compression.py
│ │ --rw-r--r--   0        0        0     5177 2023-04-01 09:39:41.165958 litestar-1.0.0a0/litestar/config/cors.py
│ │ --rw-r--r--   0        0        0     1771 2023-04-01 09:39:40.849975 litestar-1.0.0a0/litestar/config/csrf.py
│ │ --rw-r--r--   0        0        0     1991 2023-04-01 09:39:40.619296 litestar-1.0.0a0/litestar/config/response_cache.py
│ │ --rw-r--r--   0        0        0     1922 2023-04-01 09:38:38.586978 litestar-1.0.0a0/litestar/connection/__init__.py
│ │ --rw-r--r--   0        0        0    10838 2023-04-01 09:40:38.803576 litestar-1.0.0a0/litestar/connection/base.py
│ │ --rw-r--r--   0        0        0     7034 2023-04-01 09:39:41.719012 litestar-1.0.0a0/litestar/connection/request.py
│ │ --rw-r--r--   0        0        0     9005 2023-04-01 09:39:41.473509 litestar-1.0.0a0/litestar/connection/websocket.py
│ │ --rw-r--r--   0        0        0      997 2023-04-01 09:40:38.973722 litestar-1.0.0a0/litestar/constants.py
│ │ --rw-r--r--   0        0        0        0 2023-03-09 14:56:24.103541 litestar-1.0.0a0/litestar/contrib/__init__.py
│ │ --rw-r--r--   0        0        0        0 2023-03-09 14:56:24.096627 litestar-1.0.0a0/litestar/contrib/htmx/__init__.py
│ │ --rw-r--r--   0        0        0     4917 2023-04-01 09:38:37.138906 litestar-1.0.0a0/litestar/contrib/htmx/_utils.py
│ │ --rw-r--r--   0        0        0     4051 2023-04-01 09:38:36.006693 litestar-1.0.0a0/litestar/contrib/htmx/request.py
│ │ --rw-r--r--   0        0        0     8349 2023-04-01 09:48:14.717646 litestar-1.0.0a0/litestar/contrib/htmx/response.py
│ │ --rw-r--r--   0        0        0     1261 2023-03-22 17:01:23.936448 litestar-1.0.0a0/litestar/contrib/htmx/types.py
│ │ --rw-r--r--   0        0        0     2557 2023-04-01 09:38:38.490302 litestar-1.0.0a0/litestar/contrib/jinja.py
│ │ --rw-r--r--   0        0        0      521 2023-04-01 09:38:37.067676 litestar-1.0.0a0/litestar/contrib/jwt/__init__.py
│ │ --rw-r--r--   0        0        0    28720 2023-04-01 09:38:36.198571 litestar-1.0.0a0/litestar/contrib/jwt/jwt_auth.py
│ │ --rw-r--r--   0        0        0     3978 2023-04-01 09:38:37.017016 litestar-1.0.0a0/litestar/contrib/jwt/jwt_token.py
│ │ --rw-r--r--   0        0        0     6970 2023-04-01 09:39:41.051897 litestar-1.0.0a0/litestar/contrib/jwt/middleware.py
│ │ --rw-r--r--   0        0        0     3916 2023-04-01 09:38:34.854423 litestar-1.0.0a0/litestar/contrib/mako.py
│ │ --rw-r--r--   0        0        0        0 2023-03-22 17:01:23.938848 litestar-1.0.0a0/litestar/contrib/msgspec/__init__.py
│ │ --rw-r--r--   0        0        0      180 2023-03-22 17:01:23.939485 litestar-1.0.0a0/litestar/contrib/opentelemetry/__init__.py
│ │ --rw-r--r--   0        0        0      845 2023-04-01 09:38:38.866983 litestar-1.0.0a0/litestar/contrib/opentelemetry/_utils.py
│ │ --rw-r--r--   0        0        0     4206 2023-04-01 09:41:18.835318 litestar-1.0.0a0/litestar/contrib/opentelemetry/config.py
│ │ --rw-r--r--   0        0        0     2212 2023-04-01 09:38:35.537068 litestar-1.0.0a0/litestar/contrib/opentelemetry/middleware.py
│ │ --rw-r--r--   0        0        0     4044 2023-04-01 09:38:37.301064 litestar-1.0.0a0/litestar/contrib/piccolo_orm.py
│ │ --rw-r--r--   0        0        0        0 2023-03-22 17:01:23.940981 litestar-1.0.0a0/litestar/contrib/pydantic/__init__.py
│ │ --rw-r--r--   0        0        0      280 2023-03-22 17:01:23.941245 litestar-1.0.0a0/litestar/contrib/repository/__init__.py
│ │ --rw-r--r--   0        0        0     9079 2023-03-22 17:01:23.941519 litestar-1.0.0a0/litestar/contrib/repository/abc.py
│ │ --rw-r--r--   0        0        0      328 2023-03-22 17:01:23.941853 litestar-1.0.0a0/litestar/contrib/repository/exceptions.py
│ │ --rw-r--r--   0        0        0     1162 2023-03-22 17:01:23.941967 litestar-1.0.0a0/litestar/contrib/repository/filters.py
│ │ --rw-r--r--   0        0        0        0 2023-03-22 17:01:23.942201 litestar-1.0.0a0/litestar/contrib/repository/testing/__init__.py
│ │ --rw-r--r--   0        0        0    12484 2023-04-01 09:38:34.983559 litestar-1.0.0a0/litestar/contrib/repository/testing/generic_mock_repository.py
│ │ --rw-r--r--   0        0        0        0 2023-03-22 17:01:23.942687 litestar-1.0.0a0/litestar/contrib/sqlalchemy/__init__.py
│ │ --rw-r--r--   0        0        0     3460 2023-03-22 17:01:23.943078 litestar-1.0.0a0/litestar/contrib/sqlalchemy/base.py
│ │ --rw-r--r--   0        0        0        0 2023-03-22 17:01:23.943156 litestar-1.0.0a0/litestar/contrib/sqlalchemy/dto.py
│ │ --rw-r--r--   0        0        0      390 2023-03-31 11:37:23.052379 litestar-1.0.0a0/litestar/contrib/sqlalchemy/init_plugin/__init__.py
│ │ --rw-r--r--   0        0        0      458 2023-03-31 11:37:23.053089 litestar-1.0.0a0/litestar/contrib/sqlalchemy/init_plugin/config/__init__.py
│ │ --rw-r--r--   0        0        0     3602 2023-04-01 09:40:38.976728 litestar-1.0.0a0/litestar/contrib/sqlalchemy/init_plugin/config/asyncio.py
│ │ --rw-r--r--   0        0        0    11308 2023-04-01 09:40:38.819738 litestar-1.0.0a0/litestar/contrib/sqlalchemy/init_plugin/config/common.py
│ │ --rw-r--r--   0        0        0    11499 2023-04-01 09:39:40.555810 litestar-1.0.0a0/litestar/contrib/sqlalchemy/init_plugin/config/engine.py
│ │ --rw-r--r--   0        0        0     2849 2023-04-01 09:40:38.934084 litestar-1.0.0a0/litestar/contrib/sqlalchemy/init_plugin/config/sync.py
│ │ --rw-r--r--   0        0        0     1527 2023-04-01 09:38:37.565067 litestar-1.0.0a0/litestar/contrib/sqlalchemy/init_plugin/plugin.py
│ │ --rw-r--r--   0        0        0    19789 2023-04-01 09:38:36.325572 litestar-1.0.0a0/litestar/contrib/sqlalchemy/repository.py
│ │ --rw-r--r--   0        0        0        0 2023-03-22 17:01:23.943459 litestar-1.0.0a0/litestar/contrib/sqlalchemy_1/__init__.py
│ │ --rw-r--r--   0        0        0    13770 2023-04-01 09:39:41.532905 litestar-1.0.0a0/litestar/contrib/sqlalchemy_1/config.py
│ │ --rw-r--r--   0        0        0    19427 2023-04-01 09:38:37.156027 litestar-1.0.0a0/litestar/contrib/sqlalchemy_1/plugin.py
│ │ --rw-r--r--   0        0        0     1319 2023-03-22 17:01:23.944201 litestar-1.0.0a0/litestar/contrib/sqlalchemy_1/types.py
│ │ --rw-r--r--   0        0        0     6071 2023-04-01 09:38:35.245012 litestar-1.0.0a0/litestar/contrib/tortoise_orm.py
│ │ --rw-r--r--   0        0        0     8888 2023-04-01 09:39:40.753415 litestar-1.0.0a0/litestar/controller.py
│ │ --rw-r--r--   0        0        0    16462 2023-04-01 09:38:37.412910 litestar-1.0.0a0/litestar/data_extractors.py
│ │ --rw-r--r--   0        0        0      857 2023-04-01 09:38:35.294561 litestar-1.0.0a0/litestar/datastructures/__init__.py
│ │ --rw-r--r--   0        0        0     3757 2023-03-22 17:01:23.946084 litestar-1.0.0a0/litestar/datastructures/cookie.py
│ │ --rw-r--r--   0        0        0    12896 2023-04-01 09:38:36.552382 litestar-1.0.0a0/litestar/datastructures/headers.py
│ │ --rw-r--r--   0        0        0     2977 2023-04-01 09:38:35.119508 litestar-1.0.0a0/litestar/datastructures/multi_dicts.py
│ │ --rw-r--r--   0        0        0     5027 2023-04-01 09:38:38.672743 litestar-1.0.0a0/litestar/datastructures/response_header.py
│ │ --rw-r--r--   0        0        0     9302 2023-04-01 09:38:33.682840 litestar-1.0.0a0/litestar/datastructures/state.py
│ │ --rw-r--r--   0        0        0     3360 2023-04-01 09:38:38.452249 litestar-1.0.0a0/litestar/datastructures/upload_file.py
│ │ --rw-r--r--   0        0        0     7273 2023-04-01 09:38:38.847243 litestar-1.0.0a0/litestar/datastructures/url.py
│ │ --rw-r--r--   0        0        0     2386 2023-04-01 09:38:34.748515 litestar-1.0.0a0/litestar/di.py
│ │ --rw-r--r--   0        0        0    13204 2023-04-01 09:38:35.436863 litestar-1.0.0a0/litestar/dto.py
│ │ --rw-r--r--   0        0        0     1728 2023-04-01 09:39:40.831702 litestar-1.0.0a0/litestar/enums.py
│ │ --rw-r--r--   0        0        0      201 2023-03-09 14:56:24.294775 litestar-1.0.0a0/litestar/events/__init__.py
│ │ --rw-r--r--   0        0        0     4597 2023-04-01 09:38:34.483221 litestar-1.0.0a0/litestar/events/emitter.py
│ │ --rw-r--r--   0        0        0     1305 2023-04-01 09:38:36.890515 litestar-1.0.0a0/litestar/events/listener.py
│ │ --rw-r--r--   0        0        0     1142 2023-04-01 09:50:15.567147 litestar-1.0.0a0/litestar/exceptions/__init__.py
│ │ --rw-r--r--   0        0        0     1608 2023-04-01 09:49:48.620213 litestar-1.0.0a0/litestar/exceptions/base_exceptions.py
│ │ --rw-r--r--   0        0        0     4629 2023-04-01 09:49:48.602796 litestar-1.0.0a0/litestar/exceptions/http_exceptions.py
│ │ --rw-r--r--   0        0        0     1351 2023-04-01 09:49:48.605766 litestar-1.0.0a0/litestar/exceptions/websocket_exceptions.py
│ │ --rw-r--r--   0        0        0     5350 2023-04-01 09:38:38.511301 litestar-1.0.0a0/litestar/file_system.py
│ │ --rw-r--r--   0        0        0      469 2023-03-22 17:01:23.952080 litestar-1.0.0a0/litestar/handlers/__init__.py
│ │ --rw-r--r--   0        0        0     3806 2023-04-01 09:38:36.923641 litestar-1.0.0a0/litestar/handlers/asgi_handlers.py
│ │ --rw-r--r--   0        0        0    12259 2023-04-01 09:38:35.617190 litestar-1.0.0a0/litestar/handlers/base.py
│ │ --rw-r--r--   0        0        0      263 2023-03-22 17:01:23.953108 litestar-1.0.0a0/litestar/handlers/http_handlers/__init__.py
│ │ --rw-r--r--   0        0        0     9851 2023-04-01 09:39:40.855531 litestar-1.0.0a0/litestar/handlers/http_handlers/_utils.py
│ │ --rw-r--r--   0        0        0    25438 2023-04-01 09:39:40.687359 litestar-1.0.0a0/litestar/handlers/http_handlers/base.py
│ │ --rw-r--r--   0        0        0    57933 2023-04-01 09:39:41.199551 litestar-1.0.0a0/litestar/handlers/http_handlers/decorators.py
│ │ --rw-r--r--   0        0        0     3668 2023-04-01 09:38:38.896801 litestar-1.0.0a0/litestar/handlers/websocket_handlers.py
│ │ --rw-r--r--   0        0        0      147 2023-03-22 17:01:23.954875 litestar-1.0.0a0/litestar/logging/__init__.py
│ │ --rw-r--r--   0        0        0      569 2023-03-22 17:01:23.955155 litestar-1.0.0a0/litestar/logging/_utils.py
│ │ --rw-r--r--   0        0        0    12050 2023-04-01 09:39:40.811459 litestar-1.0.0a0/litestar/logging/config.py
│ │ --rw-r--r--   0        0        0     1129 2023-04-01 09:38:36.492683 litestar-1.0.0a0/litestar/logging/picologging.py
│ │ --rw-r--r--   0        0        0      860 2023-04-01 09:38:36.945043 litestar-1.0.0a0/litestar/logging/standard.py
│ │ --rw-r--r--   0        0        0      385 2023-04-01 09:38:36.375434 litestar-1.0.0a0/litestar/middleware/__init__.py
│ │ --rw-r--r--   0        0        0     2081 2023-04-01 09:38:35.193205 litestar-1.0.0a0/litestar/middleware/_utils.py
│ │ --rw-r--r--   0        0        0     2973 2023-04-01 09:38:38.433334 litestar-1.0.0a0/litestar/middleware/allowed_hosts.py
│ │ --rw-r--r--   0        0        0     3436 2023-04-01 09:38:37.827842 litestar-1.0.0a0/litestar/middleware/authentication.py
│ │ --rw-r--r--   0        0        0     5302 2023-04-01 09:38:37.658755 litestar-1.0.0a0/litestar/middleware/base.py
│ │ --rw-r--r--   0        0        0     8344 2023-04-01 09:40:38.794813 litestar-1.0.0a0/litestar/middleware/compression.py
│ │ --rw-r--r--   0        0        0     2573 2023-04-01 09:38:37.311094 litestar-1.0.0a0/litestar/middleware/cors.py
│ │ --rw-r--r--   0        0        0     6474 2023-04-01 09:38:37.147336 litestar-1.0.0a0/litestar/middleware/csrf.py
│ │ --rw-r--r--   0        0        0      124 2023-04-01 09:38:35.288692 litestar-1.0.0a0/litestar/middleware/exceptions/__init__.py
│ │ --rw-r--r--   0        0        0     7191 2023-04-01 09:38:34.864315 litestar-1.0.0a0/litestar/middleware/exceptions/_debug_response.py
│ │ --rw-r--r--   0        0        0     9006 2023-04-01 09:40:38.824104 litestar-1.0.0a0/litestar/middleware/exceptions/middleware.py
│ │ --rw-r--r--   0        0        0      398 2023-04-01 09:39:41.418039 litestar-1.0.0a0/litestar/middleware/exceptions/templates/body.html
│ │ --rw-r--r--   0        0        0      344 2023-02-16 16:01:59.628258 litestar-1.0.0a0/litestar/middleware/exceptions/templates/frame.html
│ │ --rw-r--r--   0        0        0      920 2023-02-16 16:01:59.628380 litestar-1.0.0a0/litestar/middleware/exceptions/templates/scripts.js
│ │ --rw-r--r--   0        0        0     1830 2023-02-16 16:01:59.628512 litestar-1.0.0a0/litestar/middleware/exceptions/templates/styles.css
│ │ --rw-r--r--   0        0        0    13393 2023-04-01 09:48:14.644877 litestar-1.0.0a0/litestar/middleware/logging.py
│ │ --rw-r--r--   0        0        0    10821 2023-04-01 09:39:41.123558 litestar-1.0.0a0/litestar/middleware/rate_limit.py
│ │ --rw-r--r--   0        0        0       70 2023-03-22 17:01:23.962318 litestar-1.0.0a0/litestar/middleware/session/__init__.py
│ │ --rw-r--r--   0        0        0     7961 2023-04-01 09:39:41.790413 litestar-1.0.0a0/litestar/middleware/session/base.py
│ │ --rw-r--r--   0        0        0    10387 2023-04-01 09:38:38.619514 litestar-1.0.0a0/litestar/middleware/session/client_side.py
│ │ --rw-r--r--   0        0        0     8580 2023-04-01 09:39:40.733347 litestar-1.0.0a0/litestar/middleware/session/server_side.py
│ │ --rw-r--r--   0        0        0      231 2023-03-22 17:01:23.963807 litestar-1.0.0a0/litestar/openapi/__init__.py
│ │ --rw-r--r--   0        0        0     5226 2023-04-01 09:39:41.659140 litestar-1.0.0a0/litestar/openapi/config.py
│ │ --rw-r--r--   0        0        0    16273 2023-04-01 09:39:41.865509 litestar-1.0.0a0/litestar/openapi/controller.py
│ │ --rw-r--r--   0        0        0      898 2023-04-01 09:38:34.120244 litestar-1.0.0a0/litestar/openapi/datastructures.py
│ │ --rw-r--r--   0        0        0     1691 2023-03-22 17:01:23.964899 litestar-1.0.0a0/litestar/openapi/spec/__init__.py
│ │ --rw-r--r--   0        0        0     1648 2023-03-22 17:01:23.965033 litestar-1.0.0a0/litestar/openapi/spec/base.py
│ │ --rw-r--r--   0        0        0      961 2023-04-01 09:38:37.863425 litestar-1.0.0a0/litestar/openapi/spec/callback.py
│ │ --rw-r--r--   0        0        0     2936 2023-04-01 09:38:36.625870 litestar-1.0.0a0/litestar/openapi/spec/components.py
│ │ --rw-r--r--   0        0        0      592 2023-04-01 09:38:35.155848 litestar-1.0.0a0/litestar/openapi/spec/contact.py
│ │ --rw-r--r--   0        0        0      950 2023-04-01 09:38:36.474793 litestar-1.0.0a0/litestar/openapi/spec/discriminator.py
│ │ --rw-r--r--   0        0        0     3290 2023-04-01 09:38:37.356125 litestar-1.0.0a0/litestar/openapi/spec/encoding.py
│ │ --rw-r--r--   0        0        0      974 2023-03-22 17:01:23.965705 litestar-1.0.0a0/litestar/openapi/spec/enums.py
│ │ --rw-r--r--   0        0        0     1168 2023-04-01 09:38:35.422172 litestar-1.0.0a0/litestar/openapi/spec/example.py
│ │ --rw-r--r--   0        0        0      614 2023-04-01 09:38:36.406608 litestar-1.0.0a0/litestar/openapi/spec/external_documentation.py
│ │ --rw-r--r--   0        0        0     5669 2023-04-01 09:38:34.455783 litestar-1.0.0a0/litestar/openapi/spec/header.py
│ │ --rw-r--r--   0        0        0     1413 2023-04-01 09:38:37.475762 litestar-1.0.0a0/litestar/openapi/spec/info.py
│ │ --rw-r--r--   0        0        0      752 2023-04-01 09:38:36.281355 litestar-1.0.0a0/litestar/openapi/spec/license.py
│ │ --rw-r--r--   0        0        0     2876 2023-04-01 09:38:35.387862 litestar-1.0.0a0/litestar/openapi/spec/link.py
│ │ --rw-r--r--   0        0        0     1882 2023-04-01 09:38:36.169039 litestar-1.0.0a0/litestar/openapi/spec/media_type.py
│ │ --rw-r--r--   0        0        0     1195 2023-04-01 09:38:37.208729 litestar-1.0.0a0/litestar/openapi/spec/oauth_flow.py
│ │ --rw-r--r--   0        0        0      897 2023-04-01 09:38:36.275038 litestar-1.0.0a0/litestar/openapi/spec/oauth_flows.py
│ │ --rw-r--r--   0        0        0     4218 2023-04-01 09:38:36.295114 litestar-1.0.0a0/litestar/openapi/spec/open_api.py
│ │ --rw-r--r--   0        0        0     4842 2023-04-01 09:38:35.233228 litestar-1.0.0a0/litestar/openapi/spec/operation.py
│ │ --rw-r--r--   0        0        0     6242 2023-04-01 09:38:37.571885 litestar-1.0.0a0/litestar/openapi/spec/parameter.py
│ │ --rw-r--r--   0        0        0     3245 2023-04-01 09:38:36.572339 litestar-1.0.0a0/litestar/openapi/spec/path_item.py
│ │ --rw-r--r--   0        0        0     1255 2023-04-01 09:38:37.230784 litestar-1.0.0a0/litestar/openapi/spec/paths.py
│ │ --rw-r--r--   0        0        0     1351 2023-04-01 09:38:38.341679 litestar-1.0.0a0/litestar/openapi/spec/reference.py
│ │ --rw-r--r--   0        0        0     1095 2023-04-01 09:38:33.888638 litestar-1.0.0a0/litestar/openapi/spec/request_body.py
│ │ --rw-r--r--   0        0        0     1854 2023-04-01 09:38:37.603353 litestar-1.0.0a0/litestar/openapi/spec/response.py
│ │ --rw-r--r--   0        0        0     2367 2023-04-01 09:38:34.781754 litestar-1.0.0a0/litestar/openapi/spec/responses.py
│ │ --rw-r--r--   0        0        0    34574 2023-04-01 09:38:34.928320 litestar-1.0.0a0/litestar/openapi/spec/schema.py
│ │ --rw-r--r--   0        0        0     1686 2023-03-22 17:01:23.968910 litestar-1.0.0a0/litestar/openapi/spec/security_requirement.py
│ │ --rw-r--r--   0        0        0     2690 2023-04-01 09:38:35.655653 litestar-1.0.0a0/litestar/openapi/spec/security_scheme.py
│ │ --rw-r--r--   0        0        0     1077 2023-04-01 09:38:38.427913 litestar-1.0.0a0/litestar/openapi/spec/server.py
│ │ --rw-r--r--   0        0        0     1171 2023-04-01 09:38:36.462270 litestar-1.0.0a0/litestar/openapi/spec/server_variable.py
│ │ --rw-r--r--   0        0        0      923 2023-04-01 09:38:37.859985 litestar-1.0.0a0/litestar/openapi/spec/tag.py
│ │ --rw-r--r--   0        0        0     1702 2023-04-01 09:38:35.304561 litestar-1.0.0a0/litestar/openapi/spec/xml.py
│ │ --rw-r--r--   0        0        0    10984 2023-03-22 17:01:23.970148 litestar-1.0.0a0/litestar/pagination.py
│ │ --rw-r--r--   0        0        0    16805 2023-04-01 09:38:37.042923 litestar-1.0.0a0/litestar/params.py
│ │ --rw-r--r--   0        0        0     6337 2023-04-01 09:38:38.860281 litestar-1.0.0a0/litestar/partial.py
│ │ --rw-r--r--   0        0        0     7209 2023-04-01 09:39:40.648833 litestar-1.0.0a0/litestar/plugins.py
│ │ --rw-r--r--   0        0        0        0 2022-01-07 08:52:19.360895 litestar-1.0.0a0/litestar/py.typed
│ │ --rw-r--r--   0        0        0      278 2023-03-22 17:01:23.972267 litestar-1.0.0a0/litestar/response/__init__.py
│ │ --rw-r--r--   0        0        0    12185 2023-04-01 09:39:40.797642 litestar-1.0.0a0/litestar/response/base.py
│ │ --rw-r--r--   0        0        0     8954 2023-04-01 09:38:33.240482 litestar-1.0.0a0/litestar/response/file.py
│ │ --rw-r--r--   0        0        0     2422 2023-04-01 09:38:38.815129 litestar-1.0.0a0/litestar/response/redirect.py
│ │ --rw-r--r--   0        0        0     4893 2023-04-01 09:38:35.236838 litestar-1.0.0a0/litestar/response/streaming.py
│ │ --rw-r--r--   0        0        0     2994 2023-04-01 09:38:36.919418 litestar-1.0.0a0/litestar/response/template.py
│ │ --rw-r--r--   0        0        0    15093 2023-04-01 09:39:41.170368 litestar-1.0.0a0/litestar/response_containers.py
│ │ --rw-r--r--   0        0        0    14118 2023-04-01 09:39:40.925652 litestar-1.0.0a0/litestar/router.py
│ │ --rw-r--r--   0        0        0      191 2023-03-09 14:56:24.290030 litestar-1.0.0a0/litestar/routes/__init__.py
│ │ --rw-r--r--   0        0        0     1763 2023-04-01 09:38:38.593761 litestar-1.0.0a0/litestar/routes/asgi.py
│ │ --rw-r--r--   0        0        0     6310 2023-04-01 09:39:41.008457 litestar-1.0.0a0/litestar/routes/base.py
│ │ --rw-r--r--   0        0        0    13400 2023-04-01 09:38:36.957734 litestar-1.0.0a0/litestar/routes/http.py
│ │ --rw-r--r--   0        0        0     3058 2023-04-01 09:38:37.881545 litestar-1.0.0a0/litestar/routes/websocket.py
│ │ --rw-r--r--   0        0        0       97 2023-04-01 09:38:35.203092 litestar-1.0.0a0/litestar/security/__init__.py
│ │ --rw-r--r--   0        0        0     7165 2023-04-01 09:39:40.844574 litestar-1.0.0a0/litestar/security/base.py
│ │ --rw-r--r--   0        0        0      188 2023-04-01 09:38:34.990067 litestar-1.0.0a0/litestar/security/session_auth/__init__.py
│ │ --rw-r--r--   0        0        0     5602 2023-04-01 09:40:38.761851 litestar-1.0.0a0/litestar/security/session_auth/auth.py
│ │ --rw-r--r--   0        0        0     4941 2023-04-01 09:40:38.860906 litestar-1.0.0a0/litestar/security/session_auth/middleware.py
│ │ --rw-r--r--   0        0        0     6606 2023-04-01 09:55:49.964113 litestar-1.0.0a0/litestar/serialization.py
│ │ --rw-r--r--   0        0        0      158 2023-04-01 09:38:36.262942 litestar-1.0.0a0/litestar/static_files/__init__.py
│ │ --rw-r--r--   0        0        0     5019 2023-04-01 09:38:34.737616 litestar-1.0.0a0/litestar/static_files/base.py
│ │ --rw-r--r--   0        0        0     3582 2023-04-01 09:39:41.714504 litestar-1.0.0a0/litestar/static_files/config.py
│ │ --rw-r--r--   0        0        0     9536 2023-03-31 11:37:23.065836 litestar-1.0.0a0/litestar/status_codes.py
│ │ --rw-r--r--   0        0        0        0 2023-03-22 17:01:23.979086 litestar-1.0.0a0/litestar/stores/__init__.py
│ │ --rw-r--r--   0        0        0     4377 2023-03-22 17:01:23.979247 litestar-1.0.0a0/litestar/stores/base.py
│ │ --rw-r--r--   0        0        0     5425 2023-03-22 17:01:23.979395 litestar-1.0.0a0/litestar/stores/file.py
│ │ --rw-r--r--   0        0        0     3625 2023-03-22 17:01:23.979554 litestar-1.0.0a0/litestar/stores/memory.py
│ │ --rw-r--r--   0        0        0     6231 2023-04-01 09:41:18.828145 litestar-1.0.0a0/litestar/stores/redis.py
│ │ --rw-r--r--   0        0        0     2233 2023-03-22 17:01:23.979812 litestar-1.0.0a0/litestar/stores/registry.py
│ │ --rw-r--r--   0        0        0      204 2023-04-01 09:38:34.535862 litestar-1.0.0a0/litestar/template/__init__.py
│ │ --rw-r--r--   0        0        0     4113 2023-04-01 09:39:41.060459 litestar-1.0.0a0/litestar/template/base.py
│ │ --rw-r--r--   0        0        0     1894 2023-04-01 09:39:41.824975 litestar-1.0.0a0/litestar/template/config.py
│ │ --rw-r--r--   0        0        0      581 2023-04-01 09:38:35.398181 litestar-1.0.0a0/litestar/testing/__init__.py
│ │ --rw-r--r--   0        0        0     1816 2023-03-09 14:56:24.187315 litestar-1.0.0a0/litestar/testing/client/__init__.py
│ │ --rw-r--r--   0        0        0    17450 2023-04-01 09:39:40.694030 litestar-1.0.0a0/litestar/testing/client/async_client.py
│ │ --rw-r--r--   0        0        0     5132 2023-04-01 09:38:34.492513 litestar-1.0.0a0/litestar/testing/client/base.py
│ │ --rw-r--r--   0        0        0    19556 2023-04-01 09:39:41.080181 litestar-1.0.0a0/litestar/testing/client/sync_client.py
│ │ --rw-r--r--   0        0        0    30545 2023-04-01 09:39:41.375092 litestar-1.0.0a0/litestar/testing/helpers.py
│ │ --rw-r--r--   0        0        0     2534 2023-04-01 09:38:34.276732 litestar-1.0.0a0/litestar/testing/life_span_handler.py
│ │ --rw-r--r--   0        0        0    21905 2023-04-01 09:39:41.433368 litestar-1.0.0a0/litestar/testing/request_factory.py
│ │ --rw-r--r--   0        0        0     8094 2023-04-01 09:38:38.904424 litestar-1.0.0a0/litestar/testing/transport.py
│ │ --rw-r--r--   0        0        0     6943 2023-04-01 09:38:34.228787 litestar-1.0.0a0/litestar/testing/websocket_test_session.py
│ │ --rw-r--r--   0        0        0     4105 2023-04-01 09:50:11.546358 litestar-1.0.0a0/litestar/types/__init__.py
│ │ --rw-r--r--   0        0        0     8634 2023-04-01 09:39:40.586996 litestar-1.0.0a0/litestar/types/asgi_types.py
│ │ --rw-r--r--   0        0        0      514 2023-03-22 17:01:23.985137 litestar-1.0.0a0/litestar/types/builtin_types.py
│ │ --rw-r--r--   0        0        0     2291 2023-04-01 09:50:15.569933 litestar-1.0.0a0/litestar/types/callable_types.py
│ │ --rw-r--r--   0        0        0     1645 2023-04-01 09:38:36.710739 litestar-1.0.0a0/litestar/types/composite_types.py
│ │ --rw-r--r--   0        0        0      183 2023-03-22 17:01:23.986010 litestar-1.0.0a0/litestar/types/empty.py
│ │ --rw-r--r--   0        0        0     2662 2023-04-01 09:38:35.602759 litestar-1.0.0a0/litestar/types/file_types.py
│ │ --rw-r--r--   0        0        0      344 2023-03-09 14:56:24.031533 litestar-1.0.0a0/litestar/types/helper_types.py
│ │ --rw-r--r--   0        0        0     1487 2023-04-01 09:50:01.281868 litestar-1.0.0a0/litestar/types/internal_types.py
│ │ --rw-r--r--   0        0        0     2407 2023-03-22 17:01:23.986888 litestar-1.0.0a0/litestar/types/protocols.py
│ │ --rw-r--r--   0        0        0     1820 2023-04-01 09:50:11.554189 litestar-1.0.0a0/litestar/types/serialization.py
│ │ --rw-r--r--   0        0        0     1826 2023-04-01 09:48:14.711735 litestar-1.0.0a0/litestar/utils/__init__.py
│ │ --rw-r--r--   0        0        0      729 2023-04-01 09:38:38.014627 litestar-1.0.0a0/litestar/utils/compat.py
│ │ --rw-r--r--   0        0        0     3449 2023-04-01 09:38:38.651590 litestar-1.0.0a0/litestar/utils/dataclass.py
│ │ --rw-r--r--   0        0        0     3520 2023-04-01 09:39:40.852422 litestar-1.0.0a0/litestar/utils/deprecation.py
│ │ --rw-r--r--   0        0        0     1483 2023-04-01 09:55:50.044695 litestar-1.0.0a0/litestar/utils/helpers.py
│ │ --rw-r--r--   0        0        0      723 2023-03-22 17:01:23.989163 litestar-1.0.0a0/litestar/utils/path.py
│ │ --rw-r--r--   0        0        0     7962 2023-04-01 09:55:49.959821 litestar-1.0.0a0/litestar/utils/predicates.py
│ │ --rw-r--r--   0        0        0     1996 2023-04-01 09:38:35.735208 litestar-1.0.0a0/litestar/utils/pydantic.py
│ │ --rw-r--r--   0        0        0     2720 2023-04-01 09:40:38.833130 litestar-1.0.0a0/litestar/utils/scope.py
│ │ --rw-r--r--   0        0        0      992 2023-04-01 09:37:51.130088 litestar-1.0.0a0/litestar/utils/sequence.py
│ │ --rw-r--r--   0        0        0     4251 2023-04-01 09:38:38.840678 litestar-1.0.0a0/litestar/utils/sync.py
│ │ --rw-r--r--   0        0        0     3429 2023-04-01 09:38:38.785406 litestar-1.0.0a0/litestar/utils/typing.py
│ │ --rw-r--r--   0        0        0     1921 2023-04-01 09:39:40.823250 litestar-1.0.0a0/litestar/utils/version.py
│ │ --rw-r--r--   0        0        0     9125 2023-04-01 10:24:07.336359 litestar-1.0.0a0/pyproject.toml
│ │ --rw-r--r--   0        0        0    50666 1970-01-01 00:00:00.000000 litestar-1.0.0a0/PKG-INFO
│ │ +-rw-r--r--   0        0        0     1092 2023-04-07 17:38:15.152994 litestar-2.0.0a3/LICENSE
│ │ +-rw-r--r--   0        0        0    47243 2023-04-07 17:38:15.152994 litestar-2.0.0a3/README.md
│ │ +-rw-r--r--   0        0        0      744 2023-04-07 17:38:15.168995 litestar-2.0.0a3/litestar/__init__.py
│ │ +-rw-r--r--   0        0        0      103 2023-04-07 17:38:15.168995 litestar-2.0.0a3/litestar/__main__.py
│ │ +-rw-r--r--   0        0        0       77 2023-04-07 17:38:15.168995 litestar-2.0.0a3/litestar/_asgi/__init__.py
│ │ +-rw-r--r--   0        0        0     8644 2023-04-07 17:38:15.168995 litestar-2.0.0a3/litestar/_asgi/asgi_router.py
│ │ +-rw-r--r--   0        0        0      349 2023-04-07 17:38:15.168995 litestar-2.0.0a3/litestar/_asgi/routing_trie/__init__.py
│ │ +-rw-r--r--   0        0        0     7823 2023-04-07 17:38:15.168995 litestar-2.0.0a3/litestar/_asgi/routing_trie/mapping.py
│ │ +-rw-r--r--   0        0        0     5938 2023-04-07 17:38:15.168995 litestar-2.0.0a3/litestar/_asgi/routing_trie/traversal.py
│ │ +-rw-r--r--   0        0        0     2598 2023-04-07 17:38:15.168995 litestar-2.0.0a3/litestar/_asgi/routing_trie/types.py
│ │ +-rw-r--r--   0        0        0     1267 2023-04-07 17:38:15.168995 litestar-2.0.0a3/litestar/_asgi/routing_trie/validate.py
│ │ +-rw-r--r--   0        0        0     1528 2023-04-07 17:38:15.168995 litestar-2.0.0a3/litestar/_asgi/utils.py
│ │ +-rw-r--r--   0        0        0       66 2023-04-07 17:38:15.168995 litestar-2.0.0a3/litestar/_kwargs/__init__.py
│ │ +-rw-r--r--   0        0        0     3868 2023-04-07 17:38:15.168995 litestar-2.0.0a3/litestar/_kwargs/cleanup.py
│ │ +-rw-r--r--   0        0        0     4245 2023-04-07 17:38:15.168995 litestar-2.0.0a3/litestar/_kwargs/dependencies.py
│ │ +-rw-r--r--   0        0        0    14496 2023-04-07 17:38:15.172995 litestar-2.0.0a3/litestar/_kwargs/extractors.py
│ │ +-rw-r--r--   0        0        0    20822 2023-04-07 17:38:15.172995 litestar-2.0.0a3/litestar/_kwargs/kwargs_model.py
│ │ +-rw-r--r--   0        0        0     2759 2023-04-07 17:38:15.172995 litestar-2.0.0a3/litestar/_kwargs/parameter_definition.py
│ │ +-rw-r--r--   0        0        0        0 2023-04-07 17:38:15.172995 litestar-2.0.0a3/litestar/_layers/__init__.py
│ │ +-rw-r--r--   0        0        0     1288 2023-04-07 17:38:15.172995 litestar-2.0.0a3/litestar/_layers/utils.py
│ │ +-rw-r--r--   0        0        0     5935 2023-04-07 17:38:15.172995 litestar-2.0.0a3/litestar/_multipart.py
│ │ +-rw-r--r--   0        0        0        0 2023-04-07 17:38:15.172995 litestar-2.0.0a3/litestar/_openapi/__init__.py
│ │ +-rw-r--r--   0        0        0    10155 2023-04-07 17:38:15.172995 litestar-2.0.0a3/litestar/_openapi/parameters.py
│ │ +-rw-r--r--   0        0        0     5490 2023-04-07 17:38:15.172995 litestar-2.0.0a3/litestar/_openapi/path_item.py
│ │ +-rw-r--r--   0        0        0     1237 2023-04-07 17:38:15.172995 litestar-2.0.0a3/litestar/_openapi/request_body.py
│ │ +-rw-r--r--   0        0        0    10005 2023-04-07 17:38:15.172995 litestar-2.0.0a3/litestar/_openapi/responses.py
│ │ +-rw-r--r--   0        0        0       64 2023-04-07 17:38:15.172995 litestar-2.0.0a3/litestar/_openapi/schema_generation/__init__.py
│ │ +-rw-r--r--   0        0        0     7009 2023-04-07 17:38:15.172995 litestar-2.0.0a3/litestar/_openapi/schema_generation/constrained_fields.py
│ │ +-rw-r--r--   0        0        0     2093 2023-04-07 17:38:15.172995 litestar-2.0.0a3/litestar/_openapi/schema_generation/examples.py
│ │ +-rw-r--r--   0        0        0    28143 2023-04-07 17:38:15.172995 litestar-2.0.0a3/litestar/_openapi/schema_generation/schema.py
│ │ +-rw-r--r--   0        0        0        0 2023-04-07 17:38:15.172995 litestar-2.0.0a3/litestar/_openapi/typescript_converter/__init__.py
│ │ +-rw-r--r--   0        0        0    10970 2023-04-07 17:38:15.172995 litestar-2.0.0a3/litestar/_openapi/typescript_converter/converter.py
│ │ +-rw-r--r--   0        0        0     5242 2023-04-07 17:38:15.172995 litestar-2.0.0a3/litestar/_openapi/typescript_converter/schema_parsing.py
│ │ +-rw-r--r--   0        0        0     7685 2023-04-07 17:38:15.172995 litestar-2.0.0a3/litestar/_openapi/typescript_converter/types.py
│ │ +-rw-r--r--   0        0        0     1483 2023-04-07 17:38:15.172995 litestar-2.0.0a3/litestar/_openapi/utils.py
│ │ +-rw-r--r--   0        0        0     2465 2023-04-07 17:38:15.172995 litestar-2.0.0a3/litestar/_parsers.py
│ │ +-rw-r--r--   0        0        0      182 2023-04-07 17:38:15.172995 litestar-2.0.0a3/litestar/_signature/__init__.py
│ │ +-rw-r--r--   0        0        0     5955 2023-04-07 17:38:15.172995 litestar-2.0.0a3/litestar/_signature/field.py
│ │ +-rw-r--r--   0        0        0       64 2023-04-07 17:38:15.172995 litestar-2.0.0a3/litestar/_signature/models/__init__.py
│ │ +-rw-r--r--   0        0        0    12437 2023-04-07 17:38:15.172995 litestar-2.0.0a3/litestar/_signature/models/attrs_signature_model.py
│ │ +-rw-r--r--   0        0        0     3989 2023-04-07 17:38:15.172995 litestar-2.0.0a3/litestar/_signature/models/base.py
│ │ +-rw-r--r--   0        0        0     7268 2023-04-07 17:38:15.172995 litestar-2.0.0a3/litestar/_signature/models/pydantic_signature_model.py
│ │ +-rw-r--r--   0        0        0     8721 2023-04-07 17:38:15.172995 litestar-2.0.0a3/litestar/_signature/utils.py
│ │ +-rw-r--r--   0        0        0    38451 2023-04-07 17:38:15.172995 litestar-2.0.0a3/litestar/app.py
│ │ +-rw-r--r--   0        0        0     2200 2023-04-07 17:38:15.172995 litestar-2.0.0a3/litestar/background_tasks.py
│ │ +-rw-r--r--   0        0        0        0 2023-04-07 17:38:15.172995 litestar-2.0.0a3/litestar/cli/__init__.py
│ │ +-rw-r--r--   0        0        0    11820 2023-04-07 17:38:15.172995 litestar-2.0.0a3/litestar/cli/_utils.py
│ │ +-rw-r--r--   0        0        0        0 2023-04-07 17:38:15.172995 litestar-2.0.0a3/litestar/cli/commands/__init__.py
│ │ +-rw-r--r--   0        0        0     4553 2023-04-07 17:38:15.172995 litestar-2.0.0a3/litestar/cli/commands/core.py
│ │ +-rw-r--r--   0        0        0     2365 2023-04-07 17:38:15.172995 litestar-2.0.0a3/litestar/cli/commands/schema.py
│ │ +-rw-r--r--   0        0        0     2224 2023-04-07 17:38:15.172995 litestar-2.0.0a3/litestar/cli/commands/sessions.py
│ │ +-rw-r--r--   0        0        0      807 2023-04-07 17:38:15.172995 litestar-2.0.0a3/litestar/cli/main.py
│ │ +-rw-r--r--   0        0        0        0 2023-04-07 17:38:15.172995 litestar-2.0.0a3/litestar/config/__init__.py
│ │ +-rw-r--r--   0        0        0     1747 2023-04-07 17:38:15.172995 litestar-2.0.0a3/litestar/config/allowed_hosts.py
│ │ +-rw-r--r--   0        0        0    12358 2023-04-07 17:38:15.172995 litestar-2.0.0a3/litestar/config/app.py
│ │ +-rw-r--r--   0        0        0     2742 2023-04-07 17:38:15.172995 litestar-2.0.0a3/litestar/config/compression.py
│ │ +-rw-r--r--   0        0        0     5177 2023-04-07 17:38:15.172995 litestar-2.0.0a3/litestar/config/cors.py
│ │ +-rw-r--r--   0        0        0     1771 2023-04-07 17:38:15.172995 litestar-2.0.0a3/litestar/config/csrf.py
│ │ +-rw-r--r--   0        0        0     1991 2023-04-07 17:38:15.172995 litestar-2.0.0a3/litestar/config/response_cache.py
│ │ +-rw-r--r--   0        0        0     1922 2023-04-07 17:38:15.172995 litestar-2.0.0a3/litestar/connection/__init__.py
│ │ +-rw-r--r--   0        0        0    10838 2023-04-07 17:38:15.172995 litestar-2.0.0a3/litestar/connection/base.py
│ │ +-rw-r--r--   0        0        0     7698 2023-04-07 17:38:15.172995 litestar-2.0.0a3/litestar/connection/request.py
│ │ +-rw-r--r--   0        0        0     9005 2023-04-07 17:38:15.172995 litestar-2.0.0a3/litestar/connection/websocket.py
│ │ +-rw-r--r--   0        0        0      997 2023-04-07 17:38:15.172995 litestar-2.0.0a3/litestar/constants.py
│ │ +-rw-r--r--   0        0        0        0 2023-04-07 17:38:15.172995 litestar-2.0.0a3/litestar/contrib/__init__.py
│ │ +-rw-r--r--   0        0        0        0 2023-04-07 17:38:15.172995 litestar-2.0.0a3/litestar/contrib/htmx/__init__.py
│ │ +-rw-r--r--   0        0        0     4917 2023-04-07 17:38:15.172995 litestar-2.0.0a3/litestar/contrib/htmx/_utils.py
│ │ +-rw-r--r--   0        0        0     4051 2023-04-07 17:38:15.172995 litestar-2.0.0a3/litestar/contrib/htmx/request.py
│ │ +-rw-r--r--   0        0        0     8349 2023-04-07 17:38:15.172995 litestar-2.0.0a3/litestar/contrib/htmx/response.py
│ │ +-rw-r--r--   0        0        0     1261 2023-04-07 17:38:15.172995 litestar-2.0.0a3/litestar/contrib/htmx/types.py
│ │ +-rw-r--r--   0        0        0     2557 2023-04-07 17:38:15.172995 litestar-2.0.0a3/litestar/contrib/jinja.py
│ │ +-rw-r--r--   0        0        0      521 2023-04-07 17:38:15.172995 litestar-2.0.0a3/litestar/contrib/jwt/__init__.py
│ │ +-rw-r--r--   0        0        0    28720 2023-04-07 17:38:15.172995 litestar-2.0.0a3/litestar/contrib/jwt/jwt_auth.py
│ │ +-rw-r--r--   0        0        0     3978 2023-04-07 17:38:15.172995 litestar-2.0.0a3/litestar/contrib/jwt/jwt_token.py
│ │ +-rw-r--r--   0        0        0     6970 2023-04-07 17:38:15.172995 litestar-2.0.0a3/litestar/contrib/jwt/middleware.py
│ │ +-rw-r--r--   0        0        0     3916 2023-04-07 17:38:15.176996 litestar-2.0.0a3/litestar/contrib/mako.py
│ │ +-rw-r--r--   0        0        0        0 2023-04-07 17:38:15.176996 litestar-2.0.0a3/litestar/contrib/msgspec/__init__.py
│ │ +-rw-r--r--   0        0        0      180 2023-04-07 17:38:15.176996 litestar-2.0.0a3/litestar/contrib/opentelemetry/__init__.py
│ │ +-rw-r--r--   0        0        0      845 2023-04-07 17:38:15.176996 litestar-2.0.0a3/litestar/contrib/opentelemetry/_utils.py
│ │ +-rw-r--r--   0        0        0     4206 2023-04-07 17:38:15.176996 litestar-2.0.0a3/litestar/contrib/opentelemetry/config.py
│ │ +-rw-r--r--   0        0        0     2212 2023-04-07 17:38:15.176996 litestar-2.0.0a3/litestar/contrib/opentelemetry/middleware.py
│ │ +-rw-r--r--   0        0        0     4044 2023-04-07 17:38:15.176996 litestar-2.0.0a3/litestar/contrib/piccolo_orm.py
│ │ +-rw-r--r--   0        0        0        0 2023-04-07 17:38:15.176996 litestar-2.0.0a3/litestar/contrib/pydantic/__init__.py
│ │ +-rw-r--r--   0        0        0      280 2023-04-07 17:38:15.176996 litestar-2.0.0a3/litestar/contrib/repository/__init__.py
│ │ +-rw-r--r--   0        0        0     9079 2023-04-07 17:38:15.176996 litestar-2.0.0a3/litestar/contrib/repository/abc.py
│ │ +-rw-r--r--   0        0        0      328 2023-04-07 17:38:15.176996 litestar-2.0.0a3/litestar/contrib/repository/exceptions.py
│ │ +-rw-r--r--   0        0        0     1162 2023-04-07 17:38:15.176996 litestar-2.0.0a3/litestar/contrib/repository/filters.py
│ │ +-rw-r--r--   0        0        0        0 2023-04-07 17:38:15.176996 litestar-2.0.0a3/litestar/contrib/repository/testing/__init__.py
│ │ +-rw-r--r--   0        0        0    12484 2023-04-07 17:38:15.176996 litestar-2.0.0a3/litestar/contrib/repository/testing/generic_mock_repository.py
│ │ +-rw-r--r--   0        0        0        0 2023-04-07 17:38:15.176996 litestar-2.0.0a3/litestar/contrib/sqlalchemy/__init__.py
│ │ +-rw-r--r--   0        0        0     3460 2023-04-07 17:38:15.176996 litestar-2.0.0a3/litestar/contrib/sqlalchemy/base.py
│ │ +-rw-r--r--   0        0        0        0 2023-04-07 17:38:15.176996 litestar-2.0.0a3/litestar/contrib/sqlalchemy/dto.py
│ │ +-rw-r--r--   0        0        0      390 2023-04-07 17:38:15.176996 litestar-2.0.0a3/litestar/contrib/sqlalchemy/init_plugin/__init__.py
│ │ +-rw-r--r--   0        0        0      458 2023-04-07 17:38:15.176996 litestar-2.0.0a3/litestar/contrib/sqlalchemy/init_plugin/config/__init__.py
│ │ +-rw-r--r--   0        0        0     3602 2023-04-07 17:38:15.176996 litestar-2.0.0a3/litestar/contrib/sqlalchemy/init_plugin/config/asyncio.py
│ │ +-rw-r--r--   0        0        0    11308 2023-04-07 17:38:15.176996 litestar-2.0.0a3/litestar/contrib/sqlalchemy/init_plugin/config/common.py
│ │ +-rw-r--r--   0        0        0    11499 2023-04-07 17:38:15.176996 litestar-2.0.0a3/litestar/contrib/sqlalchemy/init_plugin/config/engine.py
│ │ +-rw-r--r--   0        0        0     2849 2023-04-07 17:38:15.176996 litestar-2.0.0a3/litestar/contrib/sqlalchemy/init_plugin/config/sync.py
│ │ +-rw-r--r--   0        0        0     1527 2023-04-07 17:38:15.176996 litestar-2.0.0a3/litestar/contrib/sqlalchemy/init_plugin/plugin.py
│ │ +-rw-r--r--   0        0        0    19731 2023-04-07 17:38:15.176996 litestar-2.0.0a3/litestar/contrib/sqlalchemy/repository.py
│ │ +-rw-r--r--   0        0        0        0 2023-04-07 17:38:15.176996 litestar-2.0.0a3/litestar/contrib/sqlalchemy_1/__init__.py
│ │ +-rw-r--r--   0        0        0    13770 2023-04-07 17:38:15.176996 litestar-2.0.0a3/litestar/contrib/sqlalchemy_1/config.py
│ │ +-rw-r--r--   0        0        0    19447 2023-04-07 17:38:15.176996 litestar-2.0.0a3/litestar/contrib/sqlalchemy_1/plugin.py
│ │ +-rw-r--r--   0        0        0     1319 2023-04-07 17:38:15.176996 litestar-2.0.0a3/litestar/contrib/sqlalchemy_1/types.py
│ │ +-rw-r--r--   0        0        0     6071 2023-04-07 17:38:15.176996 litestar-2.0.0a3/litestar/contrib/tortoise_orm.py
│ │ +-rw-r--r--   0        0        0     9559 2023-04-07 17:38:15.176996 litestar-2.0.0a3/litestar/controller.py
│ │ +-rw-r--r--   0        0        0    16462 2023-04-07 17:38:15.176996 litestar-2.0.0a3/litestar/data_extractors.py
│ │ +-rw-r--r--   0        0        0      883 2023-04-07 17:38:15.176996 litestar-2.0.0a3/litestar/datastructures/__init__.py
│ │ +-rw-r--r--   0        0        0     3757 2023-04-07 17:38:15.176996 litestar-2.0.0a3/litestar/datastructures/cookie.py
│ │ +-rw-r--r--   0        0        0    17316 2023-04-07 17:38:15.176996 litestar-2.0.0a3/litestar/datastructures/headers.py
│ │ +-rw-r--r--   0        0        0     2977 2023-04-07 17:38:15.176996 litestar-2.0.0a3/litestar/datastructures/multi_dicts.py
│ │ +-rw-r--r--   0        0        0     5027 2023-04-07 17:38:15.176996 litestar-2.0.0a3/litestar/datastructures/response_header.py
│ │ +-rw-r--r--   0        0        0     9302 2023-04-07 17:38:15.176996 litestar-2.0.0a3/litestar/datastructures/state.py
│ │ +-rw-r--r--   0        0        0     3360 2023-04-07 17:38:15.176996 litestar-2.0.0a3/litestar/datastructures/upload_file.py
│ │ +-rw-r--r--   0        0        0     7273 2023-04-07 17:38:15.176996 litestar-2.0.0a3/litestar/datastructures/url.py
│ │ +-rw-r--r--   0        0        0     2386 2023-04-07 17:38:15.176996 litestar-2.0.0a3/litestar/di.py
│ │ +-rw-r--r--   0        0        0        0 2023-04-07 17:38:15.176996 litestar-2.0.0a3/litestar/dto/__init__.py
│ │ +-rw-r--r--   0        0        0      337 2023-04-07 17:38:15.176996 litestar-2.0.0a3/litestar/dto/exceptions.py
│ │ +-rw-r--r--   0        0        0     2537 2023-04-07 17:38:15.176996 litestar-2.0.0a3/litestar/dto/interface.py
│ │ +-rw-r--r--   0        0        0     1728 2023-04-07 17:38:15.176996 litestar-2.0.0a3/litestar/enums.py
│ │ +-rw-r--r--   0        0        0      201 2023-04-07 17:38:15.176996 litestar-2.0.0a3/litestar/events/__init__.py
│ │ +-rw-r--r--   0        0        0     4597 2023-04-07 17:38:15.176996 litestar-2.0.0a3/litestar/events/emitter.py
│ │ +-rw-r--r--   0        0        0     1305 2023-04-07 17:38:15.176996 litestar-2.0.0a3/litestar/events/listener.py
│ │ +-rw-r--r--   0        0        0     1142 2023-04-07 17:38:15.176996 litestar-2.0.0a3/litestar/exceptions/__init__.py
│ │ +-rw-r--r--   0        0        0     1608 2023-04-07 17:38:15.176996 litestar-2.0.0a3/litestar/exceptions/base_exceptions.py
│ │ +-rw-r--r--   0        0        0     4629 2023-04-07 17:38:15.176996 litestar-2.0.0a3/litestar/exceptions/http_exceptions.py
│ │ +-rw-r--r--   0        0        0     1351 2023-04-07 17:38:15.176996 litestar-2.0.0a3/litestar/exceptions/websocket_exceptions.py
│ │ +-rw-r--r--   0        0        0     5350 2023-04-07 17:38:15.176996 litestar-2.0.0a3/litestar/file_system.py
│ │ +-rw-r--r--   0        0        0      559 2023-04-07 17:38:15.176996 litestar-2.0.0a3/litestar/handlers/__init__.py
│ │ +-rw-r--r--   0        0        0     3877 2023-04-07 17:38:15.176996 litestar-2.0.0a3/litestar/handlers/asgi_handlers.py
│ │ +-rw-r--r--   0        0        0    16408 2023-04-07 17:38:15.176996 litestar-2.0.0a3/litestar/handlers/base.py
│ │ +-rw-r--r--   0        0        0      263 2023-04-07 17:38:15.176996 litestar-2.0.0a3/litestar/handlers/http_handlers/__init__.py
│ │ +-rw-r--r--   0        0        0     9280 2023-04-07 17:38:15.176996 litestar-2.0.0a3/litestar/handlers/http_handlers/_utils.py
│ │ +-rw-r--r--   0        0        0    25419 2023-04-07 17:38:15.176996 litestar-2.0.0a3/litestar/handlers/http_handlers/base.py
│ │ +-rw-r--r--   0        0        0    60867 2023-04-07 17:38:15.176996 litestar-2.0.0a3/litestar/handlers/http_handlers/decorators.py
│ │ +-rw-r--r--   0        0        0    16609 2023-04-07 17:38:15.180996 litestar-2.0.0a3/litestar/handlers/websocket_handlers.py
│ │ +-rw-r--r--   0        0        0      147 2023-04-07 17:38:15.180996 litestar-2.0.0a3/litestar/logging/__init__.py
│ │ +-rw-r--r--   0        0        0      569 2023-04-07 17:38:15.180996 litestar-2.0.0a3/litestar/logging/_utils.py
│ │ +-rw-r--r--   0        0        0    12050 2023-04-07 17:38:15.180996 litestar-2.0.0a3/litestar/logging/config.py
│ │ +-rw-r--r--   0        0        0     1129 2023-04-07 17:38:15.180996 litestar-2.0.0a3/litestar/logging/picologging.py
│ │ +-rw-r--r--   0        0        0      860 2023-04-07 17:38:15.180996 litestar-2.0.0a3/litestar/logging/standard.py
│ │ +-rw-r--r--   0        0        0      385 2023-04-07 17:38:15.180996 litestar-2.0.0a3/litestar/middleware/__init__.py
│ │ +-rw-r--r--   0        0        0     2081 2023-04-07 17:38:15.180996 litestar-2.0.0a3/litestar/middleware/_utils.py
│ │ +-rw-r--r--   0        0        0     2973 2023-04-07 17:38:15.180996 litestar-2.0.0a3/litestar/middleware/allowed_hosts.py
│ │ +-rw-r--r--   0        0        0     3436 2023-04-07 17:38:15.180996 litestar-2.0.0a3/litestar/middleware/authentication.py
│ │ +-rw-r--r--   0        0        0     5302 2023-04-07 17:38:15.180996 litestar-2.0.0a3/litestar/middleware/base.py
│ │ +-rw-r--r--   0        0        0     8367 2023-04-07 17:38:15.180996 litestar-2.0.0a3/litestar/middleware/compression.py
│ │ +-rw-r--r--   0        0        0     2573 2023-04-07 17:38:15.180996 litestar-2.0.0a3/litestar/middleware/cors.py
│ │ +-rw-r--r--   0        0        0     6474 2023-04-07 17:38:15.180996 litestar-2.0.0a3/litestar/middleware/csrf.py
│ │ +-rw-r--r--   0        0        0      124 2023-04-07 17:38:15.180996 litestar-2.0.0a3/litestar/middleware/exceptions/__init__.py
│ │ +-rw-r--r--   0        0        0     7191 2023-04-07 17:38:15.180996 litestar-2.0.0a3/litestar/middleware/exceptions/_debug_response.py
│ │ +-rw-r--r--   0        0        0     9006 2023-04-07 17:38:15.180996 litestar-2.0.0a3/litestar/middleware/exceptions/middleware.py
│ │ +-rw-r--r--   0        0        0      398 2023-04-07 17:38:15.180996 litestar-2.0.0a3/litestar/middleware/exceptions/templates/body.html
│ │ +-rw-r--r--   0        0        0      344 2023-04-07 17:38:15.180996 litestar-2.0.0a3/litestar/middleware/exceptions/templates/frame.html
│ │ +-rw-r--r--   0        0        0      920 2023-04-07 17:38:15.180996 litestar-2.0.0a3/litestar/middleware/exceptions/templates/scripts.js
│ │ +-rw-r--r--   0        0        0     1830 2023-04-07 17:38:15.180996 litestar-2.0.0a3/litestar/middleware/exceptions/templates/styles.css
│ │ +-rw-r--r--   0        0        0    13393 2023-04-07 17:38:15.180996 litestar-2.0.0a3/litestar/middleware/logging.py
│ │ +-rw-r--r--   0        0        0    10821 2023-04-07 17:38:15.180996 litestar-2.0.0a3/litestar/middleware/rate_limit.py
│ │ +-rw-r--r--   0        0        0       70 2023-04-07 17:38:15.180996 litestar-2.0.0a3/litestar/middleware/session/__init__.py
│ │ +-rw-r--r--   0        0        0     7961 2023-04-07 17:38:15.180996 litestar-2.0.0a3/litestar/middleware/session/base.py
│ │ +-rw-r--r--   0        0        0    10387 2023-04-07 17:38:15.180996 litestar-2.0.0a3/litestar/middleware/session/client_side.py
│ │ +-rw-r--r--   0        0        0     8580 2023-04-07 17:38:15.180996 litestar-2.0.0a3/litestar/middleware/session/server_side.py
│ │ +-rw-r--r--   0        0        0      231 2023-04-07 17:38:15.180996 litestar-2.0.0a3/litestar/openapi/__init__.py
│ │ +-rw-r--r--   0        0        0     5226 2023-04-07 17:38:15.180996 litestar-2.0.0a3/litestar/openapi/config.py
│ │ +-rw-r--r--   0        0        0    16449 2023-04-07 17:38:15.180996 litestar-2.0.0a3/litestar/openapi/controller.py
│ │ +-rw-r--r--   0        0        0      898 2023-04-07 17:38:15.180996 litestar-2.0.0a3/litestar/openapi/datastructures.py
│ │ +-rw-r--r--   0        0        0     1691 2023-04-07 17:38:15.180996 litestar-2.0.0a3/litestar/openapi/spec/__init__.py
│ │ +-rw-r--r--   0        0        0     1648 2023-04-07 17:38:15.180996 litestar-2.0.0a3/litestar/openapi/spec/base.py
│ │ +-rw-r--r--   0        0        0      961 2023-04-07 17:38:15.180996 litestar-2.0.0a3/litestar/openapi/spec/callback.py
│ │ +-rw-r--r--   0        0        0     2936 2023-04-07 17:38:15.180996 litestar-2.0.0a3/litestar/openapi/spec/components.py
│ │ +-rw-r--r--   0        0        0      592 2023-04-07 17:38:15.180996 litestar-2.0.0a3/litestar/openapi/spec/contact.py
│ │ +-rw-r--r--   0        0        0      950 2023-04-07 17:38:15.180996 litestar-2.0.0a3/litestar/openapi/spec/discriminator.py
│ │ +-rw-r--r--   0        0        0     3290 2023-04-07 17:38:15.180996 litestar-2.0.0a3/litestar/openapi/spec/encoding.py
│ │ +-rw-r--r--   0        0        0      974 2023-04-07 17:38:15.180996 litestar-2.0.0a3/litestar/openapi/spec/enums.py
│ │ +-rw-r--r--   0        0        0     1168 2023-04-07 17:38:15.180996 litestar-2.0.0a3/litestar/openapi/spec/example.py
│ │ +-rw-r--r--   0        0        0      614 2023-04-07 17:38:15.180996 litestar-2.0.0a3/litestar/openapi/spec/external_documentation.py
│ │ +-rw-r--r--   0        0        0     5669 2023-04-07 17:38:15.180996 litestar-2.0.0a3/litestar/openapi/spec/header.py
│ │ +-rw-r--r--   0        0        0     1413 2023-04-07 17:38:15.180996 litestar-2.0.0a3/litestar/openapi/spec/info.py
│ │ +-rw-r--r--   0        0        0      752 2023-04-07 17:38:15.180996 litestar-2.0.0a3/litestar/openapi/spec/license.py
│ │ +-rw-r--r--   0        0        0     2876 2023-04-07 17:38:15.180996 litestar-2.0.0a3/litestar/openapi/spec/link.py
│ │ +-rw-r--r--   0        0        0     1882 2023-04-07 17:38:15.180996 litestar-2.0.0a3/litestar/openapi/spec/media_type.py
│ │ +-rw-r--r--   0        0        0     1195 2023-04-07 17:38:15.180996 litestar-2.0.0a3/litestar/openapi/spec/oauth_flow.py
│ │ +-rw-r--r--   0        0        0      897 2023-04-07 17:38:15.180996 litestar-2.0.0a3/litestar/openapi/spec/oauth_flows.py
│ │ +-rw-r--r--   0        0        0     4218 2023-04-07 17:38:15.180996 litestar-2.0.0a3/litestar/openapi/spec/open_api.py
│ │ +-rw-r--r--   0        0        0     4842 2023-04-07 17:38:15.180996 litestar-2.0.0a3/litestar/openapi/spec/operation.py
│ │ +-rw-r--r--   0        0        0     6242 2023-04-07 17:38:15.180996 litestar-2.0.0a3/litestar/openapi/spec/parameter.py
│ │ +-rw-r--r--   0        0        0     3245 2023-04-07 17:38:15.180996 litestar-2.0.0a3/litestar/openapi/spec/path_item.py
│ │ +-rw-r--r--   0        0        0     1255 2023-04-07 17:38:15.180996 litestar-2.0.0a3/litestar/openapi/spec/paths.py
│ │ +-rw-r--r--   0        0        0     1351 2023-04-07 17:38:15.180996 litestar-2.0.0a3/litestar/openapi/spec/reference.py
│ │ +-rw-r--r--   0        0        0     1095 2023-04-07 17:38:15.180996 litestar-2.0.0a3/litestar/openapi/spec/request_body.py
│ │ +-rw-r--r--   0        0        0     1854 2023-04-07 17:38:15.180996 litestar-2.0.0a3/litestar/openapi/spec/response.py
│ │ +-rw-r--r--   0        0        0     2367 2023-04-07 17:38:15.180996 litestar-2.0.0a3/litestar/openapi/spec/responses.py
│ │ +-rw-r--r--   0        0        0    34574 2023-04-07 17:38:15.180996 litestar-2.0.0a3/litestar/openapi/spec/schema.py
│ │ +-rw-r--r--   0        0        0     1686 2023-04-07 17:38:15.180996 litestar-2.0.0a3/litestar/openapi/spec/security_requirement.py
│ │ +-rw-r--r--   0        0        0     2690 2023-04-07 17:38:15.180996 litestar-2.0.0a3/litestar/openapi/spec/security_scheme.py
│ │ +-rw-r--r--   0        0        0     1077 2023-04-07 17:38:15.180996 litestar-2.0.0a3/litestar/openapi/spec/server.py
│ │ +-rw-r--r--   0        0        0     1171 2023-04-07 17:38:15.180996 litestar-2.0.0a3/litestar/openapi/spec/server_variable.py
│ │ +-rw-r--r--   0        0        0      923 2023-04-07 17:38:15.180996 litestar-2.0.0a3/litestar/openapi/spec/tag.py
│ │ +-rw-r--r--   0        0        0     1702 2023-04-07 17:38:15.180996 litestar-2.0.0a3/litestar/openapi/spec/xml.py
│ │ +-rw-r--r--   0        0        0    10984 2023-04-07 17:38:15.180996 litestar-2.0.0a3/litestar/pagination.py
│ │ +-rw-r--r--   0        0        0    16805 2023-04-07 17:38:15.180996 litestar-2.0.0a3/litestar/params.py
│ │ +-rw-r--r--   0        0        0     6337 2023-04-07 17:38:15.180996 litestar-2.0.0a3/litestar/partial.py
│ │ +-rw-r--r--   0        0        0     7209 2023-04-07 17:38:15.180996 litestar-2.0.0a3/litestar/plugins.py
│ │ +-rw-r--r--   0        0        0        0 2023-04-07 17:38:15.180996 litestar-2.0.0a3/litestar/py.typed
│ │ +-rw-r--r--   0        0        0      278 2023-04-07 17:38:15.180996 litestar-2.0.0a3/litestar/response/__init__.py
│ │ +-rw-r--r--   0        0        0    12185 2023-04-07 17:38:15.180996 litestar-2.0.0a3/litestar/response/base.py
│ │ +-rw-r--r--   0        0        0     8954 2023-04-07 17:38:15.184996 litestar-2.0.0a3/litestar/response/file.py
│ │ +-rw-r--r--   0        0        0     2422 2023-04-07 17:38:15.184996 litestar-2.0.0a3/litestar/response/redirect.py
│ │ +-rw-r--r--   0        0        0     4893 2023-04-07 17:38:15.184996 litestar-2.0.0a3/litestar/response/streaming.py
│ │ +-rw-r--r--   0        0        0     2994 2023-04-07 17:38:15.184996 litestar-2.0.0a3/litestar/response/template.py
│ │ +-rw-r--r--   0        0        0    14975 2023-04-07 17:38:15.184996 litestar-2.0.0a3/litestar/response_containers.py
│ │ +-rw-r--r--   0        0        0    15028 2023-04-07 17:38:15.184996 litestar-2.0.0a3/litestar/router.py
│ │ +-rw-r--r--   0        0        0      191 2023-04-07 17:38:15.184996 litestar-2.0.0a3/litestar/routes/__init__.py
│ │ +-rw-r--r--   0        0        0     1763 2023-04-07 17:38:15.184996 litestar-2.0.0a3/litestar/routes/asgi.py
│ │ +-rw-r--r--   0        0        0     6443 2023-04-07 17:38:15.184996 litestar-2.0.0a3/litestar/routes/base.py
│ │ +-rw-r--r--   0        0        0    13384 2023-04-07 17:38:15.184996 litestar-2.0.0a3/litestar/routes/http.py
│ │ +-rw-r--r--   0        0        0     3058 2023-04-07 17:38:15.184996 litestar-2.0.0a3/litestar/routes/websocket.py
│ │ +-rw-r--r--   0        0        0       97 2023-04-07 17:38:15.184996 litestar-2.0.0a3/litestar/security/__init__.py
│ │ +-rw-r--r--   0        0        0     7165 2023-04-07 17:38:15.184996 litestar-2.0.0a3/litestar/security/base.py
│ │ +-rw-r--r--   0        0        0      188 2023-04-07 17:38:15.184996 litestar-2.0.0a3/litestar/security/session_auth/__init__.py
│ │ +-rw-r--r--   0        0        0     5602 2023-04-07 17:38:15.184996 litestar-2.0.0a3/litestar/security/session_auth/auth.py
│ │ +-rw-r--r--   0        0        0     4941 2023-04-07 17:38:15.184996 litestar-2.0.0a3/litestar/security/session_auth/middleware.py
│ │ +-rw-r--r--   0        0        0     6606 2023-04-07 17:38:15.184996 litestar-2.0.0a3/litestar/serialization.py
│ │ +-rw-r--r--   0        0        0      158 2023-04-07 17:38:15.184996 litestar-2.0.0a3/litestar/static_files/__init__.py
│ │ +-rw-r--r--   0        0        0     5019 2023-04-07 17:38:15.184996 litestar-2.0.0a3/litestar/static_files/base.py
│ │ +-rw-r--r--   0        0        0     3582 2023-04-07 17:38:15.184996 litestar-2.0.0a3/litestar/static_files/config.py
│ │ +-rw-r--r--   0        0        0     9536 2023-04-07 17:38:15.184996 litestar-2.0.0a3/litestar/status_codes.py
│ │ +-rw-r--r--   0        0        0        0 2023-04-07 17:38:15.184996 litestar-2.0.0a3/litestar/stores/__init__.py
│ │ +-rw-r--r--   0        0        0     4377 2023-04-07 17:38:15.184996 litestar-2.0.0a3/litestar/stores/base.py
│ │ +-rw-r--r--   0        0        0     5425 2023-04-07 17:38:15.184996 litestar-2.0.0a3/litestar/stores/file.py
│ │ +-rw-r--r--   0        0        0     3625 2023-04-07 17:38:15.184996 litestar-2.0.0a3/litestar/stores/memory.py
│ │ +-rw-r--r--   0        0        0     6231 2023-04-07 17:38:15.184996 litestar-2.0.0a3/litestar/stores/redis.py
│ │ +-rw-r--r--   0        0        0     2233 2023-04-07 17:38:15.184996 litestar-2.0.0a3/litestar/stores/registry.py
│ │ +-rw-r--r--   0        0        0      204 2023-04-07 17:38:15.184996 litestar-2.0.0a3/litestar/template/__init__.py
│ │ +-rw-r--r--   0        0        0     4113 2023-04-07 17:38:15.184996 litestar-2.0.0a3/litestar/template/base.py
│ │ +-rw-r--r--   0        0        0     1894 2023-04-07 17:38:15.184996 litestar-2.0.0a3/litestar/template/config.py
│ │ +-rw-r--r--   0        0        0      581 2023-04-07 17:38:15.184996 litestar-2.0.0a3/litestar/testing/__init__.py
│ │ +-rw-r--r--   0        0        0     1816 2023-04-07 17:38:15.184996 litestar-2.0.0a3/litestar/testing/client/__init__.py
│ │ +-rw-r--r--   0        0        0    17450 2023-04-07 17:38:15.184996 litestar-2.0.0a3/litestar/testing/client/async_client.py
│ │ +-rw-r--r--   0        0        0     5132 2023-04-07 17:38:15.184996 litestar-2.0.0a3/litestar/testing/client/base.py
│ │ +-rw-r--r--   0        0        0    19556 2023-04-07 17:38:15.184996 litestar-2.0.0a3/litestar/testing/client/sync_client.py
│ │ +-rw-r--r--   0        0        0    31465 2023-04-07 17:38:15.184996 litestar-2.0.0a3/litestar/testing/helpers.py
│ │ +-rw-r--r--   0        0        0     2534 2023-04-07 17:38:15.184996 litestar-2.0.0a3/litestar/testing/life_span_handler.py
│ │ +-rw-r--r--   0        0        0    21905 2023-04-07 17:38:15.184996 litestar-2.0.0a3/litestar/testing/request_factory.py
│ │ +-rw-r--r--   0        0        0     8094 2023-04-07 17:38:15.184996 litestar-2.0.0a3/litestar/testing/transport.py
│ │ +-rw-r--r--   0        0        0     6943 2023-04-07 17:38:15.184996 litestar-2.0.0a3/litestar/testing/websocket_test_session.py
│ │ +-rw-r--r--   0        0        0     4105 2023-04-07 17:38:15.184996 litestar-2.0.0a3/litestar/types/__init__.py
│ │ +-rw-r--r--   0        0        0     8697 2023-04-07 17:38:15.184996 litestar-2.0.0a3/litestar/types/asgi_types.py
│ │ +-rw-r--r--   0        0        0      453 2023-04-07 17:38:15.184996 litestar-2.0.0a3/litestar/types/builtin_types.py
│ │ +-rw-r--r--   0        0        0     2291 2023-04-07 17:38:15.184996 litestar-2.0.0a3/litestar/types/callable_types.py
│ │ +-rw-r--r--   0        0        0     1645 2023-04-07 17:38:15.184996 litestar-2.0.0a3/litestar/types/composite_types.py
│ │ +-rw-r--r--   0        0        0      183 2023-04-07 17:38:15.184996 litestar-2.0.0a3/litestar/types/empty.py
│ │ +-rw-r--r--   0        0        0     2662 2023-04-07 17:38:15.184996 litestar-2.0.0a3/litestar/types/file_types.py
│ │ +-rw-r--r--   0        0        0      344 2023-04-07 17:38:15.184996 litestar-2.0.0a3/litestar/types/helper_types.py
│ │ +-rw-r--r--   0        0        0     1487 2023-04-07 17:38:15.184996 litestar-2.0.0a3/litestar/types/internal_types.py
│ │ +-rw-r--r--   0        0        0     8707 2023-04-07 17:38:15.184996 litestar-2.0.0a3/litestar/types/parsed_signature.py
│ │ +-rw-r--r--   0        0        0     2407 2023-04-07 17:38:15.184996 litestar-2.0.0a3/litestar/types/protocols.py
│ │ +-rw-r--r--   0        0        0     1820 2023-04-07 17:38:15.184996 litestar-2.0.0a3/litestar/types/serialization.py
│ │ +-rw-r--r--   0        0        0     1718 2023-04-07 17:38:15.184996 litestar-2.0.0a3/litestar/utils/__init__.py
│ │ +-rw-r--r--   0        0        0      729 2023-04-07 17:38:15.184996 litestar-2.0.0a3/litestar/utils/compat.py
│ │ +-rw-r--r--   0        0        0     3449 2023-04-07 17:38:15.184996 litestar-2.0.0a3/litestar/utils/dataclass.py
│ │ +-rw-r--r--   0        0        0     3520 2023-04-07 17:38:15.184996 litestar-2.0.0a3/litestar/utils/deprecation.py
│ │ +-rw-r--r--   0        0        0     1483 2023-04-07 17:38:15.184996 litestar-2.0.0a3/litestar/utils/helpers.py
│ │ +-rw-r--r--   0        0        0      723 2023-04-07 17:38:15.184996 litestar-2.0.0a3/litestar/utils/path.py
│ │ +-rw-r--r--   0        0        0     9389 2023-04-07 17:38:15.184996 litestar-2.0.0a3/litestar/utils/predicates.py
│ │ +-rw-r--r--   0        0        0     2720 2023-04-07 17:38:15.184996 litestar-2.0.0a3/litestar/utils/scope.py
│ │ +-rw-r--r--   0        0        0      992 2023-04-07 17:38:15.184996 litestar-2.0.0a3/litestar/utils/sequence.py
│ │ +-rw-r--r--   0        0        0     1970 2023-04-07 17:38:15.184996 litestar-2.0.0a3/litestar/utils/signature_parsing.py
│ │ +-rw-r--r--   0        0        0     5351 2023-04-07 17:38:15.184996 litestar-2.0.0a3/litestar/utils/sync.py
│ │ +-rw-r--r--   0        0        0     6156 2023-04-07 17:38:15.184996 litestar-2.0.0a3/litestar/utils/typing.py
│ │ +-rw-r--r--   0        0        0     1921 2023-04-07 17:38:15.188996 litestar-2.0.0a3/litestar/utils/version.py
│ │ +-rw-r--r--   0        0        0     9225 2023-04-07 17:38:15.188996 litestar-2.0.0a3/pyproject.toml
│ │ +-rw-r--r--   0        0        0    50598 1970-01-01 00:00:00.000000 litestar-2.0.0a3/PKG-INFO
│ │   --- litestar-1.0.0a0/LICENSE
│ ├── +++ litestar-2.0.0a3/LICENSE
│ │┄ Files 3% similar despite different names
│ │ @@ -1,10 +1,10 @@
│ │  The MIT License (MIT)
│ │  
│ │ -Copyright (c) 2021, 2022 Litestar-API
│ │ +Copyright (c) 2021, 2022, 2023 Litestar Org.
│ │  
│ │  Permission is hereby granted, free of charge, to any person obtaining a copy
│ │  of this software and associated documentation files (the "Software"), to deal
│ │  in the Software without restriction, including without limitation the rights
│ │  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
│ │  copies of the Software, and to permit persons to whom the Software is
│ │  furnished to do so, subject to the following conditions:
│ │   --- litestar-1.0.0a0/README.md
│ ├── +++ litestar-2.0.0a3/PKG-INFO
│ │┄ Files 19% similar despite different names
│ │ @@ -1,59 +1,140 @@
│ │ +Metadata-Version: 2.1
│ │ +Name: litestar
│ │ +Version: 2.0.0a3
│ │ +Summary: Performant, light and flexible ASGI API Framework
│ │ +Home-page: https://litestar.dev/
│ │ +License: MIT
│ │ +Keywords: api,rest,http,asgi,pydantic,litestar,starlite,framework,websocket,litestar
│ │ +Author: Na'aman Hirschfeld
│ │ +Author-email: nhirschfeld@gmail.com
│ │ +Maintainer: Na'aman Hirschfeld
│ │ +Maintainer-email: nhirschfeld@gmail.com
│ │ +Requires-Python: >=3.8,<4.0
│ │ +Classifier: Development Status :: 5 - Production/Stable
│ │ +Classifier: Environment :: Web Environment
│ │ +Classifier: License :: OSI Approved :: MIT License
│ │ +Classifier: Natural Language :: English
│ │ +Classifier: Operating System :: OS Independent
│ │ +Classifier: Programming Language :: Python
│ │ +Classifier: Programming Language :: Python :: 3
│ │ +Classifier: Programming Language :: Python :: 3.8
│ │ +Classifier: Programming Language :: Python :: 3.9
│ │ +Classifier: Programming Language :: Python :: 3.10
│ │ +Classifier: Programming Language :: Python :: 3.11
│ │ +Classifier: Programming Language :: Python :: 3.10
│ │ +Classifier: Programming Language :: Python :: 3.11
│ │ +Classifier: Programming Language :: Python :: 3.8
│ │ +Classifier: Programming Language :: Python :: 3.9
│ │ +Classifier: Topic :: Internet :: WWW/HTTP
│ │ +Classifier: Topic :: Software Development
│ │ +Classifier: Topic :: Software Development :: Libraries
│ │ +Classifier: Typing :: Typed
│ │ +Provides-Extra: attrs
│ │ +Provides-Extra: brotli
│ │ +Provides-Extra: cli
│ │ +Provides-Extra: cryptography
│ │ +Provides-Extra: full
│ │ +Provides-Extra: jinja
│ │ +Provides-Extra: jwt
│ │ +Provides-Extra: opentelemetry
│ │ +Provides-Extra: picologging
│ │ +Provides-Extra: redis
│ │ +Provides-Extra: sqlalchemy
│ │ +Provides-Extra: standard
│ │ +Provides-Extra: structlog
│ │ +Provides-Extra: tortoise-orm
│ │ +Requires-Dist: alembic ; extra == "sqlalchemy"
│ │ +Requires-Dist: anyio (>=3)
│ │ +Requires-Dist: attrs ; extra == "attrs"
│ │ +Requires-Dist: brotli ; extra == "brotli" or extra == "full"
│ │ +Requires-Dist: cattrs ; extra == "attrs"
│ │ +Requires-Dist: click ; extra == "cli" or extra == "standard" or extra == "full"
│ │ +Requires-Dist: cryptography ; extra == "cryptography" or extra == "jwt" or extra == "full"
│ │ +Requires-Dist: fast-query-parsers
│ │ +Requires-Dist: httpx (>=0.22)
│ │ +Requires-Dist: importlib-metadata ; python_version < "3.10"
│ │ +Requires-Dist: jinja2 (>=3.1.2) ; extra == "jinja" or extra == "standard" or extra == "full"
│ │ +Requires-Dist: jsbeautifier ; extra == "cli" or extra == "standard" or extra == "full"
│ │ +Requires-Dist: mako (>=1.2.4)
│ │ +Requires-Dist: msgspec
│ │ +Requires-Dist: multidict (>=6.0.2)
│ │ +Requires-Dist: opentelemetry-instrumentation-asgi ; extra == "opentelemetry" or extra == "full"
│ │ +Requires-Dist: picologging ; extra == "picologging" or extra == "full"
│ │ +Requires-Dist: polyfactory
│ │ +Requires-Dist: pydantic (<2)
│ │ +Requires-Dist: python-dateutil ; extra == "attrs"
│ │ +Requires-Dist: python-jose ; extra == "jwt" or extra == "full"
│ │ +Requires-Dist: pytimeparse ; extra == "attrs"
│ │ +Requires-Dist: pyyaml
│ │ +Requires-Dist: redis[hiredis] (>=4.4.4,!=4.5.0,!=4.5.1,!=4.5.2,!=4.5.3) ; extra == "redis" or extra == "full"
│ │ +Requires-Dist: rich (>=13.0.0) ; extra == "cli" or extra == "standard" or extra == "full"
│ │ +Requires-Dist: sqlalchemy (>=2.0.4) ; extra == "sqlalchemy"
│ │ +Requires-Dist: structlog ; extra == "structlog" or extra == "full"
│ │ +Requires-Dist: typing-extensions
│ │ +Project-URL: Documentation, https://docs.litestar.dev/
│ │ +Project-URL: Repository, https://github.com/litestar-org/litestar
│ │ +Description-Content-Type: text/markdown
│ │ +
│ │  <!-- markdownlint-disable -->
│ │  <p align="center">
│ │ -  <img src="artwork/SVG/logo-banner-inline-light.svg#gh-light-mode-only" alt="Litestar Logo - Light" width="100%" height="auto" />
│ │ -  <img src="artwork/SVG/logo-banner-inline-dark.svg#gh-dark-mode-only" alt="Litestar Logo - Dark" width="100%" height="auto" />
│ │ +  <img src="artwork/banner-light.svg#gh-light-mode-only" alt="Litestar Logo - Light" width="100%" height="auto" />
│ │ +  <img src="artwork/banner-dark.svg#gh-dark-mode-only" alt="Litestar Logo - Dark" width="100%" height="auto" />
│ │  </p>
│ │  <!-- markdownlint-restore -->
│ │  
│ │  <div align="center">
│ │  
│ │ -[![ci](https://github.com/starlite-api/litestar/actions/workflows/ci.yaml/badge.svg)](https://github.com/starlite-api/litestar/actions/workflows/ci.yaml)
│ │ +[![ci](https://github.com/litestar-org/litestar/actions/workflows/ci.yaml/badge.svg)](https://github.com/litestar-org/litestar/actions/workflows/ci.yaml)
│ │  [![PyPI - Version](https://badge.fury.io/py/litestar.svg)](https://badge.fury.io/py/litestar)
│ │  ![PyPI - License](https://img.shields.io/pypi/l/litestar?color=blue)
│ │  ![PyPI - Support Python Versions](https://img.shields.io/pypi/pyversions/litestar)
│ │  
│ │ -[![Coverage](https://sonarcloud.io/api/project_badges/measure?project=litestar-api_litestar&metric=coverage)](https://sonarcloud.io/summary/new_code?id=litestar-api_litestar)
│ │ -[![Quality Gate Status](https://sonarcloud.io/api/project_badges/measure?project=litestar-api_litestar&metric=alert_status)](https://sonarcloud.io/summary/new_code?id=litestar-api_litestar)
│ │ -[![Maintainability Rating](https://sonarcloud.io/api/project_badges/measure?project=litestar-api_litestar&metric=sqale_rating)](https://sonarcloud.io/summary/new_code?id=litestar-api_litestar)
│ │ -[![Reliability Rating](https://sonarcloud.io/api/project_badges/measure?project=litestar-api_litestar&metric=reliability_rating)](https://sonarcloud.io/summary/new_code?id=litestar-api_litestar)
│ │ -[![Security Rating](https://sonarcloud.io/api/project_badges/measure?project=litestar-api_litestar&metric=security_rating)](https://sonarcloud.io/summary/new_code?id=litestar-api_litestar)
│ │ +[![Coverage](https://sonarcloud.io/api/project_badges/measure?project=litestar-org_litestar&metric=coverage)](https://sonarcloud.io/summary/new_code?id=litestar-org_litestar)
│ │ +[![Quality Gate Status](https://sonarcloud.io/api/project_badges/measure?project=litestar-org_litestar&metric=alert_status)](https://sonarcloud.io/summary/new_code?id=litestar-org_litestar)
│ │ +[![Maintainability Rating](https://sonarcloud.io/api/project_badges/measure?project=litestar-org_litestar&metric=sqale_rating)](https://sonarcloud.io/summary/new_code?id=litestar-org_litestar)
│ │ +[![Reliability Rating](https://sonarcloud.io/api/project_badges/measure?project=litestar-org_litestar&metric=reliability_rating)](https://sonarcloud.io/summary/new_code?id=litestar-org_litestar)
│ │ +[![Security Rating](https://sonarcloud.io/api/project_badges/measure?project=litestar-org_litestar&metric=security_rating)](https://sonarcloud.io/summary/new_code?id=litestar-org_litestar)
│ │  
│ │  <!-- prettier-ignore-start -->
│ │  <!-- ALL-CONTRIBUTORS-BADGE:START - Do not remove or modify this section -->
│ │ -[![All Contributors](https://img.shields.io/badge/all_contributors-91-orange.svg?style=flat-square)](#contributors-)
│ │ +[![All Contributors](https://img.shields.io/badge/all_contributors-92-orange.svg?style=flat-square)](#contributors-)
│ │  <!-- ALL-CONTRIBUTORS-BADGE:END -->
│ │  <!-- prettier-ignore-end -->
│ │  
│ │ -[![Reddit](https://img.shields.io/reddit/subreddit-subscribers/litestar?label=r%2Flitestar&logo=reddit)](https://reddit.com/r/litestar)
│ │ +[![Reddit](https://img.shields.io/reddit/subreddit-subscribers/litestar?label=r%2FLitestar&logo=reddit)](https://reddit.com/r/litestar-api)
│ │  [![Discord](https://img.shields.io/discord/919193495116337154?color=blue&label=chat%20on%20discord&logo=discord)](https://discord.gg/X3FJqy8d2j)
│ │ -[![Matrix](https://img.shields.io/badge/%5Bm%5D%20chat%20on%20Matrix-bridged-blue)](https://matrix.to/#/#litestarspace:matrix.org)
│ │ -[![Medium](https://img.shields.io/badge/Medium-12100E?style=flat&logo=medium&logoColor=white)](https://itnext.io/introducing-litestar-3928adaa19ae)
│ │ +[![Matrix](https://img.shields.io/badge/%5Bm%5D%20chat%20on%20Matrix-bridged-blue)](https://matrix.to/#/#litestar:matrix.org)
│ │ +[![Medium](https://img.shields.io/badge/Medium-12100E?style=flat&logo=medium&logoColor=white)](https://blog.litestar.dev)
│ │  
│ │  </div>
│ │  
│ │ -# Litestar
│ │ +# Starlite → Litestar
│ │ +
│ │ +**[Starlite has been renamed to Litestar](https://litestar.dev/about/organization.html#litestar-and-starlite)**
│ │ +
│ │ +<hr>
│ │  
│ │  Litestar is a powerful, performant, flexible and opinionated ASGI framework,
│ │  offering first class typing support and a full [Pydantic](https://github.com/samuelcolvin/pydantic)
│ │  integration.
│ │  
│ │ -Check out the [documentation 📚](https://litestar-api.github.io/litestar/).
│ │ +Check out the [documentation 📚](https://docs.litestar.dev/).
│ │  
│ │  ## Installation
│ │  
│ │  ```shell
│ │  pip install litestar
│ │  ```
│ │  
│ │  **Litestar 2.0 is coming out soon**, bringing many new features and improvements.
│ │  You can check out the alpha version by instead running
│ │  
│ │  ```shell
│ │ -pip install litestar==2.0.0alpha2
│ │ +pip install litestar==2.0.0alpha3
│ │  ```
│ │  
│ │  ## Quick Start
│ │  
│ │  ```python
│ │  from litestar import Litestar, get
│ │  
│ │ @@ -88,33 +169,26 @@
│ │    - [Swagger-UI](https://swagger.io/tools/swagger-ui/)
│ │  - Support for dataclasses and `TypedDict`
│ │  - [Trio](https://trio.readthedocs.io/en/stable/) support (built-in, via [AnyIO](https://anyio.readthedocs.io/))
│ │  - Ultra-fast json serialization and deserialization using [msgspec](https://github.com/jcrist/msgspec)
│ │  
│ │  ## Example Applications
│ │  
│ │ -- [litestar-pg-redis-docker](https://github.com/starlite-api/litestar-pg-redis-docker): In addition to Litestar, this
│ │ +- [starlite-pg-redis-docker](https://github.com/litestar-org/starlite-pg-redis-docker): In addition to Litestar, this
│ │    demonstrates a pattern of application modularity, SQLAlchemy 2.0 ORM, Redis cache connectivity, and more. Like all
│ │    Litestar projects, this application is open to contributions, big and small.
│ │ -- [litestar-hello-world](https://github.com/starlite-api/litestar-hello-world): A bare-minimum application setup. Great
│ │ +- [litestar-hello-world](https://github.com/litestar-org/litestar-hello-world): A bare-minimum application setup. Great
│ │    for testing and POC work.
│ │  
│ │ -## The name `Litestar` and relation to `Starlette`
│ │ -
│ │ -Litestar was originally built using the [Starlette ASGI toolkit](https://www.starlette.io/). The name `Litestar` was
│ │ -meant to show this relation. But, over time Litestar grew in capabilities and complexity, and eventually we no longer needed
│ │ -to depend on Starlette. From version `1.39.0` onward `starlette` was removed as a dependency of Litestar, and the name now carries
│ │ -this piece of history with it.
│ │ -
│ │  ## Performance
│ │  
│ │  Litestar is fast. It is on par with, or significantly faster than comparable ASGI frameworks.
│ │  
│ │ -You can see and run the benchmarks [here](https://github.com/starlite-api/api-performance-tests),
│ │ -or read more about it [here](https://litestar-api.github.io/litestar/latest/benchmarks) in our documentation.
│ │ +You can see and run the benchmarks [here](https://github.com/litestar-org/api-performance-tests),
│ │ +or read more about it [here](https://docs.litestar.dev/latest/benchmarks) in our documentation.
│ │  
│ │  ### JSON Benchmarks
│ │  
│ │  ![JSON benchmarks](docs/images/benchmarks/rps_json.svg)
│ │  
│ │  ### Plaintext Benchmarks
│ │  
│ │ @@ -242,18 +316,16 @@
│ │  ### Route Guards
│ │  
│ │  Litestar has an authorization mechanism called `guards`, which allows the user to define guard functions at different
│ │  level of the application (app, router, controller etc.) and validate the request before hitting the route handler
│ │  function.
│ │  
│ │  ```python
│ │ -from litestar import (
│ │ -    Litestar,
│ │ -    get,
│ │ -)
│ │ +from litestar import Litestar, get
│ │ +
│ │  from litestar.connection import ASGIConnection
│ │  from litestar.handlers.base import BaseRouteHandler
│ │  from litestar.exceptions import NotAuthorizedException
│ │  
│ │  
│ │  async def is_authorized(connection: ASGIConnection, handler: BaseRouteHandler) -> None:
│ │      # validate authorization
│ │ @@ -272,147 +344,151 @@
│ │  ### Request Life Cycle Hooks
│ │  
│ │  Litestar supports request life cycle hooks, similarly to Flask - i.e. `before_request` and `after_request`
│ │  
│ │  ## Contributing
│ │  
│ │  Litestar is open to contributions big and small. You can always [join our discord](https://discord.gg/X3FJqy8d2j) server
│ │ -or [join our Matrix](https://matrix.to/#/#litestarspace:matrix.org) space
│ │ +or [join our Matrix](https://matrix.to/#/#litestar:matrix.org) space
│ │  to discuss contributions and project maintenance. For guidelines on how to contribute, please
│ │  see [the contribution guide](CONTRIBUTING.rst).
│ │  
│ │  ## Contributors ✨
│ │  
│ │  Thanks goes to these wonderful people ([emoji key](https://allcontributors.org/docs/en/emoji-key)):
│ │  
│ │  <!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section -->
│ │  <!-- prettier-ignore-start -->
│ │  <!-- markdownlint-disable -->
│ │  <table>
│ │    <tbody>
│ │      <tr>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="https://www.linkedin.com/in/nhirschfeld/"><img src="https://avatars.githubusercontent.com/u/30733348?v=4?s=100" width="100px;" alt="Na'aman Hirschfeld"/><br /><sub><b>Na'aman Hirschfeld</b></sub></a><br /><a href="#maintenance-Goldziher" title="Maintenance">🚧</a> <a href="https://github.com/starlite-api/litestar/commits?author=Goldziher" title="Code">💻</a> <a href="https://github.com/starlite-api/litestar/commits?author=Goldziher" title="Documentation">📖</a> <a href="https://github.com/starlite-api/litestar/commits?author=Goldziher" title="Tests">⚠️</a> <a href="#ideas-Goldziher" title="Ideas, Planning, & Feedback">🤔</a> <a href="#example-Goldziher" title="Examples">💡</a> <a href="https://github.com/starlite-api/litestar/issues?q=author%3AGoldziher" title="Bug reports">🐛</a></td>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="https://github.com/peterschutt"><img src="https://avatars.githubusercontent.com/u/20659309?v=4?s=100" width="100px;" alt="Peter Schutt"/><br /><sub><b>Peter Schutt</b></sub></a><br /><a href="#maintenance-peterschutt" title="Maintenance">🚧</a> <a href="https://github.com/starlite-api/litestar/commits?author=peterschutt" title="Code">💻</a> <a href="https://github.com/starlite-api/litestar/commits?author=peterschutt" title="Documentation">📖</a> <a href="https://github.com/starlite-api/litestar/commits?author=peterschutt" title="Tests">⚠️</a> <a href="#ideas-peterschutt" title="Ideas, Planning, & Feedback">🤔</a> <a href="#example-peterschutt" title="Examples">💡</a> <a href="https://github.com/starlite-api/litestar/issues?q=author%3Apeterschutt" title="Bug reports">🐛</a></td>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="https://ashwinvin.github.io"><img src="https://avatars.githubusercontent.com/u/38067089?v=4?s=100" width="100px;" alt="Ashwin Vinod"/><br /><sub><b>Ashwin Vinod</b></sub></a><br /><a href="https://github.com/starlite-api/litestar/commits?author=ashwinvin" title="Code">💻</a> <a href="https://github.com/starlite-api/litestar/commits?author=ashwinvin" title="Documentation">📖</a></td>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="http://www.damiankress.de"><img src="https://avatars.githubusercontent.com/u/28515387?v=4?s=100" width="100px;" alt="Damian"/><br /><sub><b>Damian</b></sub></a><br /><a href="https://github.com/starlite-api/litestar/commits?author=dkress59" title="Documentation">📖</a></td>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="https://remotepixel.ca"><img src="https://avatars.githubusercontent.com/u/10407788?v=4?s=100" width="100px;" alt="Vincent Sarago"/><br /><sub><b>Vincent Sarago</b></sub></a><br /><a href="https://github.com/starlite-api/litestar/commits?author=vincentsarago" title="Code">💻</a></td>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="https://www.linkedin.com/in/nhirschfeld/"><img src="https://avatars.githubusercontent.com/u/30733348?v=4?s=100" width="100px;" alt="Na'aman Hirschfeld"/><br /><sub><b>Na'aman Hirschfeld</b></sub></a><br /><a href="#maintenance-Goldziher" title="Maintenance">🚧</a> <a href="https://github.com/litestar-org/litestar/commits?author=Goldziher" title="Code">💻</a> <a href="https://github.com/litestar-org/litestar/commits?author=Goldziher" title="Documentation">📖</a> <a href="https://github.com/litestar-org/litestar/commits?author=Goldziher" title="Tests">⚠️</a> <a href="#ideas-Goldziher" title="Ideas, Planning, & Feedback">🤔</a> <a href="#example-Goldziher" title="Examples">💡</a> <a href="https://github.com/litestar-org/litestar/issues?q=author%3AGoldziher" title="Bug reports">🐛</a></td>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="https://github.com/peterschutt"><img src="https://avatars.githubusercontent.com/u/20659309?v=4?s=100" width="100px;" alt="Peter Schutt"/><br /><sub><b>Peter Schutt</b></sub></a><br /><a href="#maintenance-peterschutt" title="Maintenance">🚧</a> <a href="https://github.com/litestar-org/litestar/commits?author=peterschutt" title="Code">💻</a> <a href="https://github.com/litestar-org/litestar/commits?author=peterschutt" title="Documentation">📖</a> <a href="https://github.com/litestar-org/litestar/commits?author=peterschutt" title="Tests">⚠️</a> <a href="#ideas-peterschutt" title="Ideas, Planning, & Feedback">🤔</a> <a href="#example-peterschutt" title="Examples">💡</a> <a href="https://github.com/litestar-org/litestar/issues?q=author%3Apeterschutt" title="Bug reports">🐛</a></td>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="https://ashwinvin.github.io"><img src="https://avatars.githubusercontent.com/u/38067089?v=4?s=100" width="100px;" alt="Ashwin Vinod"/><br /><sub><b>Ashwin Vinod</b></sub></a><br /><a href="https://github.com/litestar-org/litestar/commits?author=ashwinvin" title="Code">💻</a> <a href="https://github.com/litestar-org/litestar/commits?author=ashwinvin" title="Documentation">📖</a></td>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="http://www.damiankress.de"><img src="https://avatars.githubusercontent.com/u/28515387?v=4?s=100" width="100px;" alt="Damian"/><br /><sub><b>Damian</b></sub></a><br /><a href="https://github.com/litestar-org/litestar/commits?author=dkress59" title="Documentation">📖</a></td>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="https://remotepixel.ca"><img src="https://avatars.githubusercontent.com/u/10407788?v=4?s=100" width="100px;" alt="Vincent Sarago"/><br /><sub><b>Vincent Sarago</b></sub></a><br /><a href="https://github.com/litestar-org/litestar/commits?author=vincentsarago" title="Code">💻</a></td>
│ │        <td align="center" valign="top" width="14.28%"><a href="https://hotfix.guru"><img src="https://avatars.githubusercontent.com/u/5310116?v=4?s=100" width="100px;" alt="Jonas Krüger Svensson"/><br /><sub><b>Jonas Krüger Svensson</b></sub></a><br /><a href="#platform-JonasKs" title="Packaging/porting to new platform">📦</a></td>
│ │        <td align="center" valign="top" width="14.28%"><a href="https://github.com/sondrelg"><img src="https://avatars.githubusercontent.com/u/25310870?v=4?s=100" width="100px;" alt="Sondre Lillebø Gundersen"/><br /><sub><b>Sondre Lillebø Gundersen</b></sub></a><br /><a href="#platform-sondrelg" title="Packaging/porting to new platform">📦</a></td>
│ │      </tr>
│ │      <tr>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="https://github.com/vrslev"><img src="https://avatars.githubusercontent.com/u/75225148?v=4?s=100" width="100px;" alt="Lev"/><br /><sub><b>Lev</b></sub></a><br /><a href="https://github.com/starlite-api/litestar/commits?author=vrslev" title="Code">💻</a> <a href="#ideas-vrslev" title="Ideas, Planning, & Feedback">🤔</a></td>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="https://github.com/timwedde"><img src="https://avatars.githubusercontent.com/u/20231751?v=4?s=100" width="100px;" alt="Tim Wedde"/><br /><sub><b>Tim Wedde</b></sub></a><br /><a href="https://github.com/starlite-api/litestar/commits?author=timwedde" title="Code">💻</a></td>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="https://github.com/tclasen"><img src="https://avatars.githubusercontent.com/u/11999013?v=4?s=100" width="100px;" alt="Tory Clasen"/><br /><sub><b>Tory Clasen</b></sub></a><br /><a href="https://github.com/starlite-api/litestar/commits?author=tclasen" title="Code">💻</a></td>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="http://t.me/Bobronium"><img src="https://avatars.githubusercontent.com/u/36469655?v=4?s=100" width="100px;" alt="Arseny Boykov"/><br /><sub><b>Arseny Boykov</b></sub></a><br /><a href="https://github.com/starlite-api/litestar/commits?author=Bobronium" title="Code">💻</a> <a href="#ideas-Bobronium" title="Ideas, Planning, & Feedback">🤔</a></td>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="https://github.com/vrslev"><img src="https://avatars.githubusercontent.com/u/75225148?v=4?s=100" width="100px;" alt="Lev"/><br /><sub><b>Lev</b></sub></a><br /><a href="https://github.com/litestar-org/litestar/commits?author=vrslev" title="Code">💻</a> <a href="#ideas-vrslev" title="Ideas, Planning, & Feedback">🤔</a></td>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="https://github.com/timwedde"><img src="https://avatars.githubusercontent.com/u/20231751?v=4?s=100" width="100px;" alt="Tim Wedde"/><br /><sub><b>Tim Wedde</b></sub></a><br /><a href="https://github.com/litestar-org/litestar/commits?author=timwedde" title="Code">💻</a></td>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="https://github.com/tclasen"><img src="https://avatars.githubusercontent.com/u/11999013?v=4?s=100" width="100px;" alt="Tory Clasen"/><br /><sub><b>Tory Clasen</b></sub></a><br /><a href="https://github.com/litestar-org/litestar/commits?author=tclasen" title="Code">💻</a></td>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="http://t.me/Bobronium"><img src="https://avatars.githubusercontent.com/u/36469655?v=4?s=100" width="100px;" alt="Arseny Boykov"/><br /><sub><b>Arseny Boykov</b></sub></a><br /><a href="https://github.com/litestar-org/litestar/commits?author=Bobronium" title="Code">💻</a> <a href="#ideas-Bobronium" title="Ideas, Planning, & Feedback">🤔</a></td>
│ │        <td align="center" valign="top" width="14.28%"><a href="https://github.com/yudjinn"><img src="https://avatars.githubusercontent.com/u/7493084?v=4?s=100" width="100px;" alt="Jacob Rodgers"/><br /><sub><b>Jacob Rodgers</b></sub></a><br /><a href="#example-yudjinn" title="Examples">💡</a></td>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="https://github.com/danesolberg"><img src="https://avatars.githubusercontent.com/u/25882507?v=4?s=100" width="100px;" alt="Dane Solberg"/><br /><sub><b>Dane Solberg</b></sub></a><br /><a href="https://github.com/starlite-api/litestar/commits?author=danesolberg" title="Code">💻</a></td>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="https://github.com/madlad33"><img src="https://avatars.githubusercontent.com/u/54079440?v=4?s=100" width="100px;" alt="madlad33"/><br /><sub><b>madlad33</b></sub></a><br /><a href="https://github.com/starlite-api/litestar/commits?author=madlad33" title="Code">💻</a></td>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="https://github.com/danesolberg"><img src="https://avatars.githubusercontent.com/u/25882507?v=4?s=100" width="100px;" alt="Dane Solberg"/><br /><sub><b>Dane Solberg</b></sub></a><br /><a href="https://github.com/litestar-org/litestar/commits?author=danesolberg" title="Code">💻</a></td>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="https://github.com/madlad33"><img src="https://avatars.githubusercontent.com/u/54079440?v=4?s=100" width="100px;" alt="madlad33"/><br /><sub><b>madlad33</b></sub></a><br /><a href="https://github.com/litestar-org/litestar/commits?author=madlad33" title="Code">💻</a></td>
│ │      </tr>
│ │      <tr>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="http://matthewtyleraylward.com"><img src="https://avatars.githubusercontent.com/u/19205392?v=4?s=100" width="100px;" alt="Matthew Aylward "/><br /><sub><b>Matthew Aylward </b></sub></a><br /><a href="https://github.com/starlite-api/litestar/commits?author=Butch78" title="Code">💻</a></td>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="https://github.com/Joko013"><img src="https://avatars.githubusercontent.com/u/30841710?v=4?s=100" width="100px;" alt="Jan Klima"/><br /><sub><b>Jan Klima</b></sub></a><br /><a href="https://github.com/starlite-api/litestar/commits?author=Joko013" title="Code">💻</a></td>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="https://github.com/i404788"><img src="https://avatars.githubusercontent.com/u/50617709?v=4?s=100" width="100px;" alt="C2D"/><br /><sub><b>C2D</b></sub></a><br /><a href="https://github.com/starlite-api/litestar/commits?author=i404788" title="Tests">⚠️</a></td>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="https://github.com/to-ph"><img src="https://avatars.githubusercontent.com/u/84818322?v=4?s=100" width="100px;" alt="to-ph"/><br /><sub><b>to-ph</b></sub></a><br /><a href="https://github.com/starlite-api/litestar/commits?author=to-ph" title="Code">💻</a></td>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="https://imbev.gitlab.io/site"><img src="https://avatars.githubusercontent.com/u/105524473?v=4?s=100" width="100px;" alt="imbev"/><br /><sub><b>imbev</b></sub></a><br /><a href="https://github.com/starlite-api/litestar/commits?author=imbev" title="Documentation">📖</a></td>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="https://git.roboces.dev/catalin"><img src="https://avatars.githubusercontent.com/u/45485069?v=4?s=100" width="100px;" alt="cătălin"/><br /><sub><b>cătălin</b></sub></a><br /><a href="https://github.com/starlite-api/litestar/commits?author=185504a9" title="Code">💻</a></td>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="https://github.com/Seon82"><img src="https://avatars.githubusercontent.com/u/46298009?v=4?s=100" width="100px;" alt="Seon82"/><br /><sub><b>Seon82</b></sub></a><br /><a href="https://github.com/starlite-api/litestar/commits?author=Seon82" title="Documentation">📖</a></td>
│ │ -    </tr>
│ │ -    <tr>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="https://github.com/slavugan"><img src="https://avatars.githubusercontent.com/u/8457612?v=4?s=100" width="100px;" alt="Slava"/><br /><sub><b>Slava</b></sub></a><br /><a href="https://github.com/starlite-api/litestar/commits?author=slavugan" title="Code">💻</a></td>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="https://github.com/Harry-Lees"><img src="https://avatars.githubusercontent.com/u/52263746?v=4?s=100" width="100px;" alt="Harry"/><br /><sub><b>Harry</b></sub></a><br /><a href="https://github.com/starlite-api/litestar/commits?author=Harry-Lees" title="Code">💻</a> <a href="https://github.com/starlite-api/litestar/commits?author=Harry-Lees" title="Documentation">📖</a></td>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="https://github.com/cofin"><img src="https://avatars.githubusercontent.com/u/204685?v=4?s=100" width="100px;" alt="Cody Fincher"/><br /><sub><b>Cody Fincher</b></sub></a><br /><a href="#maintenance-cofin" title="Maintenance">🚧</a> <a href="https://github.com/starlite-api/litestar/commits?author=cofin" title="Code">💻</a> <a href="https://github.com/starlite-api/litestar/commits?author=cofin" title="Documentation">📖</a> <a href="https://github.com/starlite-api/litestar/commits?author=cofin" title="Tests">⚠️</a> <a href="#ideas-cofin" title="Ideas, Planning, & Feedback">🤔</a> <a href="#example-cofin" title="Examples">💡</a> <a href="https://github.com/starlite-api/litestar/issues?q=author%3Acofin" title="Bug reports">🐛</a></td>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="https://www.patreon.com/cclauss"><img src="https://avatars.githubusercontent.com/u/3709715?v=4?s=100" width="100px;" alt="Christian Clauss"/><br /><sub><b>Christian Clauss</b></sub></a><br /><a href="https://github.com/starlite-api/litestar/commits?author=cclauss" title="Documentation">📖</a></td>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="https://github.com/josepdaniel"><img src="https://avatars.githubusercontent.com/u/36941460?v=4?s=100" width="100px;" alt="josepdaniel"/><br /><sub><b>josepdaniel</b></sub></a><br /><a href="https://github.com/starlite-api/litestar/commits?author=josepdaniel" title="Code">💻</a></td>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="https://github.com/devtud"><img src="https://avatars.githubusercontent.com/u/6808024?v=4?s=100" width="100px;" alt="devtud"/><br /><sub><b>devtud</b></sub></a><br /><a href="https://github.com/starlite-api/litestar/issues?q=author%3Adevtud" title="Bug reports">🐛</a></td>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="https://github.com/nramos0"><img src="https://avatars.githubusercontent.com/u/35410160?v=4?s=100" width="100px;" alt="Nicholas Ramos"/><br /><sub><b>Nicholas Ramos</b></sub></a><br /><a href="https://github.com/starlite-api/litestar/commits?author=nramos0" title="Code">💻</a></td>
│ │ -    </tr>
│ │ -    <tr>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="https://twitter.com/seladb"><img src="https://avatars.githubusercontent.com/u/9059541?v=4?s=100" width="100px;" alt="seladb"/><br /><sub><b>seladb</b></sub></a><br /><a href="https://github.com/starlite-api/litestar/commits?author=seladb" title="Documentation">📖</a> <a href="https://github.com/starlite-api/litestar/commits?author=seladb" title="Code">💻</a></td>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="https://github.com/aedify-swi"><img src="https://avatars.githubusercontent.com/u/66629131?v=4?s=100" width="100px;" alt="Simon Wienhöfer"/><br /><sub><b>Simon Wienhöfer</b></sub></a><br /><a href="https://github.com/starlite-api/litestar/commits?author=aedify-swi" title="Code">💻</a></td>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="https://github.com/mobiusxs"><img src="https://avatars.githubusercontent.com/u/57055149?v=4?s=100" width="100px;" alt="MobiusXS"/><br /><sub><b>MobiusXS</b></sub></a><br /><a href="https://github.com/starlite-api/litestar/commits?author=mobiusxs" title="Code">💻</a></td>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="http://aidansimard.dev"><img src="https://avatars.githubusercontent.com/u/73361895?v=4?s=100" width="100px;" alt="Aidan Simard"/><br /><sub><b>Aidan Simard</b></sub></a><br /><a href="https://github.com/starlite-api/litestar/commits?author=Aidan-Simard" title="Documentation">📖</a></td>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="https://github.com/waweber"><img src="https://avatars.githubusercontent.com/u/714224?v=4?s=100" width="100px;" alt="wweber"/><br /><sub><b>wweber</b></sub></a><br /><a href="https://github.com/starlite-api/litestar/commits?author=waweber" title="Code">💻</a></td>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="http://scolvin.com"><img src="https://avatars.githubusercontent.com/u/4039449?v=4?s=100" width="100px;" alt="Samuel Colvin"/><br /><sub><b>Samuel Colvin</b></sub></a><br /><a href="https://github.com/starlite-api/litestar/commits?author=samuelcolvin" title="Code">💻</a></td>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="https://github.com/toudi"><img src="https://avatars.githubusercontent.com/u/81148?v=4?s=100" width="100px;" alt="Mateusz Mikołajczyk"/><br /><sub><b>Mateusz Mikołajczyk</b></sub></a><br /><a href="https://github.com/starlite-api/litestar/commits?author=toudi" title="Code">💻</a></td>
│ │ -    </tr>
│ │ -    <tr>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="https://github.com/Alex-CodeLab"><img src="https://avatars.githubusercontent.com/u/1678423?v=4?s=100" width="100px;" alt="Alex "/><br /><sub><b>Alex </b></sub></a><br /><a href="https://github.com/starlite-api/litestar/commits?author=Alex-CodeLab" title="Code">💻</a></td>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="https://github.com/odiseo0"><img src="https://avatars.githubusercontent.com/u/87550035?v=4?s=100" width="100px;" alt="Odiseo"/><br /><sub><b>Odiseo</b></sub></a><br /><a href="https://github.com/starlite-api/litestar/commits?author=odiseo0" title="Documentation">📖</a></td>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="https://github.com/ingjavierpinilla"><img src="https://avatars.githubusercontent.com/u/36714646?v=4?s=100" width="100px;" alt="Javier  Pinilla"/><br /><sub><b>Javier  Pinilla</b></sub></a><br /><a href="https://github.com/starlite-api/litestar/commits?author=ingjavierpinilla" title="Code">💻</a></td>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="https://github.com/Chaoyingz"><img src="https://avatars.githubusercontent.com/u/32626585?v=4?s=100" width="100px;" alt="Chaoying"/><br /><sub><b>Chaoying</b></sub></a><br /><a href="https://github.com/starlite-api/litestar/commits?author=Chaoyingz" title="Documentation">📖</a></td>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="https://github.com/infohash"><img src="https://avatars.githubusercontent.com/u/46137868?v=4?s=100" width="100px;" alt="infohash"/><br /><sub><b>infohash</b></sub></a><br /><a href="https://github.com/starlite-api/litestar/commits?author=infohash" title="Code">💻</a></td>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="https://www.linkedin.com/in/john-ingles/"><img src="https://avatars.githubusercontent.com/u/35442886?v=4?s=100" width="100px;" alt="John Ingles"/><br /><sub><b>John Ingles</b></sub></a><br /><a href="https://github.com/starlite-api/litestar/commits?author=john-ingles" title="Code">💻</a></td>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="https://github.com/h0rn3t"><img src="https://avatars.githubusercontent.com/u/1213719?v=4?s=100" width="100px;" alt="Eugene"/><br /><sub><b>Eugene</b></sub></a><br /><a href="https://github.com/starlite-api/litestar/commits?author=h0rn3t" title="Tests">⚠️</a> <a href="https://github.com/starlite-api/litestar/commits?author=h0rn3t" title="Code">💻</a></td>
│ │ -    </tr>
│ │ -    <tr>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="https://github.com/jonadaly"><img src="https://avatars.githubusercontent.com/u/26462826?v=4?s=100" width="100px;" alt="Jon Daly"/><br /><sub><b>Jon Daly</b></sub></a><br /><a href="https://github.com/starlite-api/litestar/commits?author=jonadaly" title="Documentation">📖</a> <a href="https://github.com/starlite-api/litestar/commits?author=jonadaly" title="Code">💻</a></td>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="https://harshallaheri.me/"><img src="https://avatars.githubusercontent.com/u/73422191?v=4?s=100" width="100px;" alt="Harshal Laheri"/><br /><sub><b>Harshal Laheri</b></sub></a><br /><a href="https://github.com/starlite-api/litestar/commits?author=Harshal6927" title="Code">💻</a> <a href="https://github.com/starlite-api/litestar/commits?author=Harshal6927" title="Documentation">📖</a></td>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="https://github.com/sorasful"><img src="https://avatars.githubusercontent.com/u/32820423?v=4?s=100" width="100px;" alt="Téva KRIEF"/><br /><sub><b>Téva KRIEF</b></sub></a><br /><a href="https://github.com/starlite-api/litestar/commits?author=sorasful" title="Code">💻</a></td>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="https://github.com/jtraub"><img src="https://avatars.githubusercontent.com/u/153191?v=4?s=100" width="100px;" alt="Konstantin Mikhailov"/><br /><sub><b>Konstantin Mikhailov</b></sub></a><br /><a href="#maintenance-jtraub" title="Maintenance">🚧</a> <a href="https://github.com/starlite-api/litestar/commits?author=jtraub" title="Code">💻</a> <a href="https://github.com/starlite-api/litestar/commits?author=jtraub" title="Documentation">📖</a> <a href="https://github.com/starlite-api/litestar/commits?author=jtraub" title="Tests">⚠️</a> <a href="#ideas-jtraub" title="Ideas, Planning, & Feedback">🤔</a> <a href="#example-jtraub" title="Examples">💡</a> <a href="https://github.com/starlite-api/litestar/issues?q=author%3Ajtraub" title="Bug reports">🐛</a></td>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="http://linkedin.com/in/mitchell-henry334/"><img src="https://avatars.githubusercontent.com/u/17354727?v=4?s=100" width="100px;" alt="Mitchell Henry"/><br /><sub><b>Mitchell Henry</b></sub></a><br /><a href="https://github.com/starlite-api/litestar/commits?author=devmitch" title="Documentation">📖</a></td>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="https://github.com/chbndrhnns"><img src="https://avatars.githubusercontent.com/u/7534547?v=4?s=100" width="100px;" alt="chbndrhnns"/><br /><sub><b>chbndrhnns</b></sub></a><br /><a href="https://github.com/starlite-api/litestar/commits?author=chbndrhnns" title="Documentation">📖</a></td>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="https://github.com/nielsvanhooy"><img src="https://avatars.githubusercontent.com/u/40770348?v=4?s=100" width="100px;" alt="nielsvanhooy"/><br /><sub><b>nielsvanhooy</b></sub></a><br /><a href="https://github.com/starlite-api/litestar/commits?author=nielsvanhooy" title="Code">💻</a></td>
│ │ -    </tr>
│ │ -    <tr>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="https://github.com/provinzkraut"><img src="https://avatars.githubusercontent.com/u/25355197?v=4?s=100" width="100px;" alt="provinzkraut"/><br /><sub><b>provinzkraut</b></sub></a><br /><a href="#maintenance-provinzkraut" title="Maintenance">🚧</a> <a href="https://github.com/starlite-api/litestar/commits?author=provinzkraut" title="Code">💻</a> <a href="https://github.com/starlite-api/litestar/commits?author=provinzkraut" title="Documentation">📖</a> <a href="https://github.com/starlite-api/litestar/commits?author=provinzkraut" title="Tests">⚠️</a> <a href="#ideas-provinzkraut" title="Ideas, Planning, & Feedback">🤔</a> <a href="#example-provinzkraut" title="Examples">💡</a> <a href="https://github.com/starlite-api/litestar/issues?q=author%3Aprovinzkraut" title="Bug reports">🐛</a></td>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="https://github.com/jab"><img src="https://avatars.githubusercontent.com/u/64992?v=4?s=100" width="100px;" alt="Joshua Bronson"/><br /><sub><b>Joshua Bronson</b></sub></a><br /><a href="https://github.com/starlite-api/litestar/commits?author=jab" title="Documentation">📖</a></td>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="http://linkedin.com/in/roman-reznikov"><img src="https://avatars.githubusercontent.com/u/44291988?v=4?s=100" width="100px;" alt="Roman Reznikov"/><br /><sub><b>Roman Reznikov</b></sub></a><br /><a href="https://github.com/starlite-api/litestar/commits?author=ReznikovRoman" title="Documentation">📖</a></td>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="http://mookrs.com"><img src="https://avatars.githubusercontent.com/u/985439?v=4?s=100" width="100px;" alt="mookrs"/><br /><sub><b>mookrs</b></sub></a><br /><a href="https://github.com/starlite-api/litestar/commits?author=mookrs" title="Documentation">📖</a></td>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="http://mike.depalatis.net"><img src="https://avatars.githubusercontent.com/u/2805515?v=4?s=100" width="100px;" alt="Mike DePalatis"/><br /><sub><b>Mike DePalatis</b></sub></a><br /><a href="https://github.com/starlite-api/litestar/commits?author=mivade" title="Documentation">📖</a></td>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="https://github.com/pemocarlo"><img src="https://avatars.githubusercontent.com/u/7297323?v=4?s=100" width="100px;" alt="Carlos Alberto Pérez-Molano"/><br /><sub><b>Carlos Alberto Pérez-Molano</b></sub></a><br /><a href="https://github.com/starlite-api/litestar/commits?author=pemocarlo" title="Documentation">📖</a></td>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="https://www.bestcryptocodes.com"><img src="https://avatars.githubusercontent.com/u/114229148?v=4?s=100" width="100px;" alt="ThinksFast"/><br /><sub><b>ThinksFast</b></sub></a><br /><a href="https://github.com/starlite-api/litestar/commits?author=ThinksFast" title="Tests">⚠️</a> <a href="https://github.com/starlite-api/litestar/commits?author=ThinksFast" title="Documentation">📖</a></td>
│ │ -    </tr>
│ │ -    <tr>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="https://github.com/ottermata"><img src="https://avatars.githubusercontent.com/u/9451844?v=4?s=100" width="100px;" alt="Christopher Krause"/><br /><sub><b>Christopher Krause</b></sub></a><br /><a href="https://github.com/starlite-api/litestar/commits?author=ottermata" title="Code">💻</a></td>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="http://www.kylesmith.me"><img src="https://avatars.githubusercontent.com/u/1161424?v=4?s=100" width="100px;" alt="Kyle Smith"/><br /><sub><b>Kyle Smith</b></sub></a><br /><a href="https://github.com/starlite-api/litestar/commits?author=smithk86" title="Code">💻</a> <a href="https://github.com/starlite-api/litestar/commits?author=smithk86" title="Documentation">📖</a></td>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="https://github.com/scott2b"><img src="https://avatars.githubusercontent.com/u/307713?v=4?s=100" width="100px;" alt="Scott Bradley"/><br /><sub><b>Scott Bradley</b></sub></a><br /><a href="https://github.com/starlite-api/litestar/issues?q=author%3Ascott2b" title="Bug reports">🐛</a></td>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="https://www.linkedin.com/in/srikanthccv/"><img src="https://avatars.githubusercontent.com/u/22846633?v=4?s=100" width="100px;" alt="Srikanth Chekuri"/><br /><sub><b>Srikanth Chekuri</b></sub></a><br /><a href="https://github.com/starlite-api/litestar/commits?author=srikanthccv" title="Tests">⚠️</a> <a href="https://github.com/starlite-api/litestar/commits?author=srikanthccv" title="Documentation">📖</a></td>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="https://lonelyviking.com"><img src="https://avatars.githubusercontent.com/u/78952809?v=4?s=100" width="100px;" alt="Michael Bosch"/><br /><sub><b>Michael Bosch</b></sub></a><br /><a href="https://github.com/starlite-api/litestar/commits?author=LonelyVikingMichael" title="Documentation">📖</a></td>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="https://github.com/sssssss340"><img src="https://avatars.githubusercontent.com/u/8406195?v=4?s=100" width="100px;" alt="sssssss340"/><br /><sub><b>sssssss340</b></sub></a><br /><a href="https://github.com/starlite-api/litestar/issues?q=author%3Asssssss340" title="Bug reports">🐛</a></td>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="https://github.com/ste-pool"><img src="https://avatars.githubusercontent.com/u/17198460?v=4?s=100" width="100px;" alt="ste-pool"/><br /><sub><b>ste-pool</b></sub></a><br /><a href="https://github.com/starlite-api/litestar/commits?author=ste-pool" title="Code">💻</a> <a href="#infra-ste-pool" title="Infrastructure (Hosting, Build-Tools, etc)">🚇</a></td>
│ │ -    </tr>
│ │ -    <tr>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="https://github.com/Alc-Alc"><img src="https://avatars.githubusercontent.com/u/45509143?v=4?s=100" width="100px;" alt="Alc-Alc"/><br /><sub><b>Alc-Alc</b></sub></a><br /><a href="https://github.com/starlite-api/litestar/commits?author=Alc-Alc" title="Documentation">📖</a> <a href="https://github.com/starlite-api/litestar/commits?author=Alc-Alc" title="Code">💻</a></td>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="http://asomethings.com"><img src="https://avatars.githubusercontent.com/u/16171942?v=4?s=100" width="100px;" alt="asomethings"/><br /><sub><b>asomethings</b></sub></a><br /><a href="https://github.com/starlite-api/litestar/commits?author=asomethings" title="Code">💻</a></td>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="https://github.com/garburator"><img src="https://avatars.githubusercontent.com/u/14207857?v=4?s=100" width="100px;" alt="Garry Bullock"/><br /><sub><b>Garry Bullock</b></sub></a><br /><a href="https://github.com/starlite-api/litestar/commits?author=garburator" title="Documentation">📖</a></td>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="https://github.com/NiclasHaderer"><img src="https://avatars.githubusercontent.com/u/109728711?v=4?s=100" width="100px;" alt="Niclas Haderer"/><br /><sub><b>Niclas Haderer</b></sub></a><br /><a href="https://github.com/starlite-api/litestar/commits?author=NiclasHaderer" title="Code">💻</a></td>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="https://github.com/dialvarezs"><img src="https://avatars.githubusercontent.com/u/13831919?v=4?s=100" width="100px;" alt="Diego Alvarez"/><br /><sub><b>Diego Alvarez</b></sub></a><br /><a href="https://github.com/starlite-api/litestar/commits?author=dialvarezs" title="Documentation">📖</a> <a href="https://github.com/starlite-api/litestar/commits?author=dialvarezs" title="Code">💻</a></td>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="https://www.rgare.com"><img src="https://avatars.githubusercontent.com/u/51208317?v=4?s=100" width="100px;" alt="Jason Nance"/><br /><sub><b>Jason Nance</b></sub></a><br /><a href="https://github.com/starlite-api/litestar/commits?author=rgajason" title="Documentation">📖</a></td>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="https://github.com/spikenn"><img src="https://avatars.githubusercontent.com/u/32995595?v=4?s=100" width="100px;" alt="Igor Kapadze"/><br /><sub><b>Igor Kapadze</b></sub></a><br /><a href="https://github.com/starlite-api/litestar/commits?author=spikenn" title="Documentation">📖</a></td>
│ │ -    </tr>
│ │ -    <tr>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="https://jarmos.vercel.app"><img src="https://avatars.githubusercontent.com/u/31373860?v=4?s=100" width="100px;" alt="Somraj Saha"/><br /><sub><b>Somraj Saha</b></sub></a><br /><a href="https://github.com/starlite-api/litestar/commits?author=Jarmos-san" title="Documentation">📖</a></td>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="http://skulason.me"><img src="https://avatars.githubusercontent.com/u/11139514?v=4?s=100" width="100px;" alt="Magnús Ágúst Skúlason"/><br /><sub><b>Magnús Ágúst Skúlason</b></sub></a><br /><a href="https://github.com/starlite-api/litestar/commits?author=maggias" title="Code">💻</a> <a href="https://github.com/starlite-api/litestar/commits?author=maggias" title="Documentation">📖</a></td>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="https://alessioparma.xyz/"><img src="https://avatars.githubusercontent.com/u/4697032?v=4?s=100" width="100px;" alt="Alessio Parma"/><br /><sub><b>Alessio Parma</b></sub></a><br /><a href="https://github.com/starlite-api/litestar/commits?author=pomma89" title="Documentation">📖</a></td>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="https://github.com/Lugoues"><img src="https://avatars.githubusercontent.com/u/372610?v=4?s=100" width="100px;" alt="Peter Brunner"/><br /><sub><b>Peter Brunner</b></sub></a><br /><a href="https://github.com/starlite-api/litestar/commits?author=Lugoues" title="Code">💻</a></td>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="https://scriptr.dev/"><img src="https://avatars.githubusercontent.com/u/45884264?v=4?s=100" width="100px;" alt="Jacob Coffee"/><br /><sub><b>Jacob Coffee</b></sub></a><br /><a href="https://github.com/starlite-api/litestar/commits?author=JacobCoffee" title="Documentation">📖</a> <a href="https://github.com/starlite-api/litestar/commits?author=JacobCoffee" title="Code">💻</a> <a href="https://github.com/starlite-api/litestar/commits?author=JacobCoffee" title="Tests">⚠️</a></td>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="https://github.com/Gamazic"><img src="https://avatars.githubusercontent.com/u/33692402?v=4?s=100" width="100px;" alt="Gamazic"/><br /><sub><b>Gamazic</b></sub></a><br /><a href="https://github.com/starlite-api/litestar/commits?author=Gamazic" title="Code">💻</a></td>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="https://github.com/kareemmahlees"><img src="https://avatars.githubusercontent.com/u/89863279?v=4?s=100" width="100px;" alt="Kareem Mahlees"/><br /><sub><b>Kareem Mahlees</b></sub></a><br /><a href="https://github.com/starlite-api/litestar/commits?author=kareemmahlees" title="Code">💻</a></td>
│ │ -    </tr>
│ │ -    <tr>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="https://github.com/abdulhaq-e"><img src="https://avatars.githubusercontent.com/u/2532125?v=4?s=100" width="100px;" alt="Abdulhaq Emhemmed"/><br /><sub><b>Abdulhaq Emhemmed</b></sub></a><br /><a href="https://github.com/starlite-api/litestar/commits?author=abdulhaq-e" title="Code">💻</a></td>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="https://github.com/jenish2014"><img src="https://avatars.githubusercontent.com/u/9599888?v=4?s=100" width="100px;" alt="Jenish"/><br /><sub><b>Jenish</b></sub></a><br /><a href="https://github.com/starlite-api/litestar/commits?author=jenish2014" title="Code">💻</a> <a href="https://github.com/starlite-api/litestar/commits?author=jenish2014" title="Documentation">📖</a></td>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="https://github.com/chris-telemetry"><img src="https://avatars.githubusercontent.com/u/78052999?v=4?s=100" width="100px;" alt="chris-telemetry"/><br /><sub><b>chris-telemetry</b></sub></a><br /><a href="https://github.com/starlite-api/litestar/commits?author=chris-telemetry" title="Code">💻</a></td>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="http://wardpearce.com"><img src="https://avatars.githubusercontent.com/u/27844174?v=4?s=100" width="100px;" alt="Ward"/><br /><sub><b>Ward</b></sub></a><br /><a href="https://github.com/starlite-api/litestar/issues?q=author%3AWardPearce" title="Bug reports">🐛</a></td>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="https://knowsuchagency.com"><img src="https://avatars.githubusercontent.com/u/11974795?v=4?s=100" width="100px;" alt="Stephan Fitzpatrick"/><br /><sub><b>Stephan Fitzpatrick</b></sub></a><br /><a href="https://github.com/starlite-api/litestar/issues?q=author%3Aknowsuchagency" title="Bug reports">🐛</a></td>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="https://codepen.io/ekeric13/"><img src="https://avatars.githubusercontent.com/u/6489651?v=4?s=100" width="100px;" alt="Eric Kennedy"/><br /><sub><b>Eric Kennedy</b></sub></a><br /><a href="https://github.com/starlite-api/litestar/commits?author=ekeric13" title="Documentation">📖</a></td>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="https://github.com/wassafshahzad"><img src="https://avatars.githubusercontent.com/u/25094157?v=4?s=100" width="100px;" alt="wassaf shahzad"/><br /><sub><b>wassaf shahzad</b></sub></a><br /><a href="https://github.com/starlite-api/litestar/commits?author=wassafshahzad" title="Code">💻</a></td>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="http://matthewtyleraylward.com"><img src="https://avatars.githubusercontent.com/u/19205392?v=4?s=100" width="100px;" alt="Matthew Aylward "/><br /><sub><b>Matthew Aylward </b></sub></a><br /><a href="https://github.com/litestar-org/litestar/commits?author=Butch78" title="Code">💻</a></td>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="https://github.com/Joko013"><img src="https://avatars.githubusercontent.com/u/30841710?v=4?s=100" width="100px;" alt="Jan Klima"/><br /><sub><b>Jan Klima</b></sub></a><br /><a href="https://github.com/litestar-org/litestar/commits?author=Joko013" title="Code">💻</a></td>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="https://github.com/i404788"><img src="https://avatars.githubusercontent.com/u/50617709?v=4?s=100" width="100px;" alt="C2D"/><br /><sub><b>C2D</b></sub></a><br /><a href="https://github.com/litestar-org/litestar/commits?author=i404788" title="Tests">⚠️</a></td>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="https://github.com/to-ph"><img src="https://avatars.githubusercontent.com/u/84818322?v=4?s=100" width="100px;" alt="to-ph"/><br /><sub><b>to-ph</b></sub></a><br /><a href="https://github.com/litestar-org/litestar/commits?author=to-ph" title="Code">💻</a></td>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="https://imbev.gitlab.io/site"><img src="https://avatars.githubusercontent.com/u/105524473?v=4?s=100" width="100px;" alt="imbev"/><br /><sub><b>imbev</b></sub></a><br /><a href="https://github.com/litestar-org/litestar/commits?author=imbev" title="Documentation">📖</a></td>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="https://git.roboces.dev/catalin"><img src="https://avatars.githubusercontent.com/u/45485069?v=4?s=100" width="100px;" alt="cătălin"/><br /><sub><b>cătălin</b></sub></a><br /><a href="https://github.com/litestar-org/litestar/commits?author=185504a9" title="Code">💻</a></td>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="https://github.com/Seon82"><img src="https://avatars.githubusercontent.com/u/46298009?v=4?s=100" width="100px;" alt="Seon82"/><br /><sub><b>Seon82</b></sub></a><br /><a href="https://github.com/litestar-org/litestar/commits?author=Seon82" title="Documentation">📖</a></td>
│ │ +    </tr>
│ │ +    <tr>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="https://github.com/slavugan"><img src="https://avatars.githubusercontent.com/u/8457612?v=4?s=100" width="100px;" alt="Slava"/><br /><sub><b>Slava</b></sub></a><br /><a href="https://github.com/litestar-org/litestar/commits?author=slavugan" title="Code">💻</a></td>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="https://github.com/Harry-Lees"><img src="https://avatars.githubusercontent.com/u/52263746?v=4?s=100" width="100px;" alt="Harry"/><br /><sub><b>Harry</b></sub></a><br /><a href="https://github.com/litestar-org/litestar/commits?author=Harry-Lees" title="Code">💻</a> <a href="https://github.com/litestar-org/litestar/commits?author=Harry-Lees" title="Documentation">📖</a></td>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="https://github.com/cofin"><img src="https://avatars.githubusercontent.com/u/204685?v=4?s=100" width="100px;" alt="Cody Fincher"/><br /><sub><b>Cody Fincher</b></sub></a><br /><a href="#maintenance-cofin" title="Maintenance">🚧</a> <a href="https://github.com/litestar-org/litestar/commits?author=cofin" title="Code">💻</a> <a href="https://github.com/litestar-org/litestar/commits?author=cofin" title="Documentation">📖</a> <a href="https://github.com/litestar-org/litestar/commits?author=cofin" title="Tests">⚠️</a> <a href="#ideas-cofin" title="Ideas, Planning, & Feedback">🤔</a> <a href="#example-cofin" title="Examples">💡</a> <a href="https://github.com/litestar-org/litestar/issues?q=author%3Acofin" title="Bug reports">🐛</a></td>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="https://www.patreon.com/cclauss"><img src="https://avatars.githubusercontent.com/u/3709715?v=4?s=100" width="100px;" alt="Christian Clauss"/><br /><sub><b>Christian Clauss</b></sub></a><br /><a href="https://github.com/litestar-org/litestar/commits?author=cclauss" title="Documentation">📖</a></td>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="https://github.com/josepdaniel"><img src="https://avatars.githubusercontent.com/u/36941460?v=4?s=100" width="100px;" alt="josepdaniel"/><br /><sub><b>josepdaniel</b></sub></a><br /><a href="https://github.com/litestar-org/litestar/commits?author=josepdaniel" title="Code">💻</a></td>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="https://github.com/devtud"><img src="https://avatars.githubusercontent.com/u/6808024?v=4?s=100" width="100px;" alt="devtud"/><br /><sub><b>devtud</b></sub></a><br /><a href="https://github.com/litestar-org/litestar/issues?q=author%3Adevtud" title="Bug reports">🐛</a></td>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="https://github.com/nramos0"><img src="https://avatars.githubusercontent.com/u/35410160?v=4?s=100" width="100px;" alt="Nicholas Ramos"/><br /><sub><b>Nicholas Ramos</b></sub></a><br /><a href="https://github.com/litestar-org/litestar/commits?author=nramos0" title="Code">💻</a></td>
│ │ +    </tr>
│ │ +    <tr>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="https://twitter.com/seladb"><img src="https://avatars.githubusercontent.com/u/9059541?v=4?s=100" width="100px;" alt="seladb"/><br /><sub><b>seladb</b></sub></a><br /><a href="https://github.com/litestar-org/litestar/commits?author=seladb" title="Documentation">📖</a> <a href="https://github.com/litestar-org/litestar/commits?author=seladb" title="Code">💻</a></td>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="https://github.com/aedify-swi"><img src="https://avatars.githubusercontent.com/u/66629131?v=4?s=100" width="100px;" alt="Simon Wienhöfer"/><br /><sub><b>Simon Wienhöfer</b></sub></a><br /><a href="https://github.com/litestar-org/litestar/commits?author=aedify-swi" title="Code">💻</a></td>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="https://github.com/mobiusxs"><img src="https://avatars.githubusercontent.com/u/57055149?v=4?s=100" width="100px;" alt="MobiusXS"/><br /><sub><b>MobiusXS</b></sub></a><br /><a href="https://github.com/litestar-org/litestar/commits?author=mobiusxs" title="Code">💻</a></td>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="http://aidansimard.dev"><img src="https://avatars.githubusercontent.com/u/73361895?v=4?s=100" width="100px;" alt="Aidan Simard"/><br /><sub><b>Aidan Simard</b></sub></a><br /><a href="https://github.com/litestar-org/litestar/commits?author=Aidan-Simard" title="Documentation">📖</a></td>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="https://github.com/waweber"><img src="https://avatars.githubusercontent.com/u/714224?v=4?s=100" width="100px;" alt="wweber"/><br /><sub><b>wweber</b></sub></a><br /><a href="https://github.com/litestar-org/litestar/commits?author=waweber" title="Code">💻</a></td>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="http://scolvin.com"><img src="https://avatars.githubusercontent.com/u/4039449?v=4?s=100" width="100px;" alt="Samuel Colvin"/><br /><sub><b>Samuel Colvin</b></sub></a><br /><a href="https://github.com/litestar-org/litestar/commits?author=samuelcolvin" title="Code">💻</a></td>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="https://github.com/toudi"><img src="https://avatars.githubusercontent.com/u/81148?v=4?s=100" width="100px;" alt="Mateusz Mikołajczyk"/><br /><sub><b>Mateusz Mikołajczyk</b></sub></a><br /><a href="https://github.com/litestar-org/litestar/commits?author=toudi" title="Code">💻</a></td>
│ │ +    </tr>
│ │ +    <tr>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="https://github.com/Alex-CodeLab"><img src="https://avatars.githubusercontent.com/u/1678423?v=4?s=100" width="100px;" alt="Alex "/><br /><sub><b>Alex </b></sub></a><br /><a href="https://github.com/litestar-org/litestar/commits?author=Alex-CodeLab" title="Code">💻</a></td>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="https://github.com/odiseo0"><img src="https://avatars.githubusercontent.com/u/87550035?v=4?s=100" width="100px;" alt="Odiseo"/><br /><sub><b>Odiseo</b></sub></a><br /><a href="https://github.com/litestar-org/litestar/commits?author=odiseo0" title="Documentation">📖</a></td>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="https://github.com/ingjavierpinilla"><img src="https://avatars.githubusercontent.com/u/36714646?v=4?s=100" width="100px;" alt="Javier  Pinilla"/><br /><sub><b>Javier  Pinilla</b></sub></a><br /><a href="https://github.com/litestar-org/litestar/commits?author=ingjavierpinilla" title="Code">💻</a></td>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="https://github.com/Chaoyingz"><img src="https://avatars.githubusercontent.com/u/32626585?v=4?s=100" width="100px;" alt="Chaoying"/><br /><sub><b>Chaoying</b></sub></a><br /><a href="https://github.com/litestar-org/litestar/commits?author=Chaoyingz" title="Documentation">📖</a></td>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="https://github.com/infohash"><img src="https://avatars.githubusercontent.com/u/46137868?v=4?s=100" width="100px;" alt="infohash"/><br /><sub><b>infohash</b></sub></a><br /><a href="https://github.com/litestar-org/litestar/commits?author=infohash" title="Code">💻</a></td>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="https://www.linkedin.com/in/john-ingles/"><img src="https://avatars.githubusercontent.com/u/35442886?v=4?s=100" width="100px;" alt="John Ingles"/><br /><sub><b>John Ingles</b></sub></a><br /><a href="https://github.com/litestar-org/litestar/commits?author=john-ingles" title="Code">💻</a></td>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="https://github.com/h0rn3t"><img src="https://avatars.githubusercontent.com/u/1213719?v=4?s=100" width="100px;" alt="Eugene"/><br /><sub><b>Eugene</b></sub></a><br /><a href="https://github.com/litestar-org/litestar/commits?author=h0rn3t" title="Tests">⚠️</a> <a href="https://github.com/litestar-org/litestar/commits?author=h0rn3t" title="Code">💻</a></td>
│ │ +    </tr>
│ │ +    <tr>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="https://github.com/jonadaly"><img src="https://avatars.githubusercontent.com/u/26462826?v=4?s=100" width="100px;" alt="Jon Daly"/><br /><sub><b>Jon Daly</b></sub></a><br /><a href="https://github.com/litestar-org/litestar/commits?author=jonadaly" title="Documentation">📖</a> <a href="https://github.com/litestar-org/litestar/commits?author=jonadaly" title="Code">💻</a></td>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="https://harshallaheri.me/"><img src="https://avatars.githubusercontent.com/u/73422191?v=4?s=100" width="100px;" alt="Harshal Laheri"/><br /><sub><b>Harshal Laheri</b></sub></a><br /><a href="https://github.com/litestar-org/litestar/commits?author=Harshal6927" title="Code">💻</a> <a href="https://github.com/litestar-org/litestar/commits?author=Harshal6927" title="Documentation">📖</a></td>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="https://github.com/sorasful"><img src="https://avatars.githubusercontent.com/u/32820423?v=4?s=100" width="100px;" alt="Téva KRIEF"/><br /><sub><b>Téva KRIEF</b></sub></a><br /><a href="https://github.com/litestar-org/litestar/commits?author=sorasful" title="Code">💻</a></td>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="https://github.com/jtraub"><img src="https://avatars.githubusercontent.com/u/153191?v=4?s=100" width="100px;" alt="Konstantin Mikhailov"/><br /><sub><b>Konstantin Mikhailov</b></sub></a><br /><a href="#maintenance-jtraub" title="Maintenance">🚧</a> <a href="https://github.com/litestar-org/litestar/commits?author=jtraub" title="Code">💻</a> <a href="https://github.com/litestar-org/litestar/commits?author=jtraub" title="Documentation">📖</a> <a href="https://github.com/litestar-org/litestar/commits?author=jtraub" title="Tests">⚠️</a> <a href="#ideas-jtraub" title="Ideas, Planning, & Feedback">🤔</a> <a href="#example-jtraub" title="Examples">💡</a> <a href="https://github.com/litestar-org/litestar/issues?q=author%3Ajtraub" title="Bug reports">🐛</a></td>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="http://linkedin.com/in/mitchell-henry334/"><img src="https://avatars.githubusercontent.com/u/17354727?v=4?s=100" width="100px;" alt="Mitchell Henry"/><br /><sub><b>Mitchell Henry</b></sub></a><br /><a href="https://github.com/litestar-org/litestar/commits?author=devmitch" title="Documentation">📖</a></td>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="https://github.com/chbndrhnns"><img src="https://avatars.githubusercontent.com/u/7534547?v=4?s=100" width="100px;" alt="chbndrhnns"/><br /><sub><b>chbndrhnns</b></sub></a><br /><a href="https://github.com/litestar-org/litestar/commits?author=chbndrhnns" title="Documentation">📖</a></td>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="https://github.com/nielsvanhooy"><img src="https://avatars.githubusercontent.com/u/40770348?v=4?s=100" width="100px;" alt="nielsvanhooy"/><br /><sub><b>nielsvanhooy</b></sub></a><br /><a href="https://github.com/litestar-org/litestar/commits?author=nielsvanhooy" title="Code">💻</a></td>
│ │ +    </tr>
│ │ +    <tr>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="https://github.com/provinzkraut"><img src="https://avatars.githubusercontent.com/u/25355197?v=4?s=100" width="100px;" alt="provinzkraut"/><br /><sub><b>provinzkraut</b></sub></a><br /><a href="#maintenance-provinzkraut" title="Maintenance">🚧</a> <a href="https://github.com/litestar-org/litestar/commits?author=provinzkraut" title="Code">💻</a> <a href="https://github.com/litestar-org/litestar/commits?author=provinzkraut" title="Documentation">📖</a> <a href="https://github.com/litestar-org/litestar/commits?author=provinzkraut" title="Tests">⚠️</a> <a href="#ideas-provinzkraut" title="Ideas, Planning, & Feedback">🤔</a> <a href="#example-provinzkraut" title="Examples">💡</a> <a href="https://github.com/litestar-org/litestar/issues?q=author%3Aprovinzkraut" title="Bug reports">🐛</a></td>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="https://github.com/jab"><img src="https://avatars.githubusercontent.com/u/64992?v=4?s=100" width="100px;" alt="Joshua Bronson"/><br /><sub><b>Joshua Bronson</b></sub></a><br /><a href="https://github.com/litestar-org/litestar/commits?author=jab" title="Documentation">📖</a></td>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="http://linkedin.com/in/roman-reznikov"><img src="https://avatars.githubusercontent.com/u/44291988?v=4?s=100" width="100px;" alt="Roman Reznikov"/><br /><sub><b>Roman Reznikov</b></sub></a><br /><a href="https://github.com/litestar-org/litestar/commits?author=ReznikovRoman" title="Documentation">📖</a></td>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="http://mookrs.com"><img src="https://avatars.githubusercontent.com/u/985439?v=4?s=100" width="100px;" alt="mookrs"/><br /><sub><b>mookrs</b></sub></a><br /><a href="https://github.com/litestar-org/litestar/commits?author=mookrs" title="Documentation">📖</a></td>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="http://mike.depalatis.net"><img src="https://avatars.githubusercontent.com/u/2805515?v=4?s=100" width="100px;" alt="Mike DePalatis"/><br /><sub><b>Mike DePalatis</b></sub></a><br /><a href="https://github.com/litestar-org/litestar/commits?author=mivade" title="Documentation">📖</a></td>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="https://github.com/pemocarlo"><img src="https://avatars.githubusercontent.com/u/7297323?v=4?s=100" width="100px;" alt="Carlos Alberto Pérez-Molano"/><br /><sub><b>Carlos Alberto Pérez-Molano</b></sub></a><br /><a href="https://github.com/litestar-org/litestar/commits?author=pemocarlo" title="Documentation">📖</a></td>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="https://www.bestcryptocodes.com"><img src="https://avatars.githubusercontent.com/u/114229148?v=4?s=100" width="100px;" alt="ThinksFast"/><br /><sub><b>ThinksFast</b></sub></a><br /><a href="https://github.com/litestar-org/litestar/commits?author=ThinksFast" title="Tests">⚠️</a> <a href="https://github.com/litestar-org/litestar/commits?author=ThinksFast" title="Documentation">📖</a></td>
│ │ +    </tr>
│ │ +    <tr>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="https://github.com/ottermata"><img src="https://avatars.githubusercontent.com/u/9451844?v=4?s=100" width="100px;" alt="Christopher Krause"/><br /><sub><b>Christopher Krause</b></sub></a><br /><a href="https://github.com/litestar-org/litestar/commits?author=ottermata" title="Code">💻</a></td>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="http://www.kylesmith.me"><img src="https://avatars.githubusercontent.com/u/1161424?v=4?s=100" width="100px;" alt="Kyle Smith"/><br /><sub><b>Kyle Smith</b></sub></a><br /><a href="https://github.com/litestar-org/litestar/commits?author=smithk86" title="Code">💻</a> <a href="https://github.com/litestar-org/litestar/commits?author=smithk86" title="Documentation">📖</a></td>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="https://github.com/scott2b"><img src="https://avatars.githubusercontent.com/u/307713?v=4?s=100" width="100px;" alt="Scott Bradley"/><br /><sub><b>Scott Bradley</b></sub></a><br /><a href="https://github.com/litestar-org/litestar/issues?q=author%3Ascott2b" title="Bug reports">🐛</a></td>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="https://www.linkedin.com/in/srikanthccv/"><img src="https://avatars.githubusercontent.com/u/22846633?v=4?s=100" width="100px;" alt="Srikanth Chekuri"/><br /><sub><b>Srikanth Chekuri</b></sub></a><br /><a href="https://github.com/litestar-org/litestar/commits?author=srikanthccv" title="Tests">⚠️</a> <a href="https://github.com/litestar-org/litestar/commits?author=srikanthccv" title="Documentation">📖</a></td>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="https://lonelyviking.com"><img src="https://avatars.githubusercontent.com/u/78952809?v=4?s=100" width="100px;" alt="Michael Bosch"/><br /><sub><b>Michael Bosch</b></sub></a><br /><a href="https://github.com/litestar-org/litestar/commits?author=LonelyVikingMichael" title="Documentation">📖</a></td>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="https://github.com/sssssss340"><img src="https://avatars.githubusercontent.com/u/8406195?v=4?s=100" width="100px;" alt="sssssss340"/><br /><sub><b>sssssss340</b></sub></a><br /><a href="https://github.com/litestar-org/litestar/issues?q=author%3Asssssss340" title="Bug reports">🐛</a></td>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="https://github.com/ste-pool"><img src="https://avatars.githubusercontent.com/u/17198460?v=4?s=100" width="100px;" alt="ste-pool"/><br /><sub><b>ste-pool</b></sub></a><br /><a href="https://github.com/litestar-org/litestar/commits?author=ste-pool" title="Code">💻</a> <a href="#infra-ste-pool" title="Infrastructure (Hosting, Build-Tools, etc)">🚇</a></td>
│ │ +    </tr>
│ │ +    <tr>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="https://github.com/Alc-Alc"><img src="https://avatars.githubusercontent.com/u/45509143?v=4?s=100" width="100px;" alt="Alc-Alc"/><br /><sub><b>Alc-Alc</b></sub></a><br /><a href="https://github.com/litestar-org/litestar/commits?author=Alc-Alc" title="Documentation">📖</a> <a href="https://github.com/litestar-org/litestar/commits?author=Alc-Alc" title="Code">💻</a></td>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="http://asomethings.com"><img src="https://avatars.githubusercontent.com/u/16171942?v=4?s=100" width="100px;" alt="asomethings"/><br /><sub><b>asomethings</b></sub></a><br /><a href="https://github.com/litestar-org/litestar/commits?author=asomethings" title="Code">💻</a></td>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="https://github.com/garburator"><img src="https://avatars.githubusercontent.com/u/14207857?v=4?s=100" width="100px;" alt="Garry Bullock"/><br /><sub><b>Garry Bullock</b></sub></a><br /><a href="https://github.com/litestar-org/litestar/commits?author=garburator" title="Documentation">📖</a></td>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="https://github.com/NiclasHaderer"><img src="https://avatars.githubusercontent.com/u/109728711?v=4?s=100" width="100px;" alt="Niclas Haderer"/><br /><sub><b>Niclas Haderer</b></sub></a><br /><a href="https://github.com/litestar-org/litestar/commits?author=NiclasHaderer" title="Code">💻</a></td>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="https://github.com/dialvarezs"><img src="https://avatars.githubusercontent.com/u/13831919?v=4?s=100" width="100px;" alt="Diego Alvarez"/><br /><sub><b>Diego Alvarez</b></sub></a><br /><a href="https://github.com/litestar-org/litestar/commits?author=dialvarezs" title="Documentation">📖</a> <a href="https://github.com/litestar-org/litestar/commits?author=dialvarezs" title="Code">💻</a></td>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="https://www.rgare.com"><img src="https://avatars.githubusercontent.com/u/51208317?v=4?s=100" width="100px;" alt="Jason Nance"/><br /><sub><b>Jason Nance</b></sub></a><br /><a href="https://github.com/litestar-org/litestar/commits?author=rgajason" title="Documentation">📖</a></td>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="https://github.com/spikenn"><img src="https://avatars.githubusercontent.com/u/32995595?v=4?s=100" width="100px;" alt="Igor Kapadze"/><br /><sub><b>Igor Kapadze</b></sub></a><br /><a href="https://github.com/litestar-org/litestar/commits?author=spikenn" title="Documentation">📖</a></td>
│ │ +    </tr>
│ │ +    <tr>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="https://jarmos.vercel.app"><img src="https://avatars.githubusercontent.com/u/31373860?v=4?s=100" width="100px;" alt="Somraj Saha"/><br /><sub><b>Somraj Saha</b></sub></a><br /><a href="https://github.com/litestar-org/litestar/commits?author=Jarmos-san" title="Documentation">📖</a></td>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="http://skulason.me"><img src="https://avatars.githubusercontent.com/u/11139514?v=4?s=100" width="100px;" alt="Magnús Ágúst Skúlason"/><br /><sub><b>Magnús Ágúst Skúlason</b></sub></a><br /><a href="https://github.com/litestar-org/litestar/commits?author=maggias" title="Code">💻</a> <a href="https://github.com/litestar-org/litestar/commits?author=maggias" title="Documentation">📖</a></td>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="https://alessioparma.xyz/"><img src="https://avatars.githubusercontent.com/u/4697032?v=4?s=100" width="100px;" alt="Alessio Parma"/><br /><sub><b>Alessio Parma</b></sub></a><br /><a href="https://github.com/litestar-org/litestar/commits?author=pomma89" title="Documentation">📖</a></td>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="https://github.com/Lugoues"><img src="https://avatars.githubusercontent.com/u/372610?v=4?s=100" width="100px;" alt="Peter Brunner"/><br /><sub><b>Peter Brunner</b></sub></a><br /><a href="https://github.com/litestar-org/litestar/commits?author=Lugoues" title="Code">💻</a></td>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="https://scriptr.dev/"><img src="https://avatars.githubusercontent.com/u/45884264?v=4?s=100" width="100px;" alt="Jacob Coffee"/><br /><sub><b>Jacob Coffee</b></sub></a><br /><a href="https://github.com/litestar-org/litestar/commits?author=JacobCoffee" title="Documentation">📖</a> <a href="https://github.com/litestar-org/litestar/commits?author=JacobCoffee" title="Code">💻</a> <a href="https://github.com/litestar-org/litestar/commits?author=JacobCoffee" title="Tests">⚠️</a></td>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="https://github.com/Gamazic"><img src="https://avatars.githubusercontent.com/u/33692402?v=4?s=100" width="100px;" alt="Gamazic"/><br /><sub><b>Gamazic</b></sub></a><br /><a href="https://github.com/litestar-org/litestar/commits?author=Gamazic" title="Code">💻</a></td>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="https://github.com/kareemmahlees"><img src="https://avatars.githubusercontent.com/u/89863279?v=4?s=100" width="100px;" alt="Kareem Mahlees"/><br /><sub><b>Kareem Mahlees</b></sub></a><br /><a href="https://github.com/litestar-org/litestar/commits?author=kareemmahlees" title="Code">💻</a></td>
│ │ +    </tr>
│ │ +    <tr>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="https://github.com/abdulhaq-e"><img src="https://avatars.githubusercontent.com/u/2532125?v=4?s=100" width="100px;" alt="Abdulhaq Emhemmed"/><br /><sub><b>Abdulhaq Emhemmed</b></sub></a><br /><a href="https://github.com/litestar-org/litestar/commits?author=abdulhaq-e" title="Code">💻</a></td>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="https://github.com/jenish2014"><img src="https://avatars.githubusercontent.com/u/9599888?v=4?s=100" width="100px;" alt="Jenish"/><br /><sub><b>Jenish</b></sub></a><br /><a href="https://github.com/litestar-org/litestar/commits?author=jenish2014" title="Code">💻</a> <a href="https://github.com/litestar-org/litestar/commits?author=jenish2014" title="Documentation">📖</a></td>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="https://github.com/chris-telemetry"><img src="https://avatars.githubusercontent.com/u/78052999?v=4?s=100" width="100px;" alt="chris-telemetry"/><br /><sub><b>chris-telemetry</b></sub></a><br /><a href="https://github.com/litestar-org/litestar/commits?author=chris-telemetry" title="Code">💻</a></td>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="http://wardpearce.com"><img src="https://avatars.githubusercontent.com/u/27844174?v=4?s=100" width="100px;" alt="Ward"/><br /><sub><b>Ward</b></sub></a><br /><a href="https://github.com/litestar-org/litestar/issues?q=author%3AWardPearce" title="Bug reports">🐛</a></td>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="https://knowsuchagency.com"><img src="https://avatars.githubusercontent.com/u/11974795?v=4?s=100" width="100px;" alt="Stephan Fitzpatrick"/><br /><sub><b>Stephan Fitzpatrick</b></sub></a><br /><a href="https://github.com/litestar-org/litestar/issues?q=author%3Aknowsuchagency" title="Bug reports">🐛</a></td>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="https://codepen.io/ekeric13/"><img src="https://avatars.githubusercontent.com/u/6489651?v=4?s=100" width="100px;" alt="Eric Kennedy"/><br /><sub><b>Eric Kennedy</b></sub></a><br /><a href="https://github.com/litestar-org/litestar/commits?author=ekeric13" title="Documentation">📖</a></td>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="https://github.com/wassafshahzad"><img src="https://avatars.githubusercontent.com/u/25094157?v=4?s=100" width="100px;" alt="wassaf shahzad"/><br /><sub><b>wassaf shahzad</b></sub></a><br /><a href="https://github.com/litestar-org/litestar/commits?author=wassafshahzad" title="Code">💻</a></td>
│ │      </tr>
│ │      <tr>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="http://nilsso.github.io"><img src="https://avatars.githubusercontent.com/u/567181?v=4?s=100" width="100px;" alt="Nils Olsson"/><br /><sub><b>Nils Olsson</b></sub></a><br /><a href="https://github.com/starlite-api/litestar/commits?author=nilsso" title="Code">💻</a></td>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="http://rileychase.net"><img src="https://avatars.githubusercontent.com/u/1491530?v=4?s=100" width="100px;" alt="Riley Chase"/><br /><sub><b>Riley Chase</b></sub></a><br /><a href="https://github.com/starlite-api/litestar/commits?author=Nadock" title="Code">💻</a></td>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="http://nilsso.github.io"><img src="https://avatars.githubusercontent.com/u/567181?v=4?s=100" width="100px;" alt="Nils Olsson"/><br /><sub><b>Nils Olsson</b></sub></a><br /><a href="https://github.com/litestar-org/litestar/commits?author=nilsso" title="Code">💻</a></td>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="http://rileychase.net"><img src="https://avatars.githubusercontent.com/u/1491530?v=4?s=100" width="100px;" alt="Riley Chase"/><br /><sub><b>Riley Chase</b></sub></a><br /><a href="https://github.com/litestar-org/litestar/commits?author=Nadock" title="Code">💻</a></td>
│ │        <td align="center" valign="top" width="14.28%"><a href="https://gh.arielle.codes"><img src="https://avatars.githubusercontent.com/u/71233171?v=4?s=100" width="100px;" alt="arl"/><br /><sub><b>arl</b></sub></a><br /><a href="#maintenance-onerandomusername" title="Maintenance">🚧</a></td>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="https://github.com/Galdanwing"><img src="https://avatars.githubusercontent.com/u/29492757?v=4?s=100" width="100px;" alt="Antoine van der Horst"/><br /><sub><b>Antoine van der Horst</b></sub></a><br /><a href="https://github.com/starlite-api/litestar/commits?author=Galdanwing" title="Documentation">📖</a></td>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="https://nick.groenen.me"><img src="https://avatars.githubusercontent.com/u/145285?v=4?s=100" width="100px;" alt="Nick Groenen"/><br /><sub><b>Nick Groenen</b></sub></a><br /><a href="https://github.com/starlite-api/litestar/commits?author=zoni" title="Documentation">📖</a></td>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="https://github.com/giorgiovilardo"><img src="https://avatars.githubusercontent.com/u/56472600?v=4?s=100" width="100px;" alt="Giorgio Vilardo"/><br /><sub><b>Giorgio Vilardo</b></sub></a><br /><a href="https://github.com/starlite-api/litestar/commits?author=giorgiovilardo" title="Documentation">📖</a></td>
│ │ -      <td align="center" valign="top" width="14.28%"><a href="https://github.com/bollwyvl"><img src="https://avatars.githubusercontent.com/u/45380?v=4?s=100" width="100px;" alt="Nicholas Bollweg"/><br /><sub><b>Nicholas Bollweg</b></sub></a><br /><a href="https://github.com/starlite-api/litestar/commits?author=bollwyvl" title="Code">💻</a></td>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="https://github.com/Galdanwing"><img src="https://avatars.githubusercontent.com/u/29492757?v=4?s=100" width="100px;" alt="Antoine van der Horst"/><br /><sub><b>Antoine van der Horst</b></sub></a><br /><a href="https://github.com/litestar-org/litestar/commits?author=Galdanwing" title="Documentation">📖</a></td>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="https://nick.groenen.me"><img src="https://avatars.githubusercontent.com/u/145285?v=4?s=100" width="100px;" alt="Nick Groenen"/><br /><sub><b>Nick Groenen</b></sub></a><br /><a href="https://github.com/litestar-org/litestar/commits?author=zoni" title="Documentation">📖</a></td>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="https://github.com/giorgiovilardo"><img src="https://avatars.githubusercontent.com/u/56472600?v=4?s=100" width="100px;" alt="Giorgio Vilardo"/><br /><sub><b>Giorgio Vilardo</b></sub></a><br /><a href="https://github.com/litestar-org/litestar/commits?author=giorgiovilardo" title="Documentation">📖</a></td>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="https://github.com/bollwyvl"><img src="https://avatars.githubusercontent.com/u/45380?v=4?s=100" width="100px;" alt="Nicholas Bollweg"/><br /><sub><b>Nicholas Bollweg</b></sub></a><br /><a href="https://github.com/litestar-org/litestar/commits?author=bollwyvl" title="Code">💻</a></td>
│ │ +    </tr>
│ │ +    <tr>
│ │ +      <td align="center" valign="top" width="14.28%"><a href="https://github.com/tompin82"><img src="https://avatars.githubusercontent.com/u/47041409?v=4?s=100" width="100px;" alt="Tomas Jonsson"/><br /><sub><b>Tomas Jonsson</b></sub></a><br /><a href="https://github.com/litestar-org/litestar/commits?author=tompin82" title="Tests">⚠️</a></td>
│ │      </tr>
│ │    </tbody>
│ │  </table>
│ │  
│ │  <!-- markdownlint-restore -->
│ │  <!-- prettier-ignore-end -->
│ │  
│ │  <!-- ALL-CONTRIBUTORS-LIST:END -->
│ │  
│ │  This project follows the [all-contributors](https://github.com/all-contributors/all-contributors) specification.
│ │  Contributions of any kind welcome!
│ │ +
│ │   --- litestar-1.0.0a0/litestar/__init__.py
│ ├── +++ litestar-2.0.0a3/litestar/__init__.py
│ │┄ Files 19% similar despite different names
│ │ @@ -1,22 +1,12 @@
│ │  from litestar.app import Litestar
│ │  from litestar.connection import Request, WebSocket
│ │  from litestar.controller import Controller
│ │  from litestar.enums import HttpMethod, MediaType
│ │ -from litestar.handlers import (
│ │ -    asgi,
│ │ -    delete,
│ │ -    get,
│ │ -    head,
│ │ -    patch,
│ │ -    post,
│ │ -    put,
│ │ -    route,
│ │ -    websocket,
│ │ -)
│ │ +from litestar.handlers import asgi, delete, get, head, patch, post, put, route, websocket, websocket_listener
│ │  from litestar.response import Response
│ │  from litestar.router import Router
│ │  from litestar.utils.version import get_version
│ │  
│ │  __version__ = get_version()
│ │  
│ │  
│ │ @@ -34,9 +24,10 @@
│ │      "get",
│ │      "head",
│ │      "patch",
│ │      "post",
│ │      "put",
│ │      "route",
│ │      "websocket",
│ │ +    "websocket_listener",
│ │      "__version__",
│ │  )
│ │   --- litestar-1.0.0a0/litestar/_asgi/asgi_router.py
│ ├── +++ litestar-2.0.0a3/litestar/_asgi/asgi_router.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/_asgi/routing_trie/mapping.py
│ ├── +++ litestar-2.0.0a3/litestar/_asgi/routing_trie/mapping.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/_asgi/routing_trie/traversal.py
│ ├── +++ litestar-2.0.0a3/litestar/_asgi/routing_trie/traversal.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/_asgi/routing_trie/types.py
│ ├── +++ litestar-2.0.0a3/litestar/_asgi/routing_trie/types.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/_asgi/routing_trie/validate.py
│ ├── +++ litestar-2.0.0a3/litestar/_asgi/routing_trie/validate.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/_asgi/utils.py
│ ├── +++ litestar-2.0.0a3/litestar/_asgi/utils.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/_kwargs/cleanup.py
│ ├── +++ litestar-2.0.0a3/litestar/_kwargs/cleanup.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/_kwargs/dependencies.py
│ ├── +++ litestar-2.0.0a3/litestar/_kwargs/dependencies.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/_kwargs/extractors.py
│ ├── +++ litestar-2.0.0a3/litestar/_kwargs/extractors.py
│ │┄ Files 5% similar despite different names
│ │ @@ -1,25 +1,33 @@
│ │  from __future__ import annotations
│ │  
│ │  from collections import defaultdict
│ │  from functools import lru_cache
│ │ -from typing import TYPE_CHECKING, Any, Callable, Coroutine, DefaultDict, Dict, cast
│ │ +from typing import TYPE_CHECKING, Any, Callable, Coroutine, DefaultDict, cast
│ │  
│ │  from litestar._multipart import parse_multipart_form
│ │  from litestar._parsers import (
│ │      parse_headers,
│ │      parse_query_string,
│ │      parse_url_encoded_form_data,
│ │  )
│ │  from litestar.datastructures.upload_file import UploadFile
│ │ +from litestar.dto.interface import DTOInterface
│ │  from litestar.enums import ParamType, RequestEncodingType
│ │  from litestar.exceptions import ValidationException
│ │  from litestar.params import BodyKwarg
│ │  from litestar.types import Empty
│ │  
│ │ +if TYPE_CHECKING:
│ │ +    from litestar._kwargs import KwargsModel
│ │ +    from litestar._kwargs.parameter_definition import ParameterDefinition
│ │ +    from litestar._signature.field import SignatureField
│ │ +    from litestar.connection import ASGIConnection, Request
│ │ +    from litestar.types.parsed_signature import ParsedParameter
│ │ +
│ │  __all__ = (
│ │      "body_extractor",
│ │      "cookies_extractor",
│ │      "create_connection_value_extractor",
│ │      "create_data_extractor",
│ │      "create_multipart_extractor",
│ │      "create_query_default_dict",
│ │ @@ -33,21 +41,14 @@
│ │      "request_extractor",
│ │      "scope_extractor",
│ │      "socket_extractor",
│ │      "state_extractor",
│ │  )
│ │  
│ │  
│ │ -if TYPE_CHECKING:
│ │ -    from litestar._kwargs import KwargsModel
│ │ -    from litestar._kwargs.parameter_definition import ParameterDefinition
│ │ -    from litestar._signature.field import SignatureField
│ │ -    from litestar.connection import ASGIConnection, Request
│ │ -
│ │ -
│ │  def create_connection_value_extractor(
│ │      kwargs_model: KwargsModel,
│ │      connection_key: str,
│ │      expected_params: set[ParameterDefinition],
│ │      parser: Callable[[ASGIConnection, KwargsModel], dict[str, Any]] | None = None,
│ │  ) -> Callable[[dict[str, Any], ASGIConnection], None]:
│ │      """Create a kwargs extractor function.
│ │ @@ -139,15 +140,15 @@
│ │  
│ │      Returns:
│ │          A dictionary of parsed values
│ │      """
│ │      parsed_headers = connection.scope["_headers"] = (  # type: ignore
│ │          connection._headers if connection._headers is not Empty else parse_headers(tuple(connection.scope["headers"]))
│ │      )
│ │ -    return cast("Dict[str, Any]", parsed_headers)
│ │ +    return cast("dict[str, Any]", parsed_headers)
│ │  
│ │  
│ │  def state_extractor(values: dict[str, Any], connection: ASGIConnection) -> None:
│ │      """Extract the app state from the connection and insert it to the kwargs injected to the handler.
│ │  
│ │      Args:
│ │          connection: The ASGI connection instance.
│ │ @@ -252,32 +253,30 @@
│ │  
│ │      Returns:
│ │          The Body value.
│ │      """
│ │      values["body"] = connection.body()
│ │  
│ │  
│ │ -async def json_extractor(
│ │ -    connection: "Request[Any, Any, Any]",
│ │ -) -> Any:
│ │ +async def json_extractor(connection: Request[Any, Any, Any]) -> Any:
│ │      """Extract the data from request and insert it into the kwargs injected to the handler.
│ │  
│ │      Notes:
│ │          - this extractor sets a Coroutine as the value in the kwargs. These are resolved at a later stage.
│ │  
│ │      Args:
│ │          connection: The ASGI connection instance.
│ │  
│ │      Returns:
│ │          The JSON value.
│ │      """
│ │      return await connection.json()
│ │  
│ │  
│ │ -async def msgpack_extractor(connection: "Request[Any, Any, Any]") -> Any:
│ │ +async def msgpack_extractor(connection: Request[Any, Any, Any]) -> Any:
│ │      """Extract the data from request and insert it into the kwargs injected to the handler.
│ │  
│ │      Notes:
│ │          - this extractor sets a Coroutine as the value in the kwargs. These are resolved at a later stage.
│ │  
│ │      Args:
│ │          connection: The ASGI connection instance.
│ │ @@ -379,19 +378,44 @@
│ │              )
│ │          else:
│ │              data_extractor = create_url_encoded_data_extractor(is_data_optional=kwargs_model.is_data_optional)
│ │      elif kwargs_model.expected_msgpack_data:
│ │          data_extractor = cast(
│ │              "Callable[[ASGIConnection[Any, Any, Any, Any]], Coroutine[Any, Any, Any]]", msgpack_extractor
│ │          )
│ │ +    elif kwargs_model.expected_dto_data:
│ │ +        data_extractor = create_dto_extractor(*kwargs_model.expected_dto_data)
│ │      else:
│ │          data_extractor = cast(
│ │              "Callable[[ASGIConnection[Any, Any, Any, Any]], Coroutine[Any, Any, Any]]", json_extractor
│ │          )
│ │  
│ │      def extractor(
│ │          values: dict[str, Any],
│ │          connection: ASGIConnection[Any, Any, Any, Any],
│ │      ) -> None:
│ │          values["data"] = data_extractor(connection)
│ │  
│ │      return extractor
│ │ +
│ │ +
│ │ +def create_dto_extractor(
│ │ +    parsed_parameter: ParsedParameter, dto_type: type[DTOInterface]
│ │ +) -> Callable[[ASGIConnection[Any, Any, Any, Any]], Coroutine[Any, Any, Any]]:
│ │ +    """Create a DTO data extractor.
│ │ +
│ │ +    Args:
│ │ +        parsed_parameter: :class:`ParsedParameter` instance representing the ``"data"`` kwarg.
│ │ +        dto_type: The :class:`DTOInterface` subclass.
│ │ +
│ │ +    Returns:
│ │ +        An extractor function.
│ │ +    """
│ │ +    is_dto_annotated = parsed_parameter.parsed_type.is_subclass_of(DTOInterface)
│ │ +
│ │ +    async def dto_extractor(connection: Request[Any, Any, Any]) -> Any:
│ │ +        dto = await dto_type.from_connection(connection)
│ │ +        if is_dto_annotated:
│ │ +            return dto
│ │ +        return dto.to_data_type()
│ │ +
│ │ +    return dto_extractor  # type:ignore[return-value]
│ │   --- litestar-1.0.0a0/litestar/_kwargs/kwargs_model.py
│ ├── +++ litestar-2.0.0a3/litestar/_kwargs/kwargs_model.py
│ │┄ Files 6% similar despite different names
│ │ @@ -28,35 +28,38 @@
│ │      ParameterDefinition,
│ │      create_parameter_definition,
│ │      merge_parameter_sets,
│ │  )
│ │  from litestar._signature import SignatureModel, get_signature_model
│ │  from litestar._signature.field import SignatureField
│ │  from litestar.constants import RESERVED_KWARGS
│ │ +from litestar.dto.interface import DTOInterface
│ │  from litestar.enums import ParamType, RequestEncodingType
│ │  from litestar.exceptions import ImproperlyConfiguredException
│ │  from litestar.params import BodyKwarg, ParameterKwarg
│ │  
│ │  __all__ = ("KwargsModel",)
│ │  
│ │  
│ │  if TYPE_CHECKING:
│ │      from litestar.connection import ASGIConnection
│ │      from litestar.di import Provide
│ │ +    from litestar.types.parsed_signature import ParsedParameter, ParsedSignature
│ │  
│ │  
│ │  class KwargsModel:
│ │      """Model required kwargs for a given RouteHandler and its dependencies.
│ │  
│ │      This is done once and is memoized during application bootstrap, ensuring minimal runtime overhead.
│ │      """
│ │  
│ │      __slots__ = (
│ │          "dependency_batches",
│ │          "expected_cookie_params",
│ │ +        "expected_dto_data",
│ │          "expected_form_data",
│ │          "expected_msgpack_data",
│ │          "expected_header_params",
│ │          "expected_path_params",
│ │          "expected_query_params",
│ │          "expected_reserved_kwargs",
│ │          "extractors",
│ │ @@ -65,14 +68,15 @@
│ │          "sequence_query_parameter_names",
│ │      )
│ │  
│ │      def __init__(
│ │          self,
│ │          *,
│ │          expected_cookie_params: set[ParameterDefinition],
│ │ +        expected_dto_data: tuple[ParsedParameter, type[DTOInterface]] | None,
│ │          expected_dependencies: set[Dependency],
│ │          expected_form_data: tuple[RequestEncodingType | str, SignatureField] | None,
│ │          expected_msgpack_data: SignatureField | None,
│ │          expected_header_params: set[ParameterDefinition],
│ │          expected_path_params: set[ParameterDefinition],
│ │          expected_query_params: set[ParameterDefinition],
│ │          expected_reserved_kwargs: set[str],
│ │ @@ -80,24 +84,26 @@
│ │          is_data_optional: bool,
│ │      ) -> None:
│ │          """Initialize ``KwargsModel``.
│ │  
│ │          Args:
│ │              expected_cookie_params: Any expected cookie parameter kwargs
│ │              expected_dependencies: Any expected dependency kwargs
│ │ +            expected_dto_data: Any expected DTO data kwargs
│ │              expected_form_data: Any expected form data kwargs
│ │              expected_msgpack_data: Any expected MessagePack data kwargs
│ │              expected_header_params: Any expected header parameter kwargs
│ │              expected_path_params: Any expected path parameter kwargs
│ │              expected_query_params: Any expected query parameter kwargs
│ │              expected_reserved_kwargs: Any expected reserved kwargs, e.g. 'state'
│ │              sequence_query_parameter_names: Any query parameters that are sequences
│ │              is_data_optional: Treat data as optional
│ │          """
│ │          self.expected_cookie_params = expected_cookie_params
│ │ +        self.expected_dto_data = expected_dto_data
│ │          self.expected_form_data = expected_form_data
│ │          self.expected_msgpack_data = expected_msgpack_data
│ │          self.expected_header_params = expected_header_params
│ │          self.expected_path_params = expected_path_params
│ │          self.expected_query_params = expected_query_params
│ │          self.expected_reserved_kwargs = expected_reserved_kwargs
│ │          self.sequence_query_parameter_names = tuple(sequence_query_parameter_names)
│ │ @@ -107,14 +113,15 @@
│ │              or expected_dependencies
│ │              or expected_form_data
│ │              or expected_msgpack_data
│ │              or expected_header_params
│ │              or expected_path_params
│ │              or expected_query_params
│ │              or expected_reserved_kwargs
│ │ +            or expected_dto_data
│ │          )
│ │  
│ │          self.is_data_optional = is_data_optional
│ │          self.extractors = self._create_extractors()
│ │          self.dependency_batches = create_dependency_batches(expected_dependencies)
│ │  
│ │      def _create_extractors(self) -> list[Callable[[dict[str, Any], ASGIConnection], None]]:
│ │ @@ -246,37 +253,42 @@
│ │  
│ │          return param_definitions, expected_dependencies
│ │  
│ │      @classmethod
│ │      def create_for_signature_model(
│ │          cls,
│ │          signature_model: type[SignatureModel],
│ │ +        parsed_signature: ParsedSignature,
│ │          dependencies: dict[str, Provide],
│ │          path_parameters: set[str],
│ │          layered_parameters: dict[str, SignatureField],
│ │ +        data_dto: type[DTOInterface] | None,
│ │      ) -> KwargsModel:
│ │          """Pre-determine what parameters are required for a given combination of route + route handler. It is executed
│ │          during the application bootstrap process.
│ │  
│ │          Args:
│ │              signature_model: A :class:`SignatureModel <litestar._signature.SignatureModel>` subclass.
│ │ +            parsed_signature: A :class:`ParsedSignature <litestar._signature.ParsedSignature>` instance.
│ │              dependencies: A string keyed dictionary mapping dependency providers.
│ │              path_parameters: Any expected path parameters.
│ │              layered_parameters: A string keyed dictionary of layered parameters.
│ │ +            data_dto: A :class:`DTOInterface <litestar._dto.DTOInterface>` subclass if one is declared
│ │ +                for the route handler, or ``None``.
│ │  
│ │          Returns:
│ │              An instance of KwargsModel
│ │          """
│ │  
│ │          signature_fields = signature_model.fields
│ │  
│ │          cls._validate_raw_kwargs(
│ │              path_parameters=path_parameters,
│ │              dependencies=dependencies,
│ │ -            signature_fields=signature_model.fields,
│ │ +            signature_fields=signature_fields,
│ │              layered_parameters=layered_parameters,
│ │          )
│ │  
│ │          param_definitions, expected_dependencies = cls._get_param_definitions(
│ │              path_parameters=path_parameters,
│ │              layered_parameters=layered_parameters,
│ │              dependencies=dependencies,
│ │ @@ -288,35 +300,48 @@
│ │          expected_header_parameters = {p for p in param_definitions if p.param_type == ParamType.HEADER}
│ │          expected_cookie_parameters = {p for p in param_definitions if p.param_type == ParamType.COOKIE}
│ │          expected_query_parameters = {p for p in param_definitions if p.param_type == ParamType.QUERY}
│ │          sequence_query_parameter_names = {p.field_alias for p in expected_query_parameters if p.is_sequence}
│ │  
│ │          expected_form_data: tuple[RequestEncodingType | str, SignatureField] | None = None
│ │          expected_msgpack_data: SignatureField | None = None
│ │ +        expected_dto_data: tuple[ParsedParameter, type[DTOInterface]] | None = None
│ │  
│ │ -        if (data_signature_field := signature_fields.get("data")) and (
│ │ -            media_type := data_signature_field.kwarg_model.media_type
│ │ -            if isinstance(data_signature_field.kwarg_model, BodyKwarg)
│ │ -            else None
│ │ -        ):
│ │ +        data_signature_field = signature_fields.get("data")
│ │ +
│ │ +        media_type: RequestEncodingType | str | None = None
│ │ +        if data_signature_field and isinstance(data_signature_field.kwarg_model, BodyKwarg):
│ │ +            media_type = data_signature_field.kwarg_model.media_type
│ │ +
│ │ +        if data_signature_field and media_type:
│ │              if media_type in (
│ │                  RequestEncodingType.MULTI_PART,
│ │                  RequestEncodingType.URL_ENCODED,
│ │              ):
│ │                  expected_form_data = (media_type, data_signature_field)
│ │  
│ │              elif media_type == RequestEncodingType.MESSAGEPACK:
│ │                  expected_msgpack_data = data_signature_field
│ │  
│ │ +        elif data_signature_field:
│ │ +            parsed_parameter = parsed_signature.parameters["data"]
│ │ +            parsed_type = parsed_parameter.parsed_type
│ │ +            if parsed_type.is_subclass_of(DTOInterface):
│ │ +                expected_dto_data = (parsed_parameter, parsed_type.annotation)
│ │ +            elif data_dto:
│ │ +                expected_dto_data = (parsed_parameter, data_dto)
│ │ +
│ │          for dependency in expected_dependencies:
│ │              dependency_kwargs_model = cls.create_for_signature_model(
│ │                  signature_model=get_signature_model(dependency.provide),
│ │ +                parsed_signature=parsed_signature,
│ │                  dependencies=dependencies,
│ │                  path_parameters=path_parameters,
│ │                  layered_parameters=layered_parameters,
│ │ +                data_dto=None,
│ │              )
│ │              expected_path_parameters = merge_parameter_sets(
│ │                  expected_path_parameters, dependency_kwargs_model.expected_path_params
│ │              )
│ │              expected_query_parameters = merge_parameter_sets(
│ │                  expected_query_parameters, dependency_kwargs_model.expected_query_params
│ │              )
│ │ @@ -333,24 +358,25 @@
│ │                      dependency_kwargs_model=dependency_kwargs_model,
│ │                  )
│ │  
│ │              expected_reserved_kwargs.update(dependency_kwargs_model.expected_reserved_kwargs)
│ │              sequence_query_parameter_names.update(dependency_kwargs_model.sequence_query_parameter_names)
│ │  
│ │          return KwargsModel(
│ │ +            expected_cookie_params=expected_cookie_parameters,
│ │ +            expected_dependencies=expected_dependencies,
│ │ +            expected_dto_data=expected_dto_data,
│ │              expected_form_data=expected_form_data,
│ │ +            expected_header_params=expected_header_parameters,
│ │              expected_msgpack_data=expected_msgpack_data,
│ │ -            expected_dependencies=expected_dependencies,
│ │              expected_path_params=expected_path_parameters,
│ │              expected_query_params=expected_query_parameters,
│ │ -            expected_cookie_params=expected_cookie_parameters,
│ │ -            expected_header_params=expected_header_parameters,
│ │              expected_reserved_kwargs=expected_reserved_kwargs,
│ │ -            sequence_query_parameter_names=sequence_query_parameter_names,
│ │              is_data_optional=signature_fields["data"].is_optional if "data" in expected_reserved_kwargs else False,
│ │ +            sequence_query_parameter_names=sequence_query_parameter_names,
│ │          )
│ │  
│ │      def to_kwargs(self, connection: ASGIConnection) -> dict[str, Any]:
│ │          """Return a dictionary of kwargs. Async values, i.e. CoRoutines, are not resolved to ensure this function is
│ │          sync.
│ │  
│ │          Args:
│ │   --- litestar-1.0.0a0/litestar/_kwargs/parameter_definition.py
│ ├── +++ litestar-2.0.0a3/litestar/_kwargs/parameter_definition.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/_layers/utils.py
│ ├── +++ litestar-2.0.0a3/litestar/_layers/utils.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/_multipart.py
│ ├── +++ litestar-2.0.0a3/litestar/_multipart.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/_openapi/parameters.py
│ ├── +++ litestar-2.0.0a3/litestar/_openapi/parameters.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/_openapi/path_item.py
│ ├── +++ litestar-2.0.0a3/litestar/_openapi/path_item.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/_openapi/request_body.py
│ ├── +++ litestar-2.0.0a3/litestar/_openapi/request_body.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/_openapi/responses.py
│ ├── +++ litestar-2.0.0a3/litestar/_openapi/responses.py
│ │┄ Files 2% similar despite different names
│ │ @@ -8,23 +8,22 @@
│ │  from operator import attrgetter
│ │  from typing import TYPE_CHECKING, Any, Iterator
│ │  
│ │  from typing_extensions import get_args, get_origin
│ │  
│ │  from litestar._openapi.schema_generation import create_schema
│ │  from litestar._signature.field import SignatureField
│ │ -from litestar._signature.utils import get_signature_model
│ │  from litestar.enums import MediaType
│ │  from litestar.exceptions import HTTPException, ValidationException
│ │  from litestar.openapi.spec import OpenAPIResponse
│ │  from litestar.openapi.spec.enums import OpenAPIFormat, OpenAPIType
│ │  from litestar.openapi.spec.header import OpenAPIHeader
│ │  from litestar.openapi.spec.media_type import OpenAPIMediaType
│ │  from litestar.openapi.spec.schema import Schema
│ │ -from litestar.response import Response as litestarResponse
│ │ +from litestar.response import Response as LitestarResponse
│ │  from litestar.response_containers import File, Redirect, Stream, Template
│ │  from litestar.types.builtin_types import NoneType
│ │  from litestar.utils import get_enum_string_value, get_name, is_class_and_subclass
│ │  
│ │  if TYPE_CHECKING:
│ │      from litestar.datastructures.cookie import Cookie
│ │      from litestar.handlers.http_handlers import HTTPRouteHandler
│ │ @@ -66,15 +65,15 @@
│ │  def create_success_response(
│ │      route_handler: "HTTPRouteHandler",
│ │      generate_examples: bool,
│ │      plugins: list["OpenAPISchemaPluginProtocol"],
│ │      schemas: dict[str, "Schema"],
│ │  ) -> OpenAPIResponse:
│ │      """Create the schema for a success response."""
│ │ -    return_annotation = get_signature_model(route_handler).return_annotation
│ │ +    return_annotation = route_handler.parsed_fn_signature.return_type.annotation
│ │      default_descriptions: dict[Any, str] = {
│ │          Stream: "Stream Response",
│ │          Redirect: "Redirect Response",
│ │          File: "File Download",
│ │      }
│ │      description = (
│ │          route_handler.response_description
│ │ @@ -82,15 +81,15 @@
│ │          or HTTPStatus(route_handler.status_code).description
│ │      )
│ │  
│ │      if return_annotation not in {Signature.empty, None, NoneType, Redirect, File, Stream}:
│ │          if return_annotation is Template:
│ │              return_annotation = str
│ │              route_handler.media_type = get_enum_string_value(MediaType.HTML)
│ │ -        elif is_class_and_subclass(get_origin(return_annotation), litestarResponse):
│ │ +        elif is_class_and_subclass(get_origin(return_annotation), LitestarResponse):
│ │              return_annotation = get_args(return_annotation)[0] or Any
│ │  
│ │          result = create_schema(
│ │              field=SignatureField.create(field_type=return_annotation),
│ │              generate_examples=generate_examples,
│ │              plugins=plugins,
│ │              schemas=schemas,
│ │   --- litestar-1.0.0a0/litestar/_openapi/schema_generation/constrained_fields.py
│ ├── +++ litestar-2.0.0a3/litestar/_openapi/schema_generation/constrained_fields.py
│ │┄ Files 5% similar despite different names
│ │ @@ -3,15 +3,14 @@
│ │  from datetime import datetime
│ │  from re import Pattern
│ │  from typing import TYPE_CHECKING, Any
│ │  
│ │  from litestar.exceptions import MissingDependencyException
│ │  from litestar.openapi.spec.enums import OpenAPIFormat, OpenAPIType
│ │  from litestar.openapi.spec.schema import Schema
│ │ -from litestar.utils import is_class_and_subclass
│ │  
│ │  if TYPE_CHECKING:
│ │      from litestar.plugins import OpenAPISchemaPluginProtocol
│ │  
│ │  if TYPE_CHECKING:
│ │      from litestar._signature.field import SignatureField
│ │  
│ │ @@ -41,48 +40,17 @@
│ │  
│ │  __all__ = (
│ │      "create_collection_constrained_field_schema",
│ │      "create_constrained_field_schema",
│ │      "create_date_constrained_field_schema",
│ │      "create_numerical_constrained_field_schema",
│ │      "create_string_constrained_field_schema",
│ │ -    "is_pydantic_constrained_field",
│ │  )
│ │  
│ │  
│ │ -def is_pydantic_constrained_field(annotation: Any) -> bool:
│ │ -    """Check if the given annotation is a constrained pydantic type.
│ │ -
│ │ -    Args:
│ │ -        annotation: A type annotation
│ │ -
│ │ -    Returns:
│ │ -        True if pydantic is installed and the type is a constrained type, otherwise False.
│ │ -    """
│ │ -    try:
│ │ -        import pydantic
│ │ -
│ │ -        return any(
│ │ -            is_class_and_subclass(annotation, constrained_type)
│ │ -            for constrained_type in (
│ │ -                pydantic.ConstrainedBytes,
│ │ -                pydantic.ConstrainedDate,
│ │ -                pydantic.ConstrainedDecimal,
│ │ -                pydantic.ConstrainedFloat,
│ │ -                pydantic.ConstrainedFrozenSet,
│ │ -                pydantic.ConstrainedInt,
│ │ -                pydantic.ConstrainedList,
│ │ -                pydantic.ConstrainedSet,
│ │ -                pydantic.ConstrainedStr,
│ │ -            )
│ │ -        )
│ │ -    except ImportError:
│ │ -        return False
│ │ -
│ │ -
│ │  def create_numerical_constrained_field_schema(
│ │      field_type: type["ConstrainedFloat"] | type["ConstrainedInt"] | type["ConstrainedDecimal"],
│ │  ) -> Schema:
│ │      """Create Schema from Constrained Int/Float/Decimal field."""
│ │      schema = Schema(type=OpenAPIType.INTEGER if issubclass(field_type, int) else OpenAPIType.NUMBER)
│ │      if field_type.le is not None:
│ │          schema.maximum = float(field_type.le)
│ │   --- litestar-1.0.0a0/litestar/_openapi/schema_generation/examples.py
│ ├── +++ litestar-2.0.0a3/litestar/_openapi/schema_generation/examples.py
│ │┄ Files 19% similar despite different names
│ │ @@ -1,53 +1,64 @@
│ │  from __future__ import annotations
│ │  
│ │ -from dataclasses import is_dataclass
│ │  from enum import Enum
│ │  from typing import TYPE_CHECKING, Any
│ │  
│ │  from _decimal import Decimal
│ │ -from pydantic_factories import ModelFactory
│ │ -from pydantic_factories.exceptions import ParameterError
│ │ +from polyfactory.exceptions import ParameterException
│ │ +from polyfactory.field_meta import FieldMeta, Null
│ │  
│ │  from litestar.openapi.spec import Example
│ │ -from litestar.utils import (
│ │ -    convert_dataclass_to_model,
│ │ -    create_parsed_model_field,
│ │ -    is_pydantic_model_instance,
│ │ -)
│ │ +from litestar.types import Empty
│ │ +from litestar.utils import is_pydantic_model_instance
│ │ +
│ │ +try:
│ │ +    from polyfactory.factories.pydantic_factory import ModelFactory as Factory
│ │ +except ImportError:
│ │ +    from polyfactory.factories import DataclassFactory as Factory  # type: ignore[assignment]
│ │ +
│ │  
│ │  if TYPE_CHECKING:
│ │      from litestar._signature.field import SignatureField
│ │  
│ │  
│ │ -def normalize_example_value(value: Any) -> Any:
│ │ +def _normalize_example_value(value: Any) -> Any:
│ │      """Normalize the example value to make it look a bit prettier."""
│ │      if isinstance(value, (Decimal, float)):
│ │          value = round(float(value), 2)
│ │      if isinstance(value, Enum):
│ │          value = value.value
│ │ -    if is_dataclass(value):
│ │ -        value = convert_dataclass_to_model(value)
│ │      if is_pydantic_model_instance(value):
│ │          value = value.dict()
│ │      if isinstance(value, (list, set)):
│ │ -        value = [normalize_example_value(v) for v in value]
│ │ +        value = [_normalize_example_value(v) for v in value]
│ │      if isinstance(value, dict):
│ │          for k, v in value.items():
│ │ -            value[k] = normalize_example_value(v)
│ │ +            value[k] = _normalize_example_value(v)
│ │      return value
│ │  
│ │  
│ │ -class ExampleFactory(ModelFactory):
│ │ -    """A factory that always returns values."""
│ │ -
│ │ -    __allow_none_optionals__ = False
│ │ +def _create_field_meta(field: "SignatureField") -> FieldMeta:
│ │ +    return FieldMeta(
│ │ +        name=field.name,
│ │ +        annotation=field.field_type,
│ │ +        constant=field.is_const,
│ │ +        default=field.default_value if field.default_value is not Empty else Null,
│ │ +        children=[_create_field_meta(child) for child in field.children] if field.children else None,
│ │ +    )
│ │  
│ │  
│ │  def create_examples_for_field(field: "SignatureField") -> list["Example"]:
│ │ -    """Use the pydantic-factories package to create an example value for the given schema."""
│ │ +    """Create an OpenAPI Example instance.
│ │ +
│ │ +    Args:
│ │ +        field: A signature field.
│ │ +
│ │ +    Returns:
│ │ +        A list including a single example.
│ │ +    """
│ │      try:
│ │ -        model_field = create_parsed_model_field(field.field_type)
│ │ -        value = normalize_example_value(ExampleFactory.get_field_value(model_field))
│ │ +        field_meta = _create_field_meta(field)
│ │ +        value = _normalize_example_value(Factory.get_field_value(field_meta))
│ │          return [Example(description=f"Example {field.name} value", value=value)]
│ │ -    except ParameterError:  # pragma: no cover
│ │ +    except ParameterException:  # pragma: no cover
│ │          return []
│ │   --- litestar-1.0.0a0/litestar/_openapi/schema_generation/schema.py
│ ├── +++ litestar-2.0.0a3/litestar/_openapi/schema_generation/schema.py
│ │┄ Ordering differences only
│ │┄ Files 0% similar despite different names
│ │ @@ -31,29 +31,29 @@
│ │  from uuid import UUID
│ │  
│ │  from _decimal import Decimal
│ │  from typing_extensions import get_args, get_type_hints
│ │  
│ │  from litestar._openapi.schema_generation.constrained_fields import (
│ │      create_constrained_field_schema,
│ │ -    is_pydantic_constrained_field,
│ │  )
│ │  from litestar._openapi.schema_generation.examples import create_examples_for_field
│ │  from litestar._signature.field import SignatureField
│ │  from litestar.constants import UNDEFINED_SENTINELS
│ │  from litestar.datastructures import UploadFile
│ │  from litestar.exceptions import ImproperlyConfiguredException
│ │  from litestar.openapi.spec import Reference
│ │  from litestar.openapi.spec.enums import OpenAPIFormat, OpenAPIType
│ │  from litestar.openapi.spec.schema import Schema, SchemaDataContainer
│ │  from litestar.pagination import ClassicPagination, CursorPagination, OffsetPagination
│ │  from litestar.serialization import encode_json
│ │  from litestar.types import DataclassProtocol, Empty, TypedDictClass
│ │  from litestar.utils.predicates import (
│ │      is_dataclass_class,
│ │ +    is_pydantic_constrained_field,
│ │      is_pydantic_model_class,
│ │      is_typed_dict,
│ │  )
│ │  from litestar.utils.typing import get_origin_or_inner_type, make_non_optional_union
│ │  
│ │  if TYPE_CHECKING:
│ │      from litestar.plugins import OpenAPISchemaPluginProtocol
│ │   --- litestar-1.0.0a0/litestar/_openapi/typescript_converter/converter.py
│ ├── +++ litestar-2.0.0a3/litestar/_openapi/typescript_converter/converter.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/_openapi/typescript_converter/schema_parsing.py
│ ├── +++ litestar-2.0.0a3/litestar/_openapi/typescript_converter/schema_parsing.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/_openapi/typescript_converter/types.py
│ ├── +++ litestar-2.0.0a3/litestar/_openapi/typescript_converter/types.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/_openapi/utils.py
│ ├── +++ litestar-2.0.0a3/litestar/_openapi/utils.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/_parsers.py
│ ├── +++ litestar-2.0.0a3/litestar/_parsers.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/_signature/field.py
│ ├── +++ litestar-2.0.0a3/litestar/_signature/field.py
│ │┄ Files 4% similar despite different names
│ │ @@ -67,28 +67,28 @@
│ │  
│ │      @property
│ │      def is_non_string_iterable(self) -> bool:
│ │          """Check if the field type is an Iterable.
│ │  
│ │          If ``self.field_type`` is an optional union, only the non-optional members of the union are evaluated.
│ │  
│ │ -        See: https://github.com/starlite-api/litestar/issues/1106
│ │ +        See: https://github.com/litestar-org/litestar/issues/1106
│ │          """
│ │          field_type = self.field_type
│ │          if self.is_optional:
│ │              field_type = make_non_optional_union(field_type)
│ │          return is_non_string_iterable(field_type)
│ │  
│ │      @property
│ │      def is_non_string_sequence(self) -> bool:
│ │          """Check if the field type is a non-string Sequence.
│ │  
│ │          If ``self.field_type`` is an optional union, only the non-optional members of the union are evaluated.
│ │  
│ │ -        See: https://github.com/starlite-api/litestar/issues/1106
│ │ +        See: https://github.com/litestar-org/litestar/issues/1106
│ │          """
│ │          field_type = self.field_type
│ │          if self.is_optional:
│ │              field_type = make_non_optional_union(field_type)
│ │          return is_non_string_sequence(field_type)
│ │  
│ │      @property
│ │   --- litestar-1.0.0a0/litestar/_signature/models/attrs_signature_model.py
│ ├── +++ litestar-2.0.0a3/litestar/_signature/models/attrs_signature_model.py
│ │┄ Files 5% similar despite different names
│ │ @@ -34,16 +34,16 @@
│ │      import attr
│ │      import attrs
│ │      import cattrs
│ │  except ImportError as e:
│ │      raise MissingDependencyException("attrs is not installed") from e
│ │  
│ │  if TYPE_CHECKING:
│ │ -    from litestar._signature.parsing import ParsedSignatureParameter
│ │      from litestar.plugins import PluginMapping
│ │ +    from litestar.types.parsed_signature import ParsedSignature
│ │  
│ │  key_re = re.compile("@ attribute (.*)|'(.*)'")
│ │  
│ │  __all__ = ("AttrsSignatureModel",)
│ │  
│ │  try:
│ │      import pydantic
│ │ @@ -289,55 +289,57 @@
│ │          }
│ │  
│ │      @classmethod
│ │      def create(
│ │          cls,
│ │          fn_name: str,
│ │          fn_module: str | None,
│ │ -        parsed_params: list[ParsedSignatureParameter],
│ │ -        return_annotation: Any,
│ │ +        parsed_signature: ParsedSignature,
│ │          field_plugin_mappings: dict[str, PluginMapping],
│ │          dependency_names: set[str],
│ │ +        type_overrides: dict[str, Any],
│ │      ) -> type[SignatureModel]:
│ │          attributes: dict[str, Any] = {}
│ │  
│ │ -        for parameter in parsed_params:
│ │ +        for parameter in parsed_signature.parameters.values():
│ │ +            annotation = type_overrides.get(parameter.name, parameter.parsed_type.annotation)
│ │ +
│ │              if isinstance(parameter.default, (ParameterKwarg, BodyKwarg)):
│ │                  attribute = attr.attrib(
│ │ -                    type=parameter.annotation,
│ │ +                    type=annotation,
│ │                      metadata={
│ │                          **asdict(parameter.default),
│ │                          "kwargs_model": parameter.default,
│ │                          "parsed_parameter": parameter,
│ │                      },
│ │                      default=parameter.default.default if parameter.default.default is not Empty else attr.NOTHING,
│ │ -                    validator=_create_validators(annotation=parameter.annotation, kwargs_model=parameter.default),
│ │ +                    validator=_create_validators(annotation=annotation, kwargs_model=parameter.default),
│ │                  )
│ │              elif isinstance(parameter.default, DependencyKwarg):
│ │                  attribute = attr.attrib(
│ │ -                    type=Any if parameter.should_skip_validation else parameter.annotation,
│ │ +                    type=annotation,
│ │                      default=parameter.default.default if parameter.default.default is not Empty else None,
│ │                      metadata={
│ │                          "kwargs_model": parameter.default,
│ │                      },
│ │                  )
│ │ -            elif parameter.should_skip_validation:
│ │ -                attribute = attr.attrib(type=Any)
│ │ -            elif parameter.default_defined:
│ │ -                attribute = attr.attrib(type=parameter.annotation, default=parameter.default)
│ │ +            elif parameter.has_default:
│ │ +                attribute = attr.attrib(type=annotation, default=parameter.default)
│ │              else:
│ │ -                attribute = attr.attrib(type=parameter.annotation, default=None if parameter.optional else attr.NOTHING)
│ │ +                attribute = attr.attrib(
│ │ +                    type=annotation, default=None if parameter.parsed_type.is_optional else attr.NOTHING
│ │ +                )
│ │  
│ │              attributes[parameter.name] = attribute
│ │  
│ │          model: type[AttrsSignatureModel] = attrs.make_class(
│ │              f"{fn_name}_signature_model",
│ │              attrs=attributes,
│ │              bases=(AttrsSignatureModel,),
│ │              slots=True,
│ │              kw_only=True,
│ │          )
│ │ -        model.return_annotation = return_annotation  # pyright: ignore
│ │ +        model.return_annotation = parsed_signature.return_type.annotation  # pyright: ignore
│ │          model.field_plugin_mappings = field_plugin_mappings  # pyright: ignore
│ │          model.dependency_name_set = dependency_names  # pyright: ignore
│ │          model.populate_signature_fields()  # pyright: ignore
│ │          return model
│ │   --- litestar-1.0.0a0/litestar/_signature/models/base.py
│ ├── +++ litestar-2.0.0a3/litestar/_signature/models/base.py
│ │┄ Files 6% similar despite different names
│ │ @@ -4,17 +4,17 @@
│ │  from typing import TYPE_CHECKING, Any, ClassVar, TypedDict
│ │  
│ │  from litestar.enums import ScopeType
│ │  from litestar.exceptions import InternalServerException, ValidationException
│ │  
│ │  if TYPE_CHECKING:
│ │      from litestar._signature.field import SignatureField
│ │ -    from litestar._signature.parsing import ParsedSignatureParameter
│ │      from litestar.connection import ASGIConnection
│ │      from litestar.plugins import PluginMapping
│ │ +    from litestar.types.parsed_signature import ParsedSignature
│ │  
│ │  __all__ = ("SignatureModel",)
│ │  
│ │  
│ │  class ErrorMessage(TypedDict):
│ │      key: str
│ │      message: str
│ │ @@ -88,26 +88,27 @@
│ │  
│ │      @classmethod
│ │      @abstractmethod
│ │      def create(
│ │          cls,
│ │          fn_name: str,
│ │          fn_module: str | None,
│ │ -        parsed_params: list[ParsedSignatureParameter],
│ │ -        return_annotation: Any,
│ │ +        parsed_signature: ParsedSignature,
│ │          field_plugin_mappings: dict[str, PluginMapping],
│ │          dependency_names: set[str],
│ │ +        type_overrides: dict[str, Any],
│ │      ) -> type[SignatureModel]:
│ │          """Create a SignatureModel.
│ │  
│ │          Args:
│ │              fn_name: Name of the callable.
│ │              fn_module: Name of the function's module, if any.
│ │ -            parsed_params: A list of parsed signature parameters.
│ │ -            return_annotation: Annotation for the callable's return value.
│ │ +            parsed_signature: A parsed signature.
│ │              field_plugin_mappings: A mapping of field names to plugin mappings.
│ │              dependency_names: A set of dependency names.
│ │ +            type_overrides: A dictionary of type overrides, either will override a parameter type with a type derived
│ │ +                from a plugin, or set the type to ``Any`` if validation should be skipped for the parameter.
│ │  
│ │          Returns:
│ │              The created SignatureModel.
│ │          """
│ │          raise NotImplementedError
│ │   --- litestar-1.0.0a0/litestar/_signature/models/pydantic_signature_model.py
│ ├── +++ litestar-2.0.0a3/litestar/_signature/models/pydantic_signature_model.py
│ │┄ Files 4% similar despite different names
│ │ @@ -1,26 +1,26 @@
│ │  from __future__ import annotations
│ │  
│ │  from dataclasses import asdict
│ │  from typing import TYPE_CHECKING, Any
│ │  
│ │  from pydantic import BaseConfig, BaseModel, ValidationError, create_model
│ │  from pydantic.fields import FieldInfo, ModelField, Undefined
│ │ -from pydantic_factories import ModelFactory
│ │  
│ │  from litestar._signature.field import SignatureField
│ │  from litestar._signature.models.base import SignatureModel
│ │  from litestar.constants import UNDEFINED_SENTINELS
│ │  from litestar.params import BodyKwarg, DependencyKwarg, ParameterKwarg
│ │  from litestar.types import Empty
│ │ +from litestar.utils.predicates import is_pydantic_constrained_field
│ │  
│ │  if TYPE_CHECKING:
│ │ -    from litestar._signature.parsing import ParsedSignatureParameter
│ │      from litestar.connection import ASGIConnection
│ │      from litestar.plugins import PluginMapping
│ │ +    from litestar.types.parsed_signature import ParsedSignature
│ │  
│ │  __all__ = ("PydanticSignatureModel",)
│ │  
│ │  
│ │  class PydanticSignatureModel(SignatureModel, BaseModel):
│ │      """Model that represents a function signature that uses a pydantic specific type or types."""
│ │  
│ │ @@ -123,65 +123,62 @@
│ │          cls.fields = {k: cls.signature_field_from_model_field(v) for k, v in cls.__fields__.items()}
│ │  
│ │      @classmethod
│ │      def create(
│ │          cls,
│ │          fn_name: str,
│ │          fn_module: str | None,
│ │ -        parsed_params: list[ParsedSignatureParameter],
│ │ -        return_annotation: Any,
│ │ +        parsed_signature: ParsedSignature,
│ │          field_plugin_mappings: dict[str, PluginMapping],
│ │          dependency_names: set[str],
│ │ +        type_overrides: dict[str, Any],
│ │      ) -> type[PydanticSignatureModel]:
│ │          """Create a pydantic based SignatureModel.
│ │  
│ │          Args:
│ │              fn_name: Name of the callable.
│ │              fn_module: Name of the function's module, if any.
│ │ -            parsed_params: A list of parsed signature parameters.
│ │ -            return_annotation: Annotation for the callable's return value.
│ │ +            parsed_signature: A ParsedSignature instance.
│ │              field_plugin_mappings: A mapping of field names to plugin mappings.
│ │              dependency_names: A set of dependency names.
│ │ +            type_overrides: A dictionary of type overrides, either will override a parameter type with a type derived
│ │ +                from a plugin, or set the type to ``Any`` if validation should be skipped for the parameter.
│ │  
│ │          Returns:
│ │              The created PydanticSignatureModel.
│ │          """
│ │          field_definitions: dict[str, tuple[Any, Any]] = {}
│ │  
│ │ -        for parameter in parsed_params:
│ │ +        for parameter in parsed_signature.parameters.values():
│ │ +            field_type = type_overrides.get(parameter.name, parameter.parsed_type.annotation)
│ │ +
│ │              if isinstance(parameter.default, (ParameterKwarg, BodyKwarg)):
│ │                  field_info = FieldInfo(
│ │                      **asdict(parameter.default), kwargs_model=parameter.default, parsed_parameter=parameter
│ │                  )
│ │              else:
│ │                  field_info = FieldInfo(default=..., parsed_parameter=parameter)
│ │ -            if parameter.should_skip_validation:
│ │ -                field_type = Any
│ │ -                if isinstance(parameter.default, DependencyKwarg):
│ │ -                    field_info.default = parameter.default.default if parameter.default.default is not Empty else None
│ │ +
│ │ +            if isinstance(parameter.default, DependencyKwarg):
│ │ +                field_info.default = parameter.default.default if parameter.default.default is not Empty else None
│ │              elif isinstance(parameter.default, (ParameterKwarg, BodyKwarg)):
│ │ -                field_type = parameter.annotation
│ │                  field_info.default = parameter.default.default if parameter.default.default is not Empty else Undefined
│ │ -            elif ModelFactory.is_constrained_field(parameter.default):
│ │ +            elif is_pydantic_constrained_field(parameter.default):
│ │                  field_type = parameter.default
│ │ -            elif parameter.default_defined:
│ │ -                field_type = parameter.annotation
│ │ +            elif parameter.has_default:
│ │                  field_info.default = parameter.default
│ │ -            elif not parameter.optional:
│ │ -                field_type = parameter.annotation
│ │ -            else:
│ │ -                field_type = parameter.annotation
│ │ +            elif parameter.parsed_type.is_optional:
│ │                  field_info.default = None
│ │  
│ │              field_definitions[parameter.name] = (field_type, field_info)
│ │  
│ │          model: type[PydanticSignatureModel] = create_model(  # type: ignore
│ │              f"{fn_name}_signature_model",
│ │              __base__=PydanticSignatureModel,
│ │              __module__=fn_module or "pydantic.main",
│ │              **field_definitions,
│ │          )
│ │ -        model.return_annotation = return_annotation
│ │ +        model.return_annotation = parsed_signature.return_type.annotation
│ │          model.field_plugin_mappings = field_plugin_mappings
│ │          model.dependency_name_set = dependency_names
│ │          model.populate_signature_fields()
│ │          return model
│ │   --- litestar-1.0.0a0/litestar/_signature/parsing/utils.py
│ ├── +++ litestar-2.0.0a3/litestar/routes/base.py
│ │┄ Files 24% similar despite different names
│ │ @@ -1,153 +1,184 @@
│ │  from __future__ import annotations
│ │  
│ │ -import sys
│ │ -import typing
│ │ -from inspect import Signature, isclass, ismethod
│ │ -from typing import Any, List
│ │ -
│ │ -from typing_extensions import get_args, get_type_hints
│ │ -
│ │ -from litestar._signature.parsing import ParsedSignatureParameter
│ │ -from litestar.connection import Request, WebSocket
│ │ -from litestar.datastructures import Headers, ImmutableState, State
│ │ +import re
│ │ +from abc import ABC, abstractmethod
│ │ +from datetime import date, datetime, time, timedelta
│ │ +from decimal import Decimal
│ │ +from pathlib import Path
│ │ +from typing import TYPE_CHECKING, Any, Callable
│ │ +from uuid import UUID
│ │ +
│ │ +from pydantic.datetime_parse import (
│ │ +    parse_date,
│ │ +    parse_datetime,
│ │ +    parse_duration,
│ │ +    parse_time,
│ │ +)
│ │ +
│ │ +from litestar._kwargs import KwargsModel
│ │ +from litestar._signature import get_signature_model
│ │  from litestar.exceptions import ImproperlyConfiguredException
│ │ -from litestar.params import DependencyKwarg, ParameterKwarg
│ │ -from litestar.plugins import PluginMapping, SerializationPluginProtocol, get_plugin_for_value
│ │ -from litestar.types import AnyCallable, Empty, Receive, Scope, Send, WebSocketScope
│ │ -
│ │ -__all__ = ("get_fn_type_hints", "get_type_annotation_from_plugin", "parse_fn_signature")
│ │ -
│ │ -
│ │ -_GLOBAL_NAMES = {
│ │ -    "Headers": Headers,
│ │ -    "ImmutableState": ImmutableState,
│ │ -    "Receive": Receive,
│ │ -    "Request": Request,
│ │ -    "Scope": Scope,
│ │ -    "Send": Send,
│ │ -    "State": State,
│ │ -    "WebSocket": WebSocket,
│ │ -    "WebSocketScope": WebSocketScope,
│ │ +from litestar.types.internal_types import PathParameterDefinition
│ │ +from litestar.utils import join_paths, normalize_path
│ │ +
│ │ +if TYPE_CHECKING:
│ │ +    from litestar.enums import ScopeType
│ │ +    from litestar.handlers.base import BaseRouteHandler
│ │ +    from litestar.types import Method, Receive, Scope, Send
│ │ +
│ │ +param_match_regex = re.compile(r"{(.*?)}")
│ │ +
│ │ +param_type_map = {
│ │ +    "str": str,
│ │ +    "int": int,
│ │ +    "float": float,
│ │ +    "uuid": UUID,
│ │ +    "decimal": Decimal,
│ │ +    "date": date,
│ │ +    "datetime": datetime,
│ │ +    "time": time,
│ │ +    "timedelta": timedelta,
│ │ +    "path": Path,
│ │  }
│ │ -"""A mapping of names used for handler signature forward-ref resolution.
│ │  
│ │ -This allows users to include these names within an `if TYPE_CHECKING:` block in their handler module.
│ │ -"""
│ │  
│ │ +parsers_map: dict[Any, Callable[[Any], Any]] = {
│ │ +    float: float,
│ │ +    int: int,
│ │ +    Decimal: Decimal,
│ │ +    UUID: UUID,
│ │ +    date: parse_date,
│ │ +    datetime: parse_datetime,
│ │ +    time: parse_time,
│ │ +    timedelta: parse_duration,
│ │ +}
│ │  
│ │ -def get_fn_type_hints(fn: Any, namespace: dict[str, Any] | None = None) -> dict[str, Any]:
│ │ -    """Resolve type hints for ``fn``.
│ │  
│ │ -    Args:
│ │ -        fn: Thing that is having its signature modelled.
│ │ -        namespace: Extra names for resolution of forward references.
│ │ +class BaseRoute(ABC):
│ │ +    """Base Route class used by Litestar.
│ │  
│ │ -    Returns:
│ │ -        Mapping of names to types.
│ │ +    It's an abstract class meant to be extended.
│ │      """
│ │ -    fn_to_inspect: Any = fn
│ │ -
│ │ -    if isclass(fn_to_inspect):
│ │ -        fn_to_inspect = fn_to_inspect.__init__
│ │  
│ │ -    # detect objects that are not functions and that have a `__call__` method
│ │ -    if callable(fn_to_inspect) and ismethod(fn_to_inspect.__call__):
│ │ -        fn_to_inspect = fn_to_inspect.__call__
│ │ -
│ │ -    # inspect the underlying function for methods
│ │ -    if hasattr(fn_to_inspect, "__func__"):
│ │ -        fn_to_inspect = fn_to_inspect.__func__
│ │ -
│ │ -    # Order important. If a litestar name has been overridden in the function module, we want
│ │ -    # to use that instead of the litestar one.
│ │ -    namespace = {
│ │ -        **_GLOBAL_NAMES,
│ │ -        **vars(typing),
│ │ -        **vars(sys.modules[fn_to_inspect.__module__]),
│ │ -        **(namespace or {}),
│ │ -    }
│ │ -    return get_type_hints(fn_to_inspect, globalns=namespace, include_extras=True)
│ │ -
│ │ -
│ │ -def get_type_annotation_from_plugin(
│ │ -    parameter: ParsedSignatureParameter,
│ │ -    plugin: SerializationPluginProtocol,
│ │ -    field_plugin_mappings: dict[str, PluginMapping],
│ │ -) -> Any:
│ │ -    """Use plugin declared for parameter annotation type to generate a pydantic model.
│ │ -
│ │ -    Args:
│ │ -        parameter:  ParsedSignatureParameter
│ │ -        plugin: SerializationPluginProtocol
│ │ -        field_plugin_mappings: A dictionary mapping fields for plugin mappings.
│ │ -
│ │ -    Returns:
│ │ -        A pydantic model to be used as a type
│ │ -    """
│ │ -    type_args = get_args(parameter.annotation)
│ │ -    type_value = type_args[0] if type_args else parameter.annotation
│ │ -    field_plugin_mappings[parameter.name] = PluginMapping(plugin=plugin, model_class=type_value)
│ │ -    pydantic_model = plugin.to_data_container_class(model_class=type_value, parameter_name=parameter.name)
│ │ -    return List[pydantic_model] if type_args else pydantic_model  # type:ignore[valid-type]
│ │ -
│ │ -
│ │ -def parse_fn_signature(
│ │ -    dependency_name_set: set[str],
│ │ -    fn: AnyCallable,
│ │ -    plugins: list[SerializationPluginProtocol],
│ │ -    signature_namespace: dict[str, Any],
│ │ -) -> tuple[list[ParsedSignatureParameter], Any, dict[str, PluginMapping], set[str]]:
│ │ -    """Parse a function signature into data used for the generation of a signature model.
│ │ -
│ │ -    Args:
│ │ -        dependency_name_set: A set of dependency names
│ │ -        fn: A callable.
│ │ -        plugins: A list of plugins.
│ │ -        signature_namespace: mapping of names to types for forward reference resolution
│ │ -
│ │ -    Returns:
│ │ -        A tuple containing the following values for generating a signature model: a mapping of field definitions, the
│ │ -        callable's return annotation, a mapping of field names to plugins - if any, and an updated dependency name set.
│ │ -    """
│ │ -    signature = Signature.from_callable(fn)
│ │ -    fn_name = getattr(fn, "__name__", "anonymous")
│ │ +    __slots__ = (
│ │ +        "app",
│ │ +        "handler_names",
│ │ +        "methods",
│ │ +        "path",
│ │ +        "path_format",
│ │ +        "path_parameters",
│ │ +        "path_components",
│ │ +        "scope_type",
│ │ +    )
│ │  
│ │ -    field_plugin_mappings: dict[str, PluginMapping] = {}
│ │ -    parsed_params: list[ParsedSignatureParameter] = []
│ │ -    dependency_names: set[str] = set()
│ │ -    fn_type_hints = get_fn_type_hints(fn, namespace=signature_namespace)
│ │ -
│ │ -    parameters = (
│ │ -        ParsedSignatureParameter.from_parameter(
│ │ -            parameter=parameter, parameter_name=name, fn_name=fn_name, fn_type_hints=fn_type_hints
│ │ +    def __init__(
│ │ +        self,
│ │ +        *,
│ │ +        handler_names: list[str],
│ │ +        path: str,
│ │ +        scope_type: ScopeType,
│ │ +        methods: list[Method] | None = None,
│ │ +    ) -> None:
│ │ +        """Initialize the route.
│ │ +
│ │ +        Args:
│ │ +            handler_names: Names of the associated handler functions
│ │ +            path: Base path of the route
│ │ +            scope_type: Type of the ASGI scope
│ │ +            methods: Supported methods
│ │ +        """
│ │ +        self.path, self.path_format, self.path_components = self._parse_path(path)
│ │ +        self.path_parameters: tuple[PathParameterDefinition, ...] = tuple(
│ │ +            component for component in self.path_components if isinstance(component, PathParameterDefinition)
│ │          )
│ │ -        for name, parameter in signature.parameters.items()
│ │ -        if name not in ("self", "cls")
│ │ -    )
│ │ -    for parameter in parameters:
│ │ -        if parameter.name == "state" and not issubclass(parameter.annotation, ImmutableState):
│ │ +        self.handler_names = handler_names
│ │ +        self.scope_type = scope_type
│ │ +        self.methods = set(methods or [])
│ │ +
│ │ +    @abstractmethod
│ │ +    async def handle(self, scope: "Scope", receive: "Receive", send: "Send") -> None:  # pragma: no cover
│ │ +        """ASGI App of the route.
│ │ +
│ │ +        Args:
│ │ +            scope: The ASGI connection scope.
│ │ +            receive: The ASGI receive function.
│ │ +            send: The ASGI send function.
│ │ +
│ │ +        Returns:
│ │ +            None
│ │ +        """
│ │ +        raise NotImplementedError("Route subclasses must implement handle which serves as the ASGI app entry point")
│ │ +
│ │ +    def create_handler_kwargs_model(self, route_handler: BaseRouteHandler) -> KwargsModel:
│ │ +        """Create a `KwargsModel` for a given route handler."""
│ │ +
│ │ +        path_parameters = set()
│ │ +        for param in self.path_parameters:
│ │ +            if param.name in path_parameters:
│ │ +                raise ImproperlyConfiguredException(f"Duplicate parameter '{param.name}' detected in '{self.path}'.")
│ │ +            path_parameters.add(param.name)
│ │ +
│ │ +        return KwargsModel.create_for_signature_model(
│ │ +            signature_model=get_signature_model(route_handler),
│ │ +            parsed_signature=route_handler.parsed_fn_signature,
│ │ +            dependencies=route_handler.resolve_dependencies(),
│ │ +            path_parameters=path_parameters,
│ │ +            layered_parameters=route_handler.resolve_layered_parameters(),
│ │ +            data_dto=route_handler.resolve_dto(),
│ │ +        )
│ │ +
│ │ +    @staticmethod
│ │ +    def _validate_path_parameter(param: str) -> None:
│ │ +        """Validate that a path parameter adheres to the required format and datatypes.
│ │ +
│ │ +        Raises:
│ │ +            ImproperlyConfiguredException: If the parameter has an invalid format.
│ │ +        """
│ │ +        if len(param.split(":")) != 2:
│ │              raise ImproperlyConfiguredException(
│ │ -                f"The type annotation `{parameter.annotation}` is an invalid type for the 'state' reserved kwarg. "
│ │ -                "It must be typed to a subclass of `litestar.datastructures.ImmutableState` or "
│ │ -                "`litestar.datastructures.State`."
│ │ +                "Path parameters should be declared with a type using the following pattern: '{parameter_name:type}', "
│ │ +                "e.g. '/my-path/{my_param:int}'"
│ │ +            )
│ │ +        param_name, param_type = (p.strip() for p in param.split(":"))
│ │ +        if not param_name:
│ │ +            raise ImproperlyConfiguredException("Path parameter names should be of length greater than zero")
│ │ +        if param_type not in param_type_map:
│ │ +            raise ImproperlyConfiguredException(
│ │ +                f"Path parameters should be declared with an allowed type, i.e. one of {','.join(param_type_map.keys())}"
│ │              )
│ │  
│ │ -        if isinstance(parameter.default, DependencyKwarg) and parameter.name not in dependency_name_set:
│ │ -            if not parameter.optional and (
│ │ -                isinstance(parameter.default, DependencyKwarg) and parameter.default.default is Empty
│ │ -            ):
│ │ -                raise ImproperlyConfiguredException(
│ │ -                    f"Explicit dependency '{parameter.name}' for '{fn_name}' has no default value, "
│ │ -                    f"or provided dependency."
│ │ +    @classmethod
│ │ +    def _parse_path(cls, path: str) -> tuple[str, str, list[str | PathParameterDefinition]]:
│ │ +        """Normalize and parse a path.
│ │ +
│ │ +        Splits the path into a list of components, parsing any that are path parameters. Also builds the OpenAPI
│ │ +        compatible path, which does not include the type of the path parameters.
│ │ +
│ │ +        Returns:
│ │ +            A 3-tuple of the normalized path, the OpenAPI formatted path, and the list of parsed components.
│ │ +        """
│ │ +        path = normalize_path(path)
│ │ +
│ │ +        parsed_components: list[str | PathParameterDefinition] = []
│ │ +        path_format_components = []
│ │ +
│ │ +        components = [component for component in path.split("/") if component]
│ │ +        for component in components:
│ │ +            param_match = param_match_regex.fullmatch(component)
│ │ +            if param_match:
│ │ +                param = param_match.group(1)
│ │ +                cls._validate_path_parameter(param)
│ │ +                param_name, param_type = (p.strip() for p in param.split(":"))
│ │ +                type_class = param_type_map[param_type]
│ │ +                parser = parsers_map[type_class] if type_class not in {str, Path} else None
│ │ +                parsed_components.append(
│ │ +                    PathParameterDefinition(name=param_name, type=type_class, full=param, parser=parser)
│ │                  )
│ │ -            dependency_names.add(parameter.name)
│ │ -
│ │ -        if isinstance(parameter.default, ParameterKwarg) and parameter.default.value_type is not Empty:
│ │ -            parameter.annotation = parameter.default.value_type
│ │ -
│ │ -        if plugin := get_plugin_for_value(value=parameter.annotation, plugins=plugins):
│ │ -            parameter.annotation = get_type_annotation_from_plugin(parameter, plugin, field_plugin_mappings)
│ │ +                path_format_components.append("{" + param_name + "}")
│ │ +            else:
│ │ +                parsed_components.append(component)
│ │ +                path_format_components.append(component)
│ │  
│ │ -        parsed_params.append(parameter)
│ │ +        path_format = join_paths(path_format_components)
│ │  
│ │ -    return parsed_params, fn_type_hints.get("return", Signature.empty), field_plugin_mappings, dependency_names
│ │ +        return path, path_format, parsed_components
│ │   --- litestar-1.0.0a0/litestar/app.py
│ ├── +++ litestar-2.0.0a3/litestar/app.py
│ │┄ Files 3% similar despite different names
│ │ @@ -35,31 +35,31 @@
│ │  )
│ │  from litestar.router import Router
│ │  from litestar.routes import ASGIRoute, HTTPRoute, WebSocketRoute
│ │  from litestar.static_files.base import StaticFiles
│ │  from litestar.stores.registry import StoreRegistry
│ │  from litestar.types import Empty
│ │  from litestar.types.internal_types import PathParameterDefinition
│ │ +from litestar.types.parsed_signature import ParsedSignature
│ │  from litestar.utils import (
│ │      as_async_callable_list,
│ │      async_partial,
│ │      is_async_callable,
│ │      join_paths,
│ │      unique,
│ │  )
│ │  from litestar.utils.dataclass import extract_dataclass_items
│ │ -
│ │ -__all__ = ("HandlerIndex", "Litestar")
│ │ -
│ │ +from litestar.utils.helpers import unwrap_partial
│ │  
│ │  if TYPE_CHECKING:
│ │      from litestar.config.compression import CompressionConfig
│ │      from litestar.config.cors import CORSConfig
│ │      from litestar.config.csrf import CSRFConfig
│ │      from litestar.datastructures import CacheControlHeader, ETag, ResponseHeader
│ │ +    from litestar.dto.interface import DTOInterface
│ │      from litestar.events.listener import EventListener
│ │      from litestar.handlers.base import BaseRouteHandler
│ │      from litestar.logging.config import BaseLoggingConfig
│ │      from litestar.openapi.spec import SecurityRequirement
│ │      from litestar.openapi.spec.open_api import OpenAPI
│ │      from litestar.plugins import PluginProtocol
│ │      from litestar.static_files.config import StaticFilesConfig
│ │ @@ -95,14 +95,16 @@
│ │          ResponseType,
│ │          RouteHandlerType,
│ │          Scope,
│ │          Send,
│ │          TypeEncodersMap,
│ │      )
│ │  
│ │ +__all__ = ("HandlerIndex", "Litestar", "DEFAULT_OPENAPI_CONFIG")
│ │ +
│ │  DEFAULT_OPENAPI_CONFIG = OpenAPIConfig(title="Litestar API", version="1.0.0")
│ │  """The default OpenAPI config used if not configuration is explicitly passed to the
│ │  :class:`Litestar <.app.Litestar>` instance constructor.
│ │  """
│ │  
│ │  
│ │  class HandlerIndex(TypedDict):
│ │ @@ -180,14 +182,15 @@
│ │          before_send: OptionalSequence[BeforeMessageSendHookHandler] = None,
│ │          before_shutdown: OptionalSequence[LifeSpanHookHandler] = None,
│ │          before_startup: OptionalSequence[LifeSpanHookHandler] = None,
│ │          cache_control: CacheControlHeader | None = None,
│ │          compression_config: CompressionConfig | None = None,
│ │          cors_config: CORSConfig | None = None,
│ │          csrf_config: CSRFConfig | None = None,
│ │ +        dto: type[DTOInterface] | None | EmptyType = Empty,
│ │          debug: bool = False,
│ │          dependencies: Dependencies | None = None,
│ │          etag: ETag | None = None,
│ │          event_emitter_backend: type[BaseEventEmitterBackend] = SimpleEventEmitter,
│ │          exception_handlers: ExceptionHandlersMap | None = None,
│ │          guards: OptionalSequence[Guard] = None,
│ │          listeners: OptionalSequence[EventListener] = None,
│ │ @@ -203,14 +206,15 @@
│ │          plugins: OptionalSequence[PluginProtocol] = None,
│ │          preferred_validation_backend: Literal["pydantic", "attrs"] | None = None,
│ │          request_class: type[Request] | None = None,
│ │          response_cache_config: ResponseCacheConfig | None = None,
│ │          response_class: ResponseType | None = None,
│ │          response_cookies: ResponseCookies | None = None,
│ │          response_headers: OptionalSequence[ResponseHeader] = None,
│ │ +        return_dto: type[DTOInterface] | None | EmptyType = Empty,
│ │          security: OptionalSequence[SecurityRequirement] = None,
│ │          signature_namespace: Mapping[str, Any] | None = None,
│ │          state: State | None = None,
│ │          static_files_config: OptionalSequence[StaticFilesConfig] = None,
│ │          stores: StoreRegistry | dict[str, Store] | None = None,
│ │          tags: Sequence[str] | None = None,
│ │          template_config: TemplateConfig | None = None,
│ │ @@ -248,14 +252,16 @@
│ │                  this app. Can be overridden by route handlers.
│ │              compression_config: Configures compression behaviour of the application, this enabled a builtin or user
│ │                  defined Compression middleware.
│ │              cors_config: If set, configures :class:`CORSMiddleware <.middleware.cors.CORSMiddleware>`.
│ │              csrf_config: If set, configures :class:`CSRFMiddleware <.middleware.csrf.CSRFMiddleware>`.
│ │              debug: If ``True``, app errors rendered as HTML with a stack trace.
│ │              dependencies: A string keyed mapping of dependency :class:`Providers <.di.Provide>`.
│ │ +            dto: :class:`DTOInterface <.dto.interface.DTOInterface>` to use for (de)serializing and
│ │ +                validation of request data.
│ │              etag: An ``etag`` header of type :class:`ETag <.datastructures.ETag>` to add to route handlers of this app.
│ │                  Can be overridden by route handlers.
│ │              event_emitter_backend: A subclass of
│ │                  :class:`BaseEventEmitterBackend <.events.emitter.BaseEventEmitterBackend>`.
│ │              exception_handlers: A mapping of status codes and/or exception types to handler functions.
│ │              guards: A sequence of :class:`Guard <.types.Guard>` callables.
│ │              listeners: A sequence of :class:`EventListener <.events.listener.EventListener>`.
│ │ @@ -281,14 +287,16 @@
│ │              preferred_validation_backend: Validation backend to use, if multiple are installed.
│ │              request_class: An optional subclass of :class:`Request <.connection.Request>` to use for http connections.
│ │              response_class: A custom subclass of :class:`Response <.response.Response>` to be used as the app's default
│ │                  response.
│ │              response_cookies: A sequence of :class:`Cookie <.datastructures.Cookie>`.
│ │              response_headers: A string keyed mapping of :class:`ResponseHeader <.datastructures.ResponseHeader>`
│ │              response_cache_config: Configures caching behavior of the application.
│ │ +            return_dto: :class:`DTOInterface <.dto.interface.DTOInterface>` to use for serializing
│ │ +                outbound response data.
│ │              route_handlers: A sequence of route handlers, which can include instances of
│ │                  :class:`Router <.router.Router>`, subclasses of :class:`Controller <.controller.Controller>` or any
│ │                  callable decorated by the route handler decorators.
│ │              security: A sequence of dicts that will be added to the schema of all route handlers in the application.
│ │                  See
│ │                  :data:`SecurityRequirement <.openapi.spec.SecurityRequirement>` for details.
│ │              signature_namespace: A mapping of names to types for use in forward reference resolution during signature modelling.
│ │ @@ -321,34 +329,36 @@
│ │              before_startup=list(before_startup or []),
│ │              cache_control=cache_control,
│ │              compression_config=compression_config,
│ │              cors_config=cors_config,
│ │              csrf_config=csrf_config,
│ │              debug=debug,
│ │              dependencies=dict(dependencies or {}),
│ │ +            dto=dto,
│ │              etag=etag,
│ │              event_emitter_backend=event_emitter_backend,
│ │              exception_handlers=exception_handlers or {},
│ │              guards=list(guards or []),
│ │              listeners=list(listeners or []),
│ │              logging_config=cast("BaseLoggingConfig | None", logging_config),
│ │              middleware=list(middleware or []),
│ │              multipart_form_part_limit=multipart_form_part_limit,
│ │              on_shutdown=list(on_shutdown or []),
│ │              on_startup=list(on_startup or []),
│ │              openapi_config=openapi_config,
│ │              opt=dict(opt or {}),
│ │              parameters=parameters or {},
│ │              plugins=list(plugins or []),
│ │ -            preferred_validation_backend=preferred_validation_backend or "attrs",
│ │ +            preferred_validation_backend=preferred_validation_backend or "pydantic",
│ │              request_class=request_class,
│ │              response_cache_config=response_cache_config or ResponseCacheConfig(),
│ │              response_class=response_class,
│ │              response_cookies=response_cookies or [],
│ │              response_headers=response_headers or [],
│ │ +            return_dto=return_dto,
│ │              route_handlers=list(route_handlers) if route_handlers is not None else [],
│ │              security=list(security or []),
│ │              signature_namespace=dict(signature_namespace or {}),
│ │              state=state or State(),
│ │              static_files_config=list(static_files_config or []),
│ │              stores=stores,
│ │              tags=list(tags or []),
│ │ @@ -398,24 +408,26 @@
│ │  
│ │          super().__init__(
│ │              after_request=config.after_request,
│ │              after_response=config.after_response,
│ │              before_request=config.before_request,
│ │              cache_control=config.cache_control,
│ │              dependencies=config.dependencies,
│ │ +            dto=config.dto,
│ │              etag=config.etag,
│ │              exception_handlers=config.exception_handlers,
│ │              guards=config.guards,
│ │              middleware=config.middleware,
│ │              opt=config.opt,
│ │              parameters=config.parameters,
│ │              path="",
│ │              response_class=config.response_class,
│ │              response_cookies=config.response_cookies,
│ │              response_headers=config.response_headers,
│ │ +            return_dto=config.return_dto,
│ │              # route handlers are registered below
│ │              route_handlers=[],
│ │              security=config.security,
│ │              signature_namespace=config.signature_namespace,
│ │              tags=config.tags,
│ │              type_encoders=config.type_encoders,
│ │          )
│ │ @@ -512,23 +524,17 @@
│ │          """
│ │          routes = super().register(value=value)
│ │  
│ │          for route in routes:
│ │              route_handlers = get_route_handlers(route)
│ │  
│ │              for route_handler in route_handlers:
│ │ -                self._create_handler_signature_model(route_handler=route_handler)
│ │ +                route_handler.on_registration()
│ │                  self._set_runtime_callables(route_handler=route_handler)
│ │ -                route_handler.resolve_guards()
│ │ -                route_handler.resolve_middleware()
│ │ -                route_handler.resolve_opts()
│ │ -
│ │ -                if isinstance(route_handler, HTTPRouteHandler):
│ │ -                    route_handler.resolve_before_request()
│ │ -                    route_handler.resolve_after_response()
│ │ +                self._create_handler_signature_model(route_handler=route_handler)
│ │  
│ │              if isinstance(route, HTTPRoute):
│ │                  route.create_handler_map()
│ │  
│ │              elif isinstance(route, WebSocketRoute):
│ │                  route.handler_parameter_model = route.create_handler_kwargs_model(route.route_handler)
│ │  
│ │ @@ -739,25 +745,27 @@
│ │          """Create function signature models for all route handler functions and provider dependencies."""
│ │          if not route_handler.signature_model:
│ │              route_handler.signature_model = create_signature_model(
│ │                  dependency_name_set=route_handler.dependency_name_set,
│ │                  fn=cast("AnyCallable", route_handler.fn.value),
│ │                  plugins=self.serialization_plugins,
│ │                  preferred_validation_backend=self.preferred_validation_backend,
│ │ -                signature_namespace=route_handler.resolve_signature_namespace(),
│ │ +                parsed_signature=route_handler.parsed_fn_signature,
│ │              )
│ │  
│ │          for provider in route_handler.resolve_dependencies().values():
│ │              if not getattr(provider, "signature_model", None):
│ │                  provider.signature_model = create_signature_model(
│ │                      dependency_name_set=route_handler.dependency_name_set,
│ │                      fn=provider.dependency.value,
│ │                      plugins=self.serialization_plugins,
│ │                      preferred_validation_backend=self.preferred_validation_backend,
│ │ -                    signature_namespace=route_handler.resolve_signature_namespace(),
│ │ +                    parsed_signature=ParsedSignature.from_fn(
│ │ +                        unwrap_partial(provider.dependency.value), route_handler.resolve_signature_namespace()
│ │ +                    ),
│ │                  )
│ │  
│ │      def _wrap_send(self, send: Send, scope: Scope) -> Send:
│ │          """Wrap the ASGI send and handles any 'before send' hooks.
│ │  
│ │          Args:
│ │              send: The ASGI send function.
│ │   --- litestar-1.0.0a0/litestar/background_tasks.py
│ ├── +++ litestar-2.0.0a3/litestar/background_tasks.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/cli/_utils.py
│ ├── +++ litestar-2.0.0a3/litestar/cli/_utils.py
│ │┄ Files 1% similar despite different names
│ │ @@ -129,15 +129,15 @@
│ │  
│ │      def __init__(
│ │          self,
│ │          name: str | None = None,
│ │          commands: dict[str, Command] | Sequence[Command] | None = None,
│ │          **attrs: Any,
│ │      ):
│ │ -        """Init ``litestarGroup``"""
│ │ +        """Init ``LitestarGroup``"""
│ │          self.group_class = LitestarGroup
│ │          super().__init__(name=name, commands=commands, **attrs)
│ │  
│ │      def add_command(self, cmd: Command, name: str | None = None) -> None:
│ │          """Add command.
│ │  
│ │          If necessary, inject ``app`` and ``env`` kwargs
│ │ @@ -157,26 +157,26 @@
│ │              f = _inject_args(f)
│ │              return cast("Command", Group.command(self, *args, **kwargs)(f))
│ │  
│ │          return decorator
│ │  
│ │  
│ │  class LitestarExtensionGroup(LitestarGroup):
│ │ -    """``litestarGroup`` subclass that will load Litestar-CLI extensions from the `litestar.commands` entry_point.
│ │ +    """``LitestarGroup`` subclass that will load Litestar-CLI extensions from the `litestar.commands` entry_point.
│ │  
│ │      This group class should not be used on any group besides the root ``litestar_group``.
│ │      """
│ │  
│ │      def __init__(
│ │          self,
│ │          name: str | None = None,
│ │          commands: dict[str, Command] | Sequence[Command] | None = None,
│ │          **attrs: Any,
│ │      ):
│ │ -        """Init ``litestarExtensionGroup``"""
│ │ +        """Init ``LitestarExtensionGroup``"""
│ │          super().__init__(name=name, commands=commands, **attrs)
│ │  
│ │          for entry_point in entry_points(group="litestar.commands"):
│ │              command = entry_point.load()
│ │              _wrap_commands([command])
│ │              self.add_command(command, entry_point.name)
│ │   --- litestar-1.0.0a0/litestar/cli/commands/core.py
│ ├── +++ litestar-2.0.0a3/litestar/cli/commands/core.py
│ │┄ Files 2% similar despite different names
│ │ @@ -81,15 +81,15 @@
│ │          app.debug = True
│ │  
│ │      show_app_info(app)
│ │  
│ │      console.rule("[yellow]Starting server process", align="left")
│ │  
│ │      # invoke uvicorn in a subprocess to be able to use the --reload flag. see
│ │ -    # https://github.com/starlite-api/litestar/issues/1191 and https://github.com/encode/uvicorn/issues/1045
│ │ +    # https://github.com/litestar-org/litestar/issues/1191 and https://github.com/encode/uvicorn/issues/1045
│ │  
│ │      process_args = {
│ │          "reload": env.reload or reload,
│ │          "host": env.host or host,
│ │          "port": env.port or port,
│ │          "workers": env.web_concurrency or web_concurrency,
│ │          "factory": env.is_app_factory,
│ │   --- litestar-1.0.0a0/litestar/cli/commands/schema.py
│ ├── +++ litestar-2.0.0a3/litestar/cli/commands/schema.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/cli/commands/sessions.py
│ ├── +++ litestar-2.0.0a3/litestar/cli/commands/sessions.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/cli/main.py
│ ├── +++ litestar-2.0.0a3/litestar/cli/main.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/config/allowed_hosts.py
│ ├── +++ litestar-2.0.0a3/litestar/config/allowed_hosts.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/config/app.py
│ ├── +++ litestar-2.0.0a3/litestar/config/app.py
│ │┄ Files 7% similar despite different names
│ │ @@ -3,22 +3,24 @@
│ │  from dataclasses import dataclass, field
│ │  from typing import TYPE_CHECKING, Any, Literal, Sequence
│ │  
│ │  from litestar.config.allowed_hosts import AllowedHostsConfig
│ │  from litestar.config.response_cache import ResponseCacheConfig
│ │  from litestar.datastructures import State
│ │  from litestar.events.emitter import SimpleEventEmitter
│ │ +from litestar.types.empty import Empty
│ │  
│ │  if TYPE_CHECKING:
│ │      from litestar.config.compression import CompressionConfig
│ │      from litestar.config.cors import CORSConfig
│ │      from litestar.config.csrf import CSRFConfig
│ │      from litestar.connection import Request, WebSocket
│ │      from litestar.datastructures import CacheControlHeader, ETag, ResponseHeader
│ │      from litestar.di import Provide
│ │ +    from litestar.dto.interface import DTOInterface
│ │      from litestar.events.emitter import BaseEventEmitterBackend
│ │      from litestar.events.listener import EventListener
│ │      from litestar.logging.config import BaseLoggingConfig
│ │      from litestar.openapi.config import OpenAPIConfig
│ │      from litestar.openapi.spec import SecurityRequirement
│ │      from litestar.plugins import PluginProtocol
│ │      from litestar.static_files.config import StaticFilesConfig
│ │ @@ -38,14 +40,15 @@
│ │          LifeSpanHookHandler,
│ │          Middleware,
│ │          ParametersMap,
│ │          ResponseCookies,
│ │          ResponseType,
│ │          TypeEncodersMap,
│ │      )
│ │ +    from litestar.types.empty import EmptyType
│ │  
│ │  __all__ = ("AppConfig",)
│ │  
│ │  
│ │  @dataclass
│ │  class AppConfig:
│ │      """The parameters provided to the ``Litestar`` app are used to instantiate an instance, and then the instance is
│ │ @@ -116,14 +119,16 @@
│ │      """If set this enables the builtin CORS middleware."""
│ │      csrf_config: CSRFConfig | None = field(default=None)
│ │      """If set this enables the builtin CSRF middleware."""
│ │      debug: bool = field(default=False)
│ │      """If ``True``, app errors rendered as HTML with a stack trace."""
│ │      dependencies: dict[str, Provide] = field(default_factory=dict)
│ │      """A string keyed dictionary of dependency :class:`Provider <.di.Provide>` instances."""
│ │ +    dto: type[DTOInterface] | None | EmptyType = field(default=Empty)
│ │ +    """:class:`DTOInterface <.dto.interface.DTOInterface>` to use for (de)serializing and validation of request data."""
│ │      etag: ETag | None = field(default=None)
│ │      """An ``etag`` header of type :class:`ETag <.datastructures.ETag>` to add to route handlers of this app.
│ │  
│ │      Can be overridden by route handlers.
│ │      """
│ │      event_emitter_backend: type[BaseEventEmitterBackend] = field(default=SimpleEventEmitter)
│ │      """A subclass of :class:`BaseEventEmitterBackend <.events.emitter.BaseEventEmitterBackend>`."""
│ │ @@ -138,15 +143,15 @@
│ │      middleware: list[Middleware] = field(default_factory=list)
│ │      """A list of :class:`Middleware <.types.Middleware>`."""
│ │      on_shutdown: list[LifeSpanHandler] = field(default_factory=list)
│ │      """A list of :class:`LifeSpanHandler <.types.LifeSpanHandler>` called during application shutdown."""
│ │      on_startup: list[LifeSpanHandler] = field(default_factory=list)
│ │      """A list of :class:`LifeSpanHandler <.types.LifeSpanHandler>` called during application startup."""
│ │      openapi_config: OpenAPIConfig | None = field(default=None)
│ │ -    """Defaults to :data:`DEFAULT_OPENAPI_CONFIG <.app.DEFAULT_OPENAPI_CONFIG>`"""
│ │ +    """Defaults to :data:`DEFAULT_OPENAPI_CONFIG <litestar.app.DEFAULT_OPENAPI_CONFIG>`"""
│ │      opt: dict[str, Any] = field(default_factory=dict)
│ │      """A string keyed dictionary of arbitrary values that can be accessed in :class:`Guards <.types.Guard>` or
│ │      wherever you have access to :class:`Request <.connection.Request>` or :class:`ASGI Scope <litestar.types.Scope>`.
│ │  
│ │      Can be overridden by routers and router handlers.
│ │      """
│ │      parameters: ParametersMap = field(default_factory=dict)
│ │ @@ -161,14 +166,18 @@
│ │      """A custom subclass of :class:`Response <.response.Response>` to be used as the app's default response."""
│ │      response_cookies: ResponseCookies = field(default_factory=list)  # type: ignore
│ │      """A list of :class:`Cookie <.datastructures.Cookie>`."""
│ │      response_headers: Sequence[ResponseHeader] = field(default_factory=list)
│ │      """A string keyed dictionary mapping :class:`ResponseHeader <.datastructures.ResponseHeader>`."""
│ │      response_cache_config: ResponseCacheConfig = field(default_factory=ResponseCacheConfig)
│ │      """Configures caching behavior of the application."""
│ │ +    return_dto: type[DTOInterface] | None | EmptyType = field(default=Empty)
│ │ +    """:class:`DTOInterface <.dto.interface.DTOInterface>` to use for serializing outbound response
│ │ +    data.
│ │ +    """
│ │      route_handlers: list[ControllerRouterHandler] = field(default_factory=list)
│ │      """A required list of route handlers, which can include instances of :class:`Router <.router.Router>`,
│ │      subclasses of :class:`Controller <.controller.Controller>` or any function decorated by the route handler
│ │      decorators.
│ │      """
│ │      security: list[SecurityRequirement] = field(default_factory=list)
│ │      """A list of dictionaries that will be added to the schema of all route handlers in the application. See
│ │   --- litestar-1.0.0a0/litestar/config/compression.py
│ ├── +++ litestar-2.0.0a3/litestar/config/compression.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/config/cors.py
│ ├── +++ litestar-2.0.0a3/litestar/config/cors.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/config/csrf.py
│ ├── +++ litestar-2.0.0a3/litestar/config/csrf.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/config/response_cache.py
│ ├── +++ litestar-2.0.0a3/litestar/config/response_cache.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/connection/__init__.py
│ ├── +++ litestar-2.0.0a3/litestar/connection/__init__.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/connection/base.py
│ ├── +++ litestar-2.0.0a3/litestar/connection/base.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/connection/request.py
│ ├── +++ litestar-2.0.0a3/litestar/connection/request.py
│ │┄ Files 4% similar despite different names
│ │ @@ -8,14 +8,15 @@
│ │      ASGIConnection,
│ │      AuthT,
│ │      StateT,
│ │      UserT,
│ │      empty_receive,
│ │      empty_send,
│ │  )
│ │ +from litestar.datastructures.headers import Accept
│ │  from litestar.datastructures.multi_dicts import FormMultiDict
│ │  from litestar.enums import RequestEncodingType
│ │  from litestar.exceptions import InternalServerException
│ │  from litestar.serialization import decode_json, decode_msgpack
│ │  from litestar.types import Empty
│ │  
│ │  __all__ = ("Request",)
│ │ @@ -34,15 +35,15 @@
│ │      "user-agent",
│ │  }
│ │  
│ │  
│ │  class Request(Generic[UserT, AuthT, StateT], ASGIConnection["HTTPRouteHandler", UserT, AuthT, StateT]):
│ │      """The Litestar Request class."""
│ │  
│ │ -    __slots__ = ("_json", "_form", "_body", "_msgpack", "_content_type", "is_connected")
│ │ +    __slots__ = ("_json", "_form", "_body", "_msgpack", "_content_type", "_accept", "is_connected")
│ │  
│ │      scope: HTTPScope
│ │      """The ASGI scope attached to the connection."""
│ │      receive: Receive
│ │      """The ASGI receive function."""
│ │      send: Send
│ │      """The ASGI send function."""
│ │ @@ -58,14 +59,15 @@
│ │          super().__init__(scope, receive, send)
│ │          self.is_connected: bool = True
│ │          self._body: Any = scope.get("_body", Empty)
│ │          self._form: Any = scope.get("_form", Empty)
│ │          self._json: Any = scope.get("_json", Empty)
│ │          self._msgpack: Any = scope.get("_msgpack", Empty)
│ │          self._content_type: Any = scope.get("_content_type", Empty)
│ │ +        self._accept: Any = scope.get("_accept", Empty)
│ │  
│ │      @property
│ │      def method(self) -> Method:
│ │          """Return the request method.
│ │  
│ │          Returns:
│ │              The request :class:`Method <litestar.types.Method>`
│ │ @@ -79,14 +81,25 @@
│ │          Returns:
│ │              A tuple with the parsed value and a dictionary containing any options send in it.
│ │          """
│ │          if self._content_type is Empty:
│ │              self._content_type = self.scope["_content_type"] = parse_content_header(self.headers.get("Content-Type", ""))  # type: ignore[typeddict-unknown-key]
│ │          return cast("tuple[str, dict[str, str]]", self._content_type)
│ │  
│ │ +    @property
│ │ +    def accept(self) -> Accept:
│ │ +        """Parse the request's 'Accept' header, returning an :class:`Accept <litestar.datastructures.headers.Accept>` instance.
│ │ +
│ │ +        Returns:
│ │ +            An :class:`Accept <litestar.datastructures.headers.Accept>` instance, representing the list of acceptable media types.
│ │ +        """
│ │ +        if self._accept is Empty:
│ │ +            self._accept = self.scope["_accept"] = Accept(self.headers.get("Accept", "*/*"))  # type: ignore[typeddict-unknown-key]
│ │ +        return cast("Accept", self._accept)
│ │ +
│ │      async def json(self) -> Any:
│ │          """Retrieve the json request body from the request.
│ │  
│ │          Returns:
│ │              An arbitrary value
│ │          """
│ │          if self._json is Empty:
│ │   --- litestar-1.0.0a0/litestar/connection/websocket.py
│ ├── +++ litestar-2.0.0a3/litestar/connection/websocket.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/constants.py
│ ├── +++ litestar-2.0.0a3/litestar/constants.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/contrib/htmx/_utils.py
│ ├── +++ litestar-2.0.0a3/litestar/contrib/htmx/_utils.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/contrib/htmx/request.py
│ ├── +++ litestar-2.0.0a3/litestar/contrib/htmx/request.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/contrib/htmx/response.py
│ ├── +++ litestar-2.0.0a3/litestar/contrib/htmx/response.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/contrib/htmx/types.py
│ ├── +++ litestar-2.0.0a3/litestar/contrib/htmx/types.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/contrib/jinja.py
│ ├── +++ litestar-2.0.0a3/litestar/contrib/jinja.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/contrib/jwt/__init__.py
│ ├── +++ litestar-2.0.0a3/litestar/contrib/jwt/__init__.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/contrib/jwt/jwt_auth.py
│ ├── +++ litestar-2.0.0a3/litestar/contrib/jwt/jwt_auth.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/contrib/jwt/jwt_token.py
│ ├── +++ litestar-2.0.0a3/litestar/contrib/jwt/jwt_token.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/contrib/jwt/middleware.py
│ ├── +++ litestar-2.0.0a3/litestar/contrib/jwt/middleware.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/contrib/mako.py
│ ├── +++ litestar-2.0.0a3/litestar/contrib/mako.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/contrib/opentelemetry/_utils.py
│ ├── +++ litestar-2.0.0a3/litestar/contrib/opentelemetry/_utils.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/contrib/opentelemetry/config.py
│ ├── +++ litestar-2.0.0a3/litestar/contrib/opentelemetry/config.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/contrib/opentelemetry/middleware.py
│ ├── +++ litestar-2.0.0a3/litestar/contrib/opentelemetry/middleware.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/contrib/piccolo_orm.py
│ ├── +++ litestar-2.0.0a3/litestar/contrib/piccolo_orm.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/contrib/repository/abc.py
│ ├── +++ litestar-2.0.0a3/litestar/contrib/repository/abc.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/contrib/repository/filters.py
│ ├── +++ litestar-2.0.0a3/litestar/contrib/repository/filters.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/contrib/repository/testing/generic_mock_repository.py
│ ├── +++ litestar-2.0.0a3/litestar/contrib/repository/testing/generic_mock_repository.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/contrib/sqlalchemy/base.py
│ ├── +++ litestar-2.0.0a3/litestar/contrib/sqlalchemy/base.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/contrib/sqlalchemy/init_plugin/config/asyncio.py
│ ├── +++ litestar-2.0.0a3/litestar/contrib/sqlalchemy/init_plugin/config/asyncio.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/contrib/sqlalchemy/init_plugin/config/common.py
│ ├── +++ litestar-2.0.0a3/litestar/contrib/sqlalchemy/init_plugin/config/common.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/contrib/sqlalchemy/init_plugin/config/engine.py
│ ├── +++ litestar-2.0.0a3/litestar/contrib/sqlalchemy/init_plugin/config/engine.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/contrib/sqlalchemy/init_plugin/config/sync.py
│ ├── +++ litestar-2.0.0a3/litestar/contrib/sqlalchemy/init_plugin/config/sync.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/contrib/sqlalchemy/init_plugin/plugin.py
│ ├── +++ litestar-2.0.0a3/litestar/contrib/sqlalchemy/init_plugin/plugin.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/contrib/sqlalchemy/repository.py
│ ├── +++ litestar-2.0.0a3/litestar/contrib/sqlalchemy/repository.py
│ │┄ Files 1% similar despite different names
│ │ @@ -260,15 +260,15 @@
│ │  
│ │          Returns:
│ │              Count of records returned by query, ignoring pagination.
│ │          """
│ │          statement = kwargs.pop("base_select", self.statement)
│ │          statement = statement.with_only_columns(
│ │              sql_func.count(
│ │ -                self.model_type.id,  # type:ignore[attr-defined]
│ │ +                self.model_type.id,
│ │              ),
│ │              maintain_column_froms=True,
│ │          ).order_by(None)
│ │          statement = self._apply_filters(*filters, apply_pagination=False, statement=statement)
│ │          statement = self._filter_select_by_kwargs(statement, **kwargs)
│ │          results = await self._execute(statement)
│ │          return results.scalar_one()  # type: ignore
│ │ @@ -348,15 +348,15 @@
│ │          Returns:
│ │              Count of records returned by query, ignoring pagination.
│ │          """
│ │          statement = kwargs.pop("base_select", self.statement)
│ │          statement = statement.add_columns(
│ │              over(
│ │                  sql_func.count(
│ │ -                    self.model_type.id,  # type:ignore[attr-defined]
│ │ +                    self.model_type.id,
│ │                  ),
│ │              )
│ │          )
│ │          statement = self._apply_filters(*filters, statement=statement)
│ │          statement = self._filter_select_by_kwargs(statement, **kwargs)
│ │          with wrap_sqlalchemy_exception():
│ │              result = await self._execute(statement)
│ │   --- litestar-1.0.0a0/litestar/contrib/sqlalchemy_1/config.py
│ ├── +++ litestar-2.0.0a3/litestar/contrib/sqlalchemy_1/config.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/contrib/sqlalchemy_1/plugin.py
│ ├── +++ litestar-2.0.0a3/litestar/contrib/sqlalchemy_1/plugin.py
│ │┄ Files 0% similar despite different names
│ │ @@ -11,16 +11,16 @@
│ │      Optional,
│ │      Tuple,
│ │      Type,
│ │      Union,
│ │  )
│ │  from uuid import UUID
│ │  
│ │ +from polyfactory.factories.pydantic_factory import ModelFactory
│ │  from pydantic import BaseModel, conint, constr, create_model
│ │ -from pydantic_factories import ModelFactory
│ │  
│ │  from litestar.di import Provide
│ │  from litestar.exceptions import (
│ │      ImproperlyConfiguredException,
│ │      MissingDependencyException,
│ │  )
│ │  from litestar.openapi.spec.schema import SchemaDataContainer
│ │   --- litestar-1.0.0a0/litestar/contrib/sqlalchemy_1/types.py
│ ├── +++ litestar-2.0.0a3/litestar/contrib/sqlalchemy_1/types.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/contrib/tortoise_orm.py
│ ├── +++ litestar-2.0.0a3/litestar/contrib/tortoise_orm.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/controller.py
│ ├── +++ litestar-2.0.0a3/litestar/controller.py
│ │┄ Files 4% similar despite different names
│ │ @@ -5,22 +5,24 @@
│ │  from typing import TYPE_CHECKING, Any, DefaultDict, Mapping, cast
│ │  
│ │  from litestar._layers.utils import narrow_response_cookies, narrow_response_headers
│ │  from litestar.exceptions import ImproperlyConfiguredException
│ │  from litestar.handlers.base import BaseRouteHandler
│ │  from litestar.handlers.http_handlers import HTTPRouteHandler
│ │  from litestar.handlers.websocket_handlers import WebsocketRouteHandler
│ │ +from litestar.types.empty import Empty
│ │  from litestar.utils import AsyncCallable, normalize_path
│ │  from litestar.utils.helpers import unwrap_partial
│ │  
│ │  __all__ = ("Controller",)
│ │  
│ │  
│ │  if TYPE_CHECKING:
│ │      from litestar.datastructures import CacheControlHeader, ETag
│ │ +    from litestar.dto.interface import DTOInterface
│ │      from litestar.openapi.spec import SecurityRequirement
│ │      from litestar.response import Response
│ │      from litestar.router import Router
│ │      from litestar.types import (
│ │          AfterRequestHookHandler,
│ │          AfterResponseHookHandler,
│ │          BeforeRequestHookHandler,
│ │ @@ -30,38 +32,41 @@
│ │          Middleware,
│ │          OptionalSequence,
│ │          ParametersMap,
│ │          ResponseCookies,
│ │          TypeEncodersMap,
│ │      )
│ │      from litestar.types.composite_types import ResponseHeaders
│ │ +    from litestar.types.empty import EmptyType
│ │  
│ │  
│ │  class Controller:
│ │      """The Litestar Controller class.
│ │  
│ │      Subclass this class to create 'view' like components and utilize OOP.
│ │      """
│ │  
│ │      __slots__ = (
│ │          "after_request",
│ │          "after_response",
│ │          "before_request",
│ │          "dependencies",
│ │ +        "dto",
│ │          "etag",
│ │          "exception_handlers",
│ │          "guards",
│ │          "middleware",
│ │          "opt",
│ │          "owner",
│ │          "parameters",
│ │          "path",
│ │          "response_class",
│ │          "response_cookies",
│ │          "response_headers",
│ │ +        "return_dto",
│ │          "security",
│ │          "signature_namespace",
│ │          "tags",
│ │          "type_encoders",
│ │      )
│ │  
│ │      after_request: AfterRequestHookHandler | None
│ │ @@ -84,14 +89,16 @@
│ │      """A :class:`CacheControlHeader <.datastructures.CacheControlHeader>` header to add to route handlers of this
│ │      controller.
│ │  
│ │      Can be overridden by route handlers.
│ │      """
│ │      dependencies: Dependencies | None
│ │      """A string keyed dictionary of dependency :class:`Provider <.di.Provide>` instances."""
│ │ +    dto: type[DTOInterface] | None | EmptyType
│ │ +    """:class:`DTOInterface <.dto.interface.DTOInterface>` to use for (de)serializing and validation of request data."""
│ │      etag: ETag | None
│ │      """An ``etag`` header of type :class:`ETag <.datastructures.ETag>` to add to route handlers of this controller.
│ │  
│ │      Can be overridden by route handlers.
│ │      """
│ │      exception_handlers: ExceptionHandlersMap | None
│ │      """A map of handler functions to status codes and/or exception types."""
│ │ @@ -100,15 +107,15 @@
│ │      middleware: OptionalSequence[Middleware]
│ │      """A sequence of :class:`Middleware <.types.Middleware>`."""
│ │      opt: Mapping[str, Any] | None
│ │      """A string key mapping of arbitrary values that can be accessed in :class:`Guards <.types.Guard>` or wherever you
│ │      have access to :class:`Request <.connection.Request>` or :class:`ASGI Scope <.types.Scope>`.
│ │      """
│ │      owner: Router
│ │ -    """The :class:`Router <.router.Router>` or :class:`Litestar <.app.Litestar>` app that owns the controller.
│ │ +    """The :class:`Router <.router.Router>` or :class:`Litestar <litestar.app.Litestar>` app that owns the controller.
│ │  
│ │      This value is set internally by Litestar and it should not be set when subclassing the controller.
│ │      """
│ │      parameters: ParametersMap | None
│ │      """A mapping of :class:`Parameter <.params.Parameter>` definitions available to all application paths."""
│ │      path: str
│ │      """A path fragment for the controller.
│ │ @@ -119,14 +126,18 @@
│ │      """A custom subclass of :class:`Response <.response.Response>` to be used as the default response for all route
│ │      handlers under the controller.
│ │      """
│ │      response_cookies: ResponseCookies | None
│ │      """A list of :class:`Cookie <.datastructures.Cookie>` instances."""
│ │      response_headers: ResponseHeaders | None
│ │      """A string keyed dictionary mapping :class:`ResponseHeader <.datastructures.ResponseHeader>` instances."""
│ │ +    return_dto: type[DTOInterface] | None | EmptyType
│ │ +    """:class:`DTOInterface <.dto.interface.DTOInterface>` to use for serializing outbound response
│ │ +    data.
│ │ +    """
│ │      tags: OptionalSequence[str]
│ │      """A sequence of string tags that will be appended to the schema of all route handlers under the controller."""
│ │      security: OptionalSequence[SecurityRequirement]
│ │      """A sequence of dictionaries that to the schema of all route handlers under the controller."""
│ │      signature_namespace: dict[str, Any]
│ │      """A mapping of names to types for use in forward reference resolution during signature modelling."""
│ │      type_encoders: TypeEncodersMap | None
│ │ @@ -143,14 +154,20 @@
│ │          # Since functions set on classes are bound, we need replace the bound instance with the class version and wrap
│ │          # it to ensure it does not get bound.
│ │          for key in ("after_request", "after_response", "before_request"):
│ │              cls_value = getattr(type(self), key, None)
│ │              if callable(cls_value):
│ │                  setattr(self, key, AsyncCallable(cls_value))
│ │  
│ │ +        if not hasattr(self, "dto"):
│ │ +            self.dto = Empty
│ │ +
│ │ +        if not hasattr(self, "return_dto"):
│ │ +            self.return_dto = Empty
│ │ +
│ │          for key in self.__slots__:
│ │              if not hasattr(self, key):
│ │                  setattr(self, key, None)
│ │  
│ │          self.response_cookies = narrow_response_cookies(self.response_cookies)
│ │          self.response_headers = narrow_response_headers(self.response_headers)
│ │          self.signature_namespace = self.signature_namespace or {}
│ │   --- litestar-1.0.0a0/litestar/data_extractors.py
│ ├── +++ litestar-2.0.0a3/litestar/data_extractors.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/datastructures/__init__.py
│ ├── +++ litestar-2.0.0a3/litestar/datastructures/__init__.py
│ │┄ Files 10% similar despite different names
│ │ @@ -1,9 +1,10 @@
│ │  from litestar.datastructures.cookie import Cookie
│ │  from litestar.datastructures.headers import (
│ │ +    Accept,
│ │      CacheControlHeader,
│ │      ETag,
│ │      Header,
│ │      Headers,
│ │      MutableScopeHeaders,
│ │  )
│ │  from litestar.datastructures.multi_dicts import (
│ │ @@ -14,14 +15,15 @@
│ │  )
│ │  from litestar.datastructures.response_header import ResponseHeader
│ │  from litestar.datastructures.state import ImmutableState, State
│ │  from litestar.datastructures.upload_file import UploadFile
│ │  from litestar.datastructures.url import URL, Address
│ │  
│ │  __all__ = (
│ │ +    "Accept",
│ │      "Address",
│ │      "CacheControlHeader",
│ │      "Cookie",
│ │      "ETag",
│ │      "FormMultiDict",
│ │      "Header",
│ │      "Headers",
│ │   --- litestar-1.0.0a0/litestar/datastructures/cookie.py
│ ├── +++ litestar-2.0.0a3/litestar/datastructures/cookie.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/datastructures/headers.py
│ ├── +++ litestar-2.0.0a3/litestar/datastructures/headers.py
│ │┄ Files 25% similar despite different names
│ │ @@ -1,9 +1,11 @@
│ │  import re
│ │  from abc import ABC, abstractmethod
│ │ +from contextlib import suppress
│ │ +from copy import copy
│ │  from typing import (
│ │      TYPE_CHECKING,
│ │      Any,
│ │      ClassVar,
│ │      Dict,
│ │      Iterable,
│ │      Iterator,
│ │ @@ -16,19 +18,20 @@
│ │      cast,
│ │  )
│ │  
│ │  from multidict import CIMultiDict, CIMultiDictProxy, MultiMapping
│ │  from pydantic import BaseModel, Extra, Field, ValidationError, validator
│ │  from typing_extensions import Annotated
│ │  
│ │ +from litestar._multipart import parse_content_header
│ │  from litestar._parsers import parse_headers
│ │  from litestar.datastructures.multi_dicts import MultiMixin
│ │  from litestar.exceptions import ImproperlyConfiguredException
│ │  
│ │ -__all__ = ("CacheControlHeader", "ETag", "Header", "Headers", "MutableScopeHeaders")
│ │ +__all__ = ("Accept", "CacheControlHeader", "ETag", "Header", "Headers", "MutableScopeHeaders")
│ │  
│ │  
│ │  if TYPE_CHECKING:
│ │      from litestar.types.asgi_types import (
│ │          HeaderScope,
│ │          Message,
│ │          RawHeaders,
│ │ @@ -382,7 +385,122 @@
│ │  
│ │      @validator("value", always=True)
│ │      def validate_value(cls, value: Any, values: Dict[str, Any]) -> Any:
│ │          """Ensure that either value is set or the instance is for ``documentation_only``."""
│ │          if values.get("documentation_only") or value is not None:
│ │              return value
│ │          raise ValueError("value must be set if documentation_only is false")
│ │ +
│ │ +
│ │ +class _MediaType:
│ │ +    """A helper class for ``Accept`` header parsing."""
│ │ +
│ │ +    __slots__ = ("maintype", "subtype", "params", "_params_str")
│ │ +
│ │ +    def __init__(self, type_str: str):
│ │ +        # preserve the original parameters, because the order might be
│ │ +        # changed in the dict
│ │ +        self._params_str = "".join(type_str.partition(";")[1:])
│ │ +
│ │ +        full_type, self.params = parse_content_header(type_str)
│ │ +        self.maintype, _, self.subtype = full_type.partition("/")
│ │ +
│ │ +    def __str__(self) -> str:
│ │ +        return f"{self.maintype}/{self.subtype}{self._params_str}"
│ │ +
│ │ +    @property
│ │ +    def priority(self) -> Tuple[int, int]:
│ │ +        # Use fixed point values with two decimals to avoid problems
│ │ +        # when comparing float values
│ │ +        quality = 100
│ │ +        if "q" in self.params:
│ │ +            with suppress(ValueError):
│ │ +                quality = int(100 * float(self.params["q"]))
│ │ +
│ │ +        if self.maintype == "*":
│ │ +            specificity = 0
│ │ +        elif self.subtype == "*":
│ │ +            specificity = 1
│ │ +        elif not self.params or ("q" in self.params and len(self.params) == 1):
│ │ +            # no params or 'q' is the only one which we ignore
│ │ +            specificity = 2
│ │ +        else:
│ │ +            specificity = 3
│ │ +
│ │ +        return quality, specificity
│ │ +
│ │ +    def match(self, other: "_MediaType") -> bool:
│ │ +        # Check parameters first, ignore the weight parameter 'q'.
│ │ +        # Additional parameters on other are also ignored.
│ │ +        for key, value in self.params.items():
│ │ +            if key != "q" and value != other.params.get(key):
│ │ +                return False
│ │ +
│ │ +        # Then check if the subtypes match, ignoring the wildcard '*'
│ │ +        if self.subtype != "*" and other.subtype != "*" and self.subtype != other.subtype:
│ │ +            return False
│ │ +
│ │ +        # Lastly check the main type, also ignoring the wildcard '*'
│ │ +        if self.maintype != "*" and other.maintype != "*" and self.maintype != other.maintype:
│ │ +            return False
│ │ +
│ │ +        return True
│ │ +
│ │ +
│ │ +class Accept:
│ │ +    """An ``Accept`` header."""
│ │ +
│ │ +    __slots__ = ("_accepted_types",)
│ │ +
│ │ +    def __init__(self, accept_value: str):
│ │ +        self._accepted_types = [_MediaType(t) for t in accept_value.split(",")]
│ │ +        self._accepted_types.sort(key=lambda t: t.priority, reverse=True)
│ │ +
│ │ +    def __len__(self) -> int:
│ │ +        return len(self._accepted_types)
│ │ +
│ │ +    def __getitem__(self, key: int) -> str:
│ │ +        return str(self._accepted_types[key])
│ │ +
│ │ +    def __iter__(self) -> Iterator[str]:
│ │ +        return map(str, self._accepted_types)
│ │ +
│ │ +    def best_match(self, provided_types: List[str], default: Optional[str] = None) -> Optional[str]:
│ │ +        """Find the best matching media type for the request.
│ │ +
│ │ +        Args:
│ │ +            provided_types: A list of media types that can be provided as a response. These types
│ │ +                            can contain a wildcard ``*`` character in the main- or subtype part.
│ │ +            default: The media type that is returned if none of the provided types match.
│ │ +
│ │ +        Returns:
│ │ +            The best matching media type. If the matching provided type contains wildcard characters,
│ │ +            they are replaced with the corresponding part of the accepted type. Otherwise the
│ │ +            provided type is returned as-is.
│ │ +        """
│ │ +        types = [_MediaType(t) for t in provided_types]
│ │ +
│ │ +        for accepted in self._accepted_types:
│ │ +            for provided in types:
│ │ +                if provided.match(accepted):
│ │ +                    # Return the accepted type with wildcards replaced
│ │ +                    # by concrete parts from the provided type
│ │ +                    result = copy(provided)
│ │ +                    if result.subtype == "*":
│ │ +                        result.subtype = accepted.subtype
│ │ +                    if result.maintype == "*":
│ │ +                        result.maintype = accepted.maintype
│ │ +                    return str(result)
│ │ +        return default
│ │ +
│ │ +    def accepts(self, media_type: str) -> bool:
│ │ +        """Check if the request accepts the specified media type.
│ │ +
│ │ +        If multiple media types can be provided, it is better to use :func:`best_match`.
│ │ +
│ │ +        Args:
│ │ +            media_type: The media type to check for.
│ │ +
│ │ +        Returns:
│ │ +            True if the request accepts ``media_type``.
│ │ +        """
│ │ +        return self.best_match([media_type]) == media_type
│ │   --- litestar-1.0.0a0/litestar/datastructures/multi_dicts.py
│ ├── +++ litestar-2.0.0a3/litestar/datastructures/multi_dicts.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/datastructures/response_header.py
│ ├── +++ litestar-2.0.0a3/litestar/datastructures/response_header.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/datastructures/state.py
│ ├── +++ litestar-2.0.0a3/litestar/datastructures/state.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/datastructures/upload_file.py
│ ├── +++ litestar-2.0.0a3/litestar/datastructures/upload_file.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/datastructures/url.py
│ ├── +++ litestar-2.0.0a3/litestar/datastructures/url.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/di.py
│ ├── +++ litestar-2.0.0a3/litestar/di.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/enums.py
│ ├── +++ litestar-2.0.0a3/litestar/enums.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/events/emitter.py
│ ├── +++ litestar-2.0.0a3/litestar/events/emitter.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/events/listener.py
│ ├── +++ litestar-2.0.0a3/litestar/events/listener.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/exceptions/__init__.py
│ ├── +++ litestar-2.0.0a3/litestar/exceptions/__init__.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/exceptions/base_exceptions.py
│ ├── +++ litestar-2.0.0a3/litestar/exceptions/base_exceptions.py
│ │┄ Files 5% similar despite different names
│ │ @@ -7,15 +7,15 @@
│ │  
│ │  class LitestarException(Exception):
│ │      """Base exception class from which all Litestar exceptions inherit."""
│ │  
│ │      detail: str
│ │  
│ │      def __init__(self, *args: Any, detail: str = "") -> None:
│ │ -        """Initialize ``litestarException``.
│ │ +        """Initialize ``LitestarException``.
│ │  
│ │          Args:
│ │              *args: args are converted to :class:`str` before passing to :class:`Exception`
│ │              detail: detail of the exception.
│ │          """
│ │          self.detail = detail
│ │          super().__init__(*(str(arg) for arg in args if arg), detail)
│ │   --- litestar-1.0.0a0/litestar/exceptions/http_exceptions.py
│ ├── +++ litestar-2.0.0a3/litestar/exceptions/http_exceptions.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/exceptions/websocket_exceptions.py
│ ├── +++ litestar-2.0.0a3/litestar/exceptions/websocket_exceptions.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/file_system.py
│ ├── +++ litestar-2.0.0a3/litestar/file_system.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/handlers/asgi_handlers.py
│ ├── +++ litestar-2.0.0a3/litestar/handlers/asgi_handlers.py
│ │┄ Files 12% similar despite different names
│ │ @@ -1,13 +1,14 @@
│ │  from __future__ import annotations
│ │  
│ │  from typing import TYPE_CHECKING, Any, Mapping, Sequence
│ │  
│ │  from litestar.exceptions import ImproperlyConfiguredException
│ │  from litestar.handlers.base import BaseRouteHandler
│ │ +from litestar.types.builtin_types import NoneType
│ │  from litestar.utils import is_async_callable
│ │  
│ │  __all__ = ("ASGIRouteHandler", "asgi")
│ │  
│ │  
│ │  if TYPE_CHECKING:
│ │      from litestar.types import (
│ │ @@ -71,18 +72,18 @@
│ │              **kwargs,
│ │          )
│ │  
│ │      def _validate_handler_function(self) -> None:
│ │          """Validate the route handler function once it's set by inspecting its return annotations."""
│ │          super()._validate_handler_function()
│ │  
│ │ -        if self.signature.return_annotation not in {None, "None"}:
│ │ +        if not self.parsed_fn_signature.return_type.is_subclass_of(NoneType):
│ │              raise ImproperlyConfiguredException("ASGI handler functions should return 'None'")
│ │  
│ │ -        if any(key not in self.signature.parameters for key in ("scope", "send", "receive")):
│ │ +        if any(key not in self.parsed_fn_signature.parameters for key in ("scope", "send", "receive")):
│ │              raise ImproperlyConfiguredException(
│ │                  "ASGI handler functions should define 'scope', 'send' and 'receive' arguments"
│ │              )
│ │          if not is_async_callable(self.fn.value):
│ │              raise ImproperlyConfiguredException("Functions decorated with 'asgi' must be async functions")
│ │   --- litestar-1.0.0a0/litestar/handlers/base.py
│ ├── +++ litestar-2.0.0a3/litestar/handlers/base.py
│ │┄ Files 16% similar despite different names
│ │ @@ -1,125 +1,138 @@
│ │  from __future__ import annotations
│ │  
│ │  from copy import copy
│ │ -from inspect import Signature
│ │  from typing import TYPE_CHECKING, Any, Generic, Mapping, Sequence, TypeVar, cast
│ │  
│ │  from litestar._signature.field import SignatureField
│ │ +from litestar.dto.interface import DTOInterface
│ │  from litestar.exceptions import ImproperlyConfiguredException
│ │ -from litestar.types import Dependencies, Empty, EmptyType, ExceptionHandlersMap, Guard, Middleware, TypeEncodersMap
│ │ +from litestar.types import Dependencies, Empty, ExceptionHandlersMap, Guard, Middleware, TypeEncodersMap
│ │ +from litestar.types.parsed_signature import ParsedSignature
│ │  from litestar.utils import AsyncCallable, Ref, get_name, normalize_path
│ │  from litestar.utils.helpers import unwrap_partial
│ │  
│ │ -__all__ = ("BaseRouteHandler",)
│ │ -
│ │ -
│ │  if TYPE_CHECKING:
│ │      from typing_extensions import Self
│ │  
│ │      from litestar._signature.models import SignatureModel
│ │      from litestar.connection import ASGIConnection
│ │      from litestar.controller import Controller
│ │      from litestar.di import Provide
│ │      from litestar.params import ParameterKwarg
│ │      from litestar.router import Router
│ │      from litestar.types import AsyncAnyCallable, ExceptionHandler
│ │      from litestar.types.composite_types import MaybePartial
│ │ +    from litestar.types.empty import EmptyType
│ │ +
│ │ +__all__ = ("BaseRouteHandler",)
│ │  
│ │  T = TypeVar("T", bound="BaseRouteHandler")
│ │  
│ │  
│ │  class BaseRouteHandler(Generic[T]):
│ │      """Base route handler.
│ │  
│ │      Serves as a subclass for all route handlers
│ │      """
│ │  
│ │ -    signature: Signature
│ │ -
│ │      __slots__ = (
│ │          "_fn",
│ │ +        "_parsed_fn_signature",
│ │          "_resolved_dependencies",
│ │ +        "_resolved_dto",
│ │          "_resolved_guards",
│ │          "_resolved_layered_parameters",
│ │ +        "_resolved_return_dto",
│ │          "_resolved_signature_namespace",
│ │          "_resolved_type_encoders",
│ │          "dependencies",
│ │ +        "dto",
│ │          "exception_handlers",
│ │          "guards",
│ │          "middleware",
│ │          "name",
│ │          "opt",
│ │          "owner",
│ │          "paths",
│ │ -        "signature",
│ │ +        "return_dto",
│ │          "signature_model",
│ │          "signature_namespace",
│ │          "type_encoders",
│ │      )
│ │  
│ │      def __init__(
│ │          self,
│ │          path: str | Sequence[str] | None = None,
│ │          *,
│ │          dependencies: Dependencies | None = None,
│ │ +        dto: type[DTOInterface] | None | EmptyType = Empty,
│ │          exception_handlers: ExceptionHandlersMap | None = None,
│ │          guards: Sequence[Guard] | None = None,
│ │          middleware: Sequence[Middleware] | None = None,
│ │          name: str | None = None,
│ │          opt: Mapping[str, Any] | None = None,
│ │ +        return_dto: type[DTOInterface] | None | EmptyType = Empty,
│ │          signature_namespace: Mapping[str, Any] | None = None,
│ │          type_encoders: TypeEncodersMap | None = None,
│ │          **kwargs: Any,
│ │      ) -> None:
│ │          """Initialize ``HTTPRouteHandler``.
│ │  
│ │          Args:
│ │              path: A path fragment for the route handler function or a sequence of path fragments. If not given defaults
│ │                  to ``/``
│ │              dependencies: A string keyed mapping of dependency :class:`Provider <.di.Provide>` instances.
│ │ +            dto: :class:`DTOInterface <.dto.interface.DTOInterface>` to use for (de)serializing and
│ │ +                validation of request data.
│ │              exception_handlers: A mapping of status codes and/or exception types to handler functions.
│ │              guards: A sequence of :class:`Guard <.types.Guard>` callables.
│ │              middleware: A sequence of :class:`Middleware <.types.Middleware>`.
│ │              name: A string identifying the route handler.
│ │              opt: A string keyed mapping of arbitrary values that can be accessed in :class:`Guards <.types.Guard>` or
│ │                  wherever you have access to :class:`Request <.connection.Request>` or
│ │                  :class:`ASGI Scope <.types.Scope>`.
│ │ -            signature_namespace: A mapping of names to types for use in forward reference resolution during signature modelling.
│ │ +            return_dto: :class:`DTOInterface <.dto.interface.DTOInterface>` to use for serializing
│ │ +                outbound response data.
│ │ +            signature_namespace: A mapping of names to types for use in forward reference resolution during signature
│ │ +                modelling.
│ │              type_encoders: A mapping of types to callables that transform them into types supported for serialization.
│ │              **kwargs: Any additional kwarg - will be set in the opt dictionary.
│ │          """
│ │ +        self._parsed_fn_signature: ParsedSignature | EmptyType = Empty
│ │          self._resolved_dependencies: dict[str, Provide] | EmptyType = Empty
│ │ +        self._resolved_dto: type[DTOInterface] | None | EmptyType = Empty
│ │          self._resolved_guards: list[Guard] | EmptyType = Empty
│ │          self._resolved_layered_parameters: dict[str, SignatureField] | EmptyType = Empty
│ │ +        self._resolved_return_dto: type[DTOInterface] | None | EmptyType = Empty
│ │          self._resolved_signature_namespace: dict[str, Any] | EmptyType = Empty
│ │          self._resolved_type_encoders: TypeEncodersMap | EmptyType = Empty
│ │  
│ │          self.dependencies = dependencies
│ │ +        self.dto = dto
│ │          self.exception_handlers = exception_handlers
│ │          self.guards = guards
│ │          self.middleware = middleware
│ │          self.name = name
│ │          self.opt = dict(opt or {})
│ │          self.owner: Controller | Router | None = None
│ │ +        self.return_dto = return_dto
│ │          self.signature_model: type[SignatureModel] | None = None
│ │          self.signature_namespace = signature_namespace or {}
│ │          self.paths = (
│ │              {normalize_path(p) for p in path}
│ │              if path and isinstance(path, list)
│ │              else {normalize_path(path or "/")}  # type: ignore
│ │          )
│ │          self.opt.update(**kwargs)
│ │          self.type_encoders = type_encoders
│ │  
│ │      def __call__(self, fn: AsyncAnyCallable) -> Self:
│ │          """Replace a function with itself."""
│ │          self._fn = Ref["MaybePartial[AsyncAnyCallable]"](fn)
│ │ -        self.signature = Signature.from_callable(fn)
│ │ -        self._validate_handler_function()
│ │          return self
│ │  
│ │      @property
│ │      def fn(self) -> Ref[MaybePartial[AsyncAnyCallable]]:
│ │          """Get the handler function.
│ │  
│ │          Raises:
│ │ @@ -129,14 +142,30 @@
│ │              Handler function
│ │          """
│ │          if not hasattr(self, "_fn"):
│ │              raise ImproperlyConfiguredException("Handler has not decorated a function")
│ │          return self._fn
│ │  
│ │      @property
│ │ +    def parsed_fn_signature(self) -> ParsedSignature:
│ │ +        """Return the parsed signature of the handler function.
│ │ +
│ │ +        This method is memoized so the computation occurs only once.
│ │ +
│ │ +        Returns:
│ │ +            A :class:`ParsedSignature <.types.parsed_signature.ParsedSignature>` instance
│ │ +        """
│ │ +        if self._parsed_fn_signature is Empty:
│ │ +            self._parsed_fn_signature = ParsedSignature.from_fn(
│ │ +                unwrap_partial(self.fn.value), self.resolve_signature_namespace()
│ │ +            )
│ │ +
│ │ +        return cast("ParsedSignature", self._parsed_fn_signature)
│ │ +
│ │ +    @property
│ │      def handler_name(self) -> str:
│ │          """Get the name of the handler function.
│ │  
│ │          Raises:
│ │              ImproperlyConfiguredException: if handler fn is not set.
│ │  
│ │          Returns:
│ │ @@ -268,14 +297,67 @@
│ │              ns: dict[str, Any] = {}
│ │              for layer in self.ownership_layers:
│ │                  ns.update(layer.signature_namespace)
│ │  
│ │              self._resolved_signature_namespace = ns
│ │          return cast("dict[str, Any]", self._resolved_signature_namespace)
│ │  
│ │ +    def resolve_dto(self) -> type[DTOInterface] | None:
│ │ +        """Resolve the data_dto by starting from the route handler and moving up.
│ │ +        If a handler is found it is returned, otherwise None is set.
│ │ +        This method is memoized so the computation occurs only once.
│ │ +
│ │ +        Returns:
│ │ +            An optional :class:`DTO type <.dto.interface.DTOInterface>`
│ │ +        """
│ │ +        if self._resolved_dto is Empty:
│ │ +            dtos: list[type[DTOInterface] | None] = [
│ │ +                layer_dto  # type:ignore[misc]
│ │ +                for layer in self.ownership_layers
│ │ +                if (layer_dto := layer.dto) is not Empty
│ │ +            ]
│ │ +            self._resolved_dto = dtos[-1] if dtos else None
│ │ +
│ │ +        return cast("type[DTOInterface] | None", self._resolved_dto)
│ │ +
│ │ +    def resolve_return_dto(self) -> type[DTOInterface] | None:
│ │ +        """Resolve the return_dto by starting from the route handler and moving up.
│ │ +        If a handler is found it is returned, otherwise None is set.
│ │ +        This method is memoized so the computation occurs only once.
│ │ +
│ │ +        Returns:
│ │ +            An optional :class:`DTO type <.dto.interface.DTOInterface>`
│ │ +        """
│ │ +        if self._resolved_return_dto is Empty:
│ │ +            return_dtos: list[type[DTOInterface] | None] = [
│ │ +                layer_dto_type  # type:ignore[misc]
│ │ +                for layer in self.ownership_layers
│ │ +                if (layer_dto_type := layer.return_dto) is not Empty
│ │ +            ]
│ │ +            self._resolved_return_dto = return_dtos[-1] if return_dtos else self.resolve_dto()
│ │ +
│ │ +        return cast("type[DTOInterface] | None", self._resolved_return_dto)
│ │ +
│ │ +    def _init_handler_dtos(self) -> None:
│ │ +        """Initialize the data and return DTOs for the handler."""
│ │ +        data_parameter = self.parsed_fn_signature.parameters.get("data")
│ │ +        if data_parameter:
│ │ +            parameter_type = data_parameter.parsed_type
│ │ +            dto = parameter_type.annotation if parameter_type.is_subclass_of(DTOInterface) else self.resolve_dto()
│ │ +            if dto:
│ │ +                dto.on_registration(parameter_type.annotation, self)
│ │ +
│ │ +        return_type = self.parsed_fn_signature.return_type
│ │ +        if return_type.annotation is not Empty:
│ │ +            return_dto = (
│ │ +                return_type.annotation if return_type.is_subclass_of(DTOInterface) else self.resolve_return_dto()
│ │ +            )
│ │ +            if return_dto:
│ │ +                return_dto.on_registration(return_type.annotation, self)
│ │ +
│ │      async def authorize_connection(self, connection: "ASGIConnection") -> None:
│ │          """Ensure the connection is authorized by running all the route guards in scope."""
│ │          for guard in self.resolve_guards():
│ │              await guard(connection, copy(self))  # type: ignore
│ │  
│ │      @staticmethod
│ │      def _validate_dependency_is_unique(dependencies: dict[str, Provide], key: str, provider: Provide) -> None:
│ │ @@ -283,14 +365,22 @@
│ │          for dependency_key, value in dependencies.items():
│ │              if provider == value:
│ │                  raise ImproperlyConfiguredException(
│ │                      f"Provider for key {key} is already defined under the different key {dependency_key}. "
│ │                      f"If you wish to override a provider, it must have the same key."
│ │                  )
│ │  
│ │ +    def on_registration(self) -> None:
│ │ +        """Called once per handler when the app object is instantiated."""
│ │ +        self._validate_handler_function()
│ │ +        self.resolve_guards()
│ │ +        self.resolve_middleware()
│ │ +        self.resolve_opts()
│ │ +        self._init_handler_dtos()
│ │ +
│ │      def _validate_handler_function(self) -> None:
│ │          """Validate the route handler function once set by inspecting its return annotations."""
│ │  
│ │      def __str__(self) -> str:
│ │          """Return a unique identifier for the route handler.
│ │  
│ │          Returns:
│ │   --- litestar-1.0.0a0/litestar/handlers/http_handlers/_utils.py
│ ├── +++ litestar-2.0.0a3/litestar/handlers/http_handlers/_utils.py
│ │┄ Files 5% similar despite different names
│ │ @@ -1,25 +1,19 @@
│ │  from __future__ import annotations
│ │  
│ │  from functools import lru_cache
│ │  from inspect import isawaitable
│ │  from typing import TYPE_CHECKING, Any, Sequence, cast
│ │  
│ │ -from typing_extensions import get_args
│ │ -
│ │ -from litestar.dto import DTO
│ │ +from litestar.dto.interface import DTOInterface
│ │  from litestar.enums import HttpMethod
│ │  from litestar.exceptions import ValidationException
│ │  from litestar.plugins import get_plugin_for_value
│ │  from litestar.status_codes import HTTP_200_OK, HTTP_201_CREATED, HTTP_204_NO_CONTENT
│ │ -from litestar.utils import (
│ │ -    annotation_is_iterable_of_type,
│ │ -    is_async_callable,
│ │ -    is_class_and_subclass,
│ │ -)
│ │ +from litestar.utils import is_async_callable
│ │  
│ │  if TYPE_CHECKING:
│ │      from litestar.app import Litestar
│ │      from litestar.background_tasks import BackgroundTask, BackgroundTasks
│ │      from litestar.connection import Request
│ │      from litestar.datastructures import Cookie, ResponseHeader
│ │      from litestar.plugins import SerializationPluginProtocol
│ │ @@ -50,42 +44,38 @@
│ │  def create_data_handler(
│ │      after_request: AfterRequestHookHandler | None,
│ │      background: BackgroundTask | BackgroundTasks | None,
│ │      cookies: frozenset[Cookie],
│ │      headers: frozenset[ResponseHeader],
│ │      media_type: str,
│ │      response_class: ResponseType,
│ │ -    return_annotation: Any,
│ │      status_code: int,
│ │      type_encoders: TypeEncodersMap | None,
│ │  ) -> AsyncAnyCallable:
│ │      """Create a handler function for arbitrary data.
│ │  
│ │      Args:
│ │          after_request: An after request handler.
│ │          background: A background task or background tasks.
│ │          cookies: A set of pre-defined cookies.
│ │          headers: A set of response headers.
│ │          media_type: The response media type.
│ │          response_class: The response class to use.
│ │ -        return_annotation: The return annotation.
│ │          status_code: The response status code.
│ │          type_encoders: A mapping of types to encoder functions.
│ │  
│ │      Returns:
│ │          A handler function.
│ │  
│ │      """
│ │      normalized_headers = [
│ │          (name.lower().encode("latin-1"), value.encode("latin-1")) for name, value in normalize_headers(headers).items()
│ │      ]
│ │      cookie_headers = [cookie.to_encoded_header() for cookie in cookies if not cookie.documentation_only]
│ │      raw_headers = [*normalized_headers, *cookie_headers]
│ │ -    is_dto_annotation = is_class_and_subclass(return_annotation, DTO)
│ │ -    is_dto_iterable_annotation = annotation_is_iterable_of_type(return_annotation, DTO)
│ │  
│ │      async def create_response(data: Any) -> "ASGIApp":
│ │          response = response_class(
│ │              background=background,
│ │              content=data,
│ │              media_type=media_type,
│ │              status_code=status_code,
│ │ @@ -94,28 +84,29 @@
│ │          response.raw_headers = raw_headers
│ │  
│ │          if after_request:
│ │              return await after_request(response)  # type: ignore
│ │  
│ │          return response
│ │  
│ │ -    async def handler(data: Any, plugins: list["SerializationPluginProtocol"], **kwargs: Any) -> "ASGIApp":
│ │ +    async def handler(
│ │ +        data: Any,
│ │ +        plugins: list["SerializationPluginProtocol"],
│ │ +        return_dto: type[DTOInterface] | None,
│ │ +        request: Request[Any, Any, Any],
│ │ +        **kwargs: Any,
│ │ +    ) -> "ASGIApp":
│ │          if isawaitable(data):
│ │              data = await data
│ │  
│ │ -        if is_dto_annotation and not isinstance(data, DTO):
│ │ -            data = return_annotation(**data) if isinstance(data, dict) else return_annotation.from_model_instance(data)
│ │ -
│ │ -        elif is_dto_iterable_annotation and data and not isinstance(data[0], DTO):  # pyright: ignore
│ │ -            dto_type = cast("type[DTO]", get_args(return_annotation)[0])
│ │ -            data = [
│ │ -                dto_type(**datum) if isinstance(datum, dict) else dto_type.from_model_instance(datum) for datum in data
│ │ -            ]
│ │ -
│ │ -        elif plugins and not (is_dto_annotation or is_dto_iterable_annotation):
│ │ +        if isinstance(data, DTOInterface):
│ │ +            data = data.to_encodable_type(request=request)
│ │ +        elif return_dto:
│ │ +            data = return_dto.from_data(data=data).to_encodable_type(request=request)
│ │ +        elif plugins:
│ │              data = await normalize_response_data(data=data, plugins=plugins)
│ │  
│ │          return await create_response(data=data)
│ │  
│ │      return handler
│ │  
│ │  
│ │ @@ -214,15 +205,15 @@
│ │          status_code: The response status code.
│ │  
│ │      Returns:
│ │          A handler function.
│ │      """
│ │      normalized_headers = normalize_headers(headers)
│ │  
│ │ -    async def handler(data: ResponseContainer, app: "Litestar", request: "Request", **kwargs: Any) -> "ASGIApp":
│ │ +    async def handler(data: ResponseContainer, app: Litestar, request: Request, **kwargs: Any) -> "ASGIApp":
│ │          response = data.to_response(
│ │              app=app,
│ │              headers={**normalized_headers, **data.headers},
│ │              status_code=status_code,
│ │              media_type=data.media_type or media_type,
│ │              request=request,
│ │          )
│ │   --- litestar-1.0.0a0/litestar/handlers/http_handlers/base.py
│ ├── +++ litestar-2.0.0a3/litestar/handlers/http_handlers/base.py
│ │┄ Files 4% similar despite different names
│ │ @@ -1,17 +1,15 @@
│ │  from __future__ import annotations
│ │  
│ │  from enum import Enum
│ │ -from inspect import Signature
│ │  from typing import TYPE_CHECKING, AnyStr, Mapping, cast
│ │  
│ │  from typing_extensions import TypedDict
│ │  
│ │  from litestar._layers.utils import narrow_response_cookies, narrow_response_headers
│ │ -from litestar._signature.utils import get_signature_model
│ │  from litestar.datastructures.cookie import Cookie
│ │  from litestar.datastructures.response_header import ResponseHeader
│ │  from litestar.enums import HttpMethod, MediaType
│ │  from litestar.exceptions import (
│ │      HTTPException,
│ │      ImproperlyConfiguredException,
│ │  )
│ │ @@ -41,26 +39,28 @@
│ │      Method,
│ │      Middleware,
│ │      ResponseCookies,
│ │      ResponseHeaders,
│ │      ResponseType,
│ │      TypeEncodersMap,
│ │  )
│ │ -from litestar.utils import AsyncCallable, is_async_callable, is_class_and_subclass
│ │ +from litestar.types.builtin_types import NoneType
│ │ +from litestar.utils import AsyncCallable, is_async_callable
│ │  
│ │  if TYPE_CHECKING:
│ │      from typing import Any, Awaitable, Callable, Sequence
│ │  
│ │      from litestar.app import Litestar
│ │      from litestar.background_tasks import BackgroundTask, BackgroundTasks
│ │      from litestar.config.response_cache import CACHE_FOREVER
│ │      from litestar.connection import Request
│ │      from litestar.datastructures import CacheControlHeader, ETag
│ │      from litestar.datastructures.headers import Header
│ │      from litestar.di import Provide
│ │ +    from litestar.dto.interface import DTOInterface
│ │      from litestar.openapi.datastructures import ResponseSpec
│ │      from litestar.openapi.spec import SecurityRequirement
│ │      from litestar.plugins import SerializationPluginProtocol
│ │      from litestar.types import MaybePartial  # noqa: F401
│ │  
│ │  
│ │  __all__ = ("HTTPRouteHandler", "route")
│ │ @@ -122,25 +122,27 @@
│ │          after_response: AfterResponseHookHandler | None = None,
│ │          background: BackgroundTask | BackgroundTasks | None = None,
│ │          before_request: BeforeRequestHookHandler | None = None,
│ │          cache: bool | int | type[CACHE_FOREVER] = False,
│ │          cache_control: CacheControlHeader | None = None,
│ │          cache_key_builder: CacheKeyBuilder | None = None,
│ │          dependencies: Mapping[str, Provide] | None = None,
│ │ +        dto: type[DTOInterface] | None | EmptyType = Empty,
│ │          etag: ETag | None = None,
│ │          exception_handlers: ExceptionHandlersMap | None = None,
│ │          guards: Sequence[Guard] | None = None,
│ │          http_method: HttpMethod | Method | Sequence[HttpMethod | Method],
│ │          media_type: MediaType | str | None = None,
│ │          middleware: Sequence[Middleware] | None = None,
│ │          name: str | None = None,
│ │          opt: Mapping[str, Any] | None = None,
│ │          response_class: ResponseType | None = None,
│ │          response_cookies: ResponseCookies | None = None,
│ │          response_headers: ResponseHeaders | None = None,
│ │ +        return_dto: type[DTOInterface] | None | EmptyType = Empty,
│ │          status_code: int | None = None,
│ │          sync_to_thread: bool = False,
│ │          # OpenAPI related attributes
│ │          content_encoding: str | None = None,
│ │          content_media_type: str | None = None,
│ │          deprecated: bool = False,
│ │          description: str | None = None,
│ │ @@ -175,14 +177,16 @@
│ │              cache: Enables response caching if configured on the application level. Valid values are ``True`` or a
│ │                  number of seconds (e.g. ``120``) to cache the response.
│ │              cache_control: A ``cache-control`` header of type
│ │                  :class:`CacheControlHeader <.datastructures.CacheControlHeader>` that will be added to the response.
│ │              cache_key_builder: A :class:`cache-key builder function <.types.CacheKeyBuilder>`. Allows for customization
│ │                  of the cache key if caching is configured on the application level.
│ │              dependencies: A string keyed mapping of dependency :class:`Provider <.di.Provide>` instances.
│ │ +            dto: :class:`DTOInterface <.dto.interface.DTOInterface>` to use for (de)serializing and
│ │ +                validation of request data.
│ │              etag: An ``etag`` header of type :class:`ETag <.datastructures.ETag>` that will be added to the response.
│ │              exception_handlers: A mapping of status codes and/or exception types to handler functions.
│ │              guards: A sequence of :class:`Guard <.types.Guard>` callables.
│ │              http_method: An :class:`http method string <.types.Method>`, a member of the enum
│ │                  :class:`HttpMethod <.enums.HttpMethod>` or a list of these that correlates to the methods the route
│ │                  handler function should handle.
│ │              media_type: A member of the :class:`MediaType <.enums.MediaType>` enum or a string with a valid IANA
│ │ @@ -195,14 +199,16 @@
│ │              response_class: A custom subclass of :class:`Response <.response.Response>` to be used as route handler's
│ │                  default response.
│ │              response_cookies: A sequence of :class:`Cookie <.datastructures.Cookie>` instances.
│ │              response_headers: A string keyed mapping of :class:`ResponseHeader <.datastructures.ResponseHeader>`
│ │                  instances.
│ │              responses: A mapping of additional status codes and a description of their expected content.
│ │                  This information will be included in the OpenAPI schema
│ │ +            return_dto: :class:`DTOInterface <.dto.interface.DTOInterface>` to use for serializing
│ │ +                outbound response data.
│ │              signature_namespace: A mapping of names to types for use in forward reference resolution during signature modelling.
│ │              status_code: An http status code for the response. Defaults to ``200`` for mixed method or ``GET``, ``PUT`` and
│ │                  ``PATCH``, ``201`` for ``POST`` and ``204`` for ``DELETE``.
│ │              sync_to_thread: A boolean dictating whether the handler function will be executed in a worker thread or the
│ │                  main event loop. This has an effect only for sync handler functions. See using sync handler functions.
│ │              content_encoding: A string describing the encoding of the content, e.g. ``"base64"``.
│ │              content_media_type: A string designating the media-type of the content, e.g. ``"image/png"``.
│ │ @@ -223,21 +229,23 @@
│ │          if not http_method:
│ │              raise ImproperlyConfiguredException("An http_method kwarg is required")
│ │  
│ │          self.http_methods = normalize_http_method(http_methods=http_method)
│ │          self.status_code = status_code or get_default_status_code(http_methods=self.http_methods)
│ │  
│ │          super().__init__(
│ │ -            path,
│ │ +            path=path,
│ │              dependencies=dependencies,
│ │ +            dto=dto,
│ │              exception_handlers=exception_handlers,
│ │              guards=guards,
│ │              middleware=middleware,
│ │              name=name,
│ │              opt=opt,
│ │ +            return_dto=return_dto,
│ │              signature_namespace=signature_namespace,
│ │              type_encoders=type_encoders,
│ │              **kwargs,
│ │          )
│ │  
│ │          self.after_request = AsyncCallable(after_request) if after_request else None  # type: ignore[arg-type]
│ │          self.after_response = AsyncCallable(after_response) if after_response else None
│ │ @@ -245,15 +253,14 @@
│ │          self.before_request = AsyncCallable(before_request) if before_request else None
│ │          self.cache = cache
│ │          self.cache_control = cache_control
│ │          self.cache_key_builder = cache_key_builder
│ │          self.etag = etag
│ │          self.media_type: MediaType | str = media_type or ""
│ │          self.response_class = response_class
│ │ -
│ │          self.response_cookies: Sequence[Cookie] | None = narrow_response_cookies(response_cookies)
│ │          self.response_headers: Sequence[ResponseHeader] | None = narrow_response_headers(response_headers)
│ │  
│ │          self.sync_to_thread = sync_to_thread
│ │          # OpenAPI related attributes
│ │          self.content_encoding = content_encoding
│ │          self.content_media_type = content_media_type
│ │ @@ -264,29 +271,21 @@
│ │          self.raises = raises
│ │          self.response_description = response_description
│ │          self.summary = summary
│ │          self.tags = tags
│ │          self.security = security
│ │          self.responses = responses
│ │          # memoized attributes, defaulted to Empty
│ │ -        self._resolved_after_response: AfterResponseHookHandler | None | EmptyType = Empty
│ │ -        self._resolved_before_request: BeforeRequestHookHandler | None | EmptyType = Empty
│ │ +        self._resolved_after_response: AsyncCallable | None | EmptyType = Empty
│ │ +        self._resolved_before_request: AsyncCallable | None | EmptyType = Empty
│ │          self._response_handler_mapping: ResponseHandlerMap = {"default_handler": Empty, "response_type_handler": Empty}
│ │  
│ │      def __call__(self, fn: AnyCallable) -> HTTPRouteHandler:
│ │          """Replace a function with itself."""
│ │          super().__call__(fn)
│ │ -        if not self.media_type:
│ │ -            if self.signature.return_annotation in {str, bytes, AnyStr, Redirect, File} or any(
│ │ -                is_class_and_subclass(self.signature.return_annotation, t_type) for t_type in (str, bytes)  # type: ignore
│ │ -            ):
│ │ -                self.media_type = MediaType.TEXT
│ │ -            else:
│ │ -                self.media_type = MediaType.JSON
│ │ -
│ │          return self
│ │  
│ │      def resolve_response_class(self) -> type[Response]:
│ │          """Return the closest custom Response class in the owner graph or the default Response class.
│ │  
│ │          This method is memoized so the computation occurs only once.
│ │  
│ │ @@ -342,52 +341,46 @@
│ │                      response_cookies.update(
│ │                          {Cookie(key=key, value=value) for key, value in layer_response_cookies.items()}
│ │                      )
│ │                  else:
│ │                      response_cookies.update(cast("set[Cookie]", layer_response_cookies))
│ │          return frozenset(response_cookies)
│ │  
│ │ -    def resolve_before_request(self) -> BeforeRequestHookHandler | None:
│ │ +    def resolve_before_request(self) -> AsyncCallable | None:
│ │          """Resolve the before_handler handler by starting from the route handler and moving up.
│ │  
│ │          If a handler is found it is returned, otherwise None is set.
│ │          This method is memoized so the computation occurs only once.
│ │  
│ │          Returns:
│ │              An optional :class:`before request lifecycle hook handler <.types.BeforeRequestHookHandler>`
│ │          """
│ │          if self._resolved_before_request is Empty:
│ │              before_request_handlers: list[AsyncCallable] = [
│ │                  layer.before_request for layer in self.ownership_layers if layer.before_request  # type: ignore[misc]
│ │              ]
│ │ -            self._resolved_before_request = cast(
│ │ -                "BeforeRequestHookHandler | None",
│ │ -                before_request_handlers[-1] if before_request_handlers else None,
│ │ -            )
│ │ -        return self._resolved_before_request
│ │ +            self._resolved_before_request = before_request_handlers[-1] if before_request_handlers else None
│ │ +        return cast("AsyncCallable | None", self._resolved_before_request)
│ │  
│ │ -    def resolve_after_response(self) -> AfterResponseHookHandler | None:
│ │ +    def resolve_after_response(self) -> AsyncCallable | None:
│ │          """Resolve the after_response handler by starting from the route handler and moving up.
│ │  
│ │          If a handler is found it is returned, otherwise None is set.
│ │          This method is memoized so the computation occurs only once.
│ │  
│ │          Returns:
│ │              An optional :class:`after response lifecycle hook handler <.types.AfterResponseHookHandler>`
│ │          """
│ │          if self._resolved_after_response is Empty:
│ │              after_response_handlers: list[AsyncCallable] = [
│ │                  layer.after_response for layer in self.ownership_layers if layer.after_response  # type: ignore[misc]
│ │              ]
│ │ -            self._resolved_after_response = cast(
│ │ -                "AfterResponseHookHandler | None",
│ │ -                after_response_handlers[-1] if after_response_handlers else None,
│ │ -            )
│ │ +            self._resolved_after_response = after_response_handlers[-1] if after_response_handlers else None
│ │  
│ │ -        return cast("AfterResponseHookHandler | None", self._resolved_after_response)
│ │ +        return cast("AsyncCallable | None", self._resolved_after_response)
│ │  
│ │      def get_response_handler(self, is_response_type_data: bool = False) -> Callable[[Any], Awaitable[ASGIApp]]:
│ │          """Resolve the response_handler function for the route handler.
│ │  
│ │          This method is memoized so the computation occurs only once.
│ │  
│ │          Args:
│ │ @@ -407,33 +400,30 @@
│ │  
│ │              media_type = self.media_type.value if isinstance(self.media_type, Enum) else self.media_type
│ │              response_class = self.resolve_response_class()
│ │              headers = self.resolve_response_headers()
│ │              cookies = self.resolve_response_cookies()
│ │              type_encoders = self.resolve_type_encoders()
│ │  
│ │ -            return_annotation = get_signature_model(self).return_annotation
│ │ +            return_type = self.parsed_fn_signature.return_type
│ │ +            return_annotation = return_type.annotation
│ │  
│ │              if before_request_handler := self.resolve_before_request():
│ │ -                before_request_handler_signature = Signature.from_callable(before_request_handler)
│ │ -                if (
│ │ -                    before_request_handler_signature.return_annotation
│ │ -                    and before_request_handler_signature.return_annotation is not Signature.empty
│ │ -                ):
│ │ -                    return_annotation = before_request_handler_signature.return_annotation
│ │ -
│ │ +                handler_return_type = before_request_handler.parsed_signature.return_type
│ │ +                if not handler_return_type.is_subclass_of((Empty, NoneType)):
│ │ +                    return_annotation = handler_return_type.annotation
│ │              self._response_handler_mapping["response_type_handler"] = create_response_handler(
│ │                  cookies=cookies, after_request=after_request
│ │              )
│ │  
│ │ -            if is_class_and_subclass(return_annotation, Response):
│ │ +            if return_type.is_subclass_of(Response):
│ │                  self._response_handler_mapping["default_handler"] = self._response_handler_mapping[
│ │                      "response_type_handler"
│ │                  ]
│ │ -            elif is_class_and_subclass(return_annotation, ResponseContainer):  # type: ignore
│ │ +            elif return_type.is_subclass_of(ResponseContainer):
│ │                  self._response_handler_mapping["default_handler"] = create_response_container_handler(
│ │                      after_request=after_request,
│ │                      cookies=cookies,
│ │                      headers=headers,
│ │                      media_type=media_type,
│ │                      status_code=self.status_code,
│ │                  )
│ │ @@ -445,72 +435,78 @@
│ │                  self._response_handler_mapping["default_handler"] = create_data_handler(
│ │                      after_request=after_request,
│ │                      background=self.background,
│ │                      cookies=cookies,
│ │                      headers=headers,
│ │                      media_type=media_type,
│ │                      response_class=response_class,
│ │ -                    return_annotation=return_annotation,
│ │                      status_code=self.status_code,
│ │                      type_encoders=type_encoders,
│ │                  )
│ │  
│ │          return cast(
│ │              "Callable[[Any], Awaitable[ASGIApp]]",
│ │              self._response_handler_mapping["response_type_handler"]
│ │              if is_response_type_data
│ │              else self._response_handler_mapping["default_handler"],
│ │          )
│ │  
│ │      async def to_response(
│ │ -        self, app: "Litestar", data: Any, plugins: list["SerializationPluginProtocol"], request: "Request"
│ │ -    ) -> "ASGIApp":
│ │ +        self, app: Litestar, data: Any, plugins: list["SerializationPluginProtocol"], request: Request
│ │ +    ) -> ASGIApp:
│ │          """Return a :class:`Response <.response.Response>` from the handler by resolving and calling it.
│ │  
│ │          Args:
│ │ -            app: The :class:`Litestar <.app.Litestar>` app instance
│ │ +            app: The :class:`Litestar <litestar.app.Litestar>` app instance
│ │              data: Either an instance of a :class:`ResponseContainer <.response_containers.ResponseContainer>`,
│ │                  a Response instance or an arbitrary value.
│ │              plugins: An optional mapping of plugins
│ │              request: A :class:`Request <.connection.Request>` instance
│ │  
│ │          Returns:
│ │              A Response instance
│ │          """
│ │          response_handler = self.get_response_handler(is_response_type_data=isinstance(data, Response))
│ │ -        return await response_handler(app=app, data=data, plugins=plugins, request=request)  # type: ignore
│ │ +        return await response_handler(app=app, data=data, plugins=plugins, request=request, return_dto=self.resolve_return_dto())  # type: ignore
│ │ +
│ │ +    def on_registration(self) -> None:
│ │ +        super().on_registration()
│ │ +        if before_request := self.resolve_before_request():
│ │ +            before_request.set_parsed_signature(self.resolve_signature_namespace())
│ │ +        self.resolve_after_response()
│ │  
│ │      def _validate_handler_function(self) -> None:
│ │          """Validate the route handler function once it is set by inspecting its return annotations."""
│ │          super()._validate_handler_function()
│ │  
│ │ -        if self.signature.return_annotation is Signature.empty:
│ │ +        return_type = self.parsed_fn_signature.return_type
│ │ +
│ │ +        if return_type.annotation is Empty:
│ │              raise ImproperlyConfiguredException(
│ │                  "A return value of a route handler function should be type annotated."
│ │                  "If your function doesn't return a value, annotate it as returning 'None'."
│ │              )
│ │  
│ │          if (
│ │              self.status_code < 200 or self.status_code in {HTTP_204_NO_CONTENT, HTTP_304_NOT_MODIFIED}
│ │ -        ) and self.signature.return_annotation not in {None, "None"}:
│ │ +        ) and not return_type.is_subclass_of(NoneType):
│ │              raise ImproperlyConfiguredException(
│ │                  "A status code 204, 304 or in the range below 200 does not support a response body."
│ │                  "If the function should return a value, change the route handler status code to an appropriate value.",
│ │              )
│ │  
│ │ -        if (
│ │ -            is_class_and_subclass(self.signature.return_annotation, File)
│ │ -            or is_class_and_subclass(self.signature.return_annotation, FileResponse)
│ │ -        ) and self.media_type in (
│ │ -            MediaType.JSON,
│ │ -            MediaType.HTML,
│ │ -        ):
│ │ -            self.media_type = MediaType.TEXT
│ │ +        if not self.media_type:
│ │ +            if return_type.annotation is AnyStr or return_type.is_subclass_of(
│ │ +                (str, bytes, Redirect, File, FileResponse)
│ │ +            ):
│ │ +                self.media_type = MediaType.TEXT
│ │ +            else:
│ │ +                self.media_type = MediaType.JSON
│ │  
│ │ -        if "socket" in self.signature.parameters:
│ │ +        if "socket" in self.parsed_fn_signature.parameters:
│ │              raise ImproperlyConfiguredException("The 'socket' kwarg is not supported with http handlers")
│ │  
│ │ -        if "data" in self.signature.parameters and "GET" in self.http_methods:
│ │ +        if "data" in self.parsed_fn_signature.parameters and "GET" in self.http_methods:
│ │              raise ImproperlyConfiguredException("'data' kwarg is unsupported for 'GET' request handlers")
│ │  
│ │  
│ │  route = HTTPRouteHandler
│ │   --- litestar-1.0.0a0/litestar/handlers/http_handlers/decorators.py
│ ├── +++ litestar-2.0.0a3/litestar/handlers/http_handlers/decorators.py
│ │┄ Files 4% similar despite different names
│ │ @@ -2,32 +2,36 @@
│ │  
│ │  from typing import TYPE_CHECKING
│ │  
│ │  from litestar.enums import HttpMethod, MediaType
│ │  from litestar.exceptions import HTTPException, ImproperlyConfiguredException
│ │  from litestar.response import FileResponse
│ │  from litestar.response_containers import File
│ │ +from litestar.types.builtin_types import NoneType
│ │ +from litestar.types.empty import Empty
│ │  from litestar.utils import is_class_and_subclass
│ │  
│ │  from .base import HTTPRouteHandler
│ │  
│ │  if TYPE_CHECKING:
│ │      from typing import Any, Mapping
│ │  
│ │      from litestar.background_tasks import BackgroundTask, BackgroundTasks
│ │      from litestar.config.response_cache import CACHE_FOREVER
│ │      from litestar.datastructures import CacheControlHeader, ETag
│ │      from litestar.di import Provide
│ │ +    from litestar.dto.interface import DTOInterface
│ │      from litestar.openapi.datastructures import ResponseSpec
│ │      from litestar.openapi.spec import SecurityRequirement
│ │      from litestar.types import (
│ │          AfterRequestHookHandler,
│ │          AfterResponseHookHandler,
│ │          BeforeRequestHookHandler,
│ │          CacheKeyBuilder,
│ │ +        EmptyType,
│ │          ExceptionHandlersMap,
│ │          Guard,
│ │          Middleware,
│ │          ResponseCookies,
│ │          ResponseHeaders,
│ │          ResponseType,
│ │          TypeEncodersMap,
│ │ @@ -53,24 +57,26 @@
│ │          after_response: AfterResponseHookHandler | None = None,
│ │          background: BackgroundTask | BackgroundTasks | None = None,
│ │          before_request: BeforeRequestHookHandler | None = None,
│ │          cache: bool | int | type[CACHE_FOREVER] = False,
│ │          cache_control: CacheControlHeader | None = None,
│ │          cache_key_builder: CacheKeyBuilder | None = None,
│ │          dependencies: dict[str, Provide] | None = None,
│ │ +        dto: type[DTOInterface] | None | EmptyType = Empty,
│ │          etag: ETag | None = None,
│ │          exception_handlers: ExceptionHandlersMap | None = None,
│ │          guards: list[Guard] | None = None,
│ │          media_type: MediaType | str | None = None,
│ │          middleware: list[Middleware] | None = None,
│ │          name: str | None = None,
│ │          opt: dict[str, Any] | None = None,
│ │          response_class: ResponseType | None = None,
│ │          response_cookies: ResponseCookies | None = None,
│ │          response_headers: ResponseHeaders | None = None,
│ │ +        return_dto: type[DTOInterface] | None | EmptyType = Empty,
│ │          signature_namespace: Mapping[str, Any] | None = None,
│ │          status_code: int | None = None,
│ │          sync_to_thread: bool = False,
│ │          # OpenAPI related attributes
│ │          content_encoding: str | None = None,
│ │          content_media_type: str | None = None,
│ │          deprecated: bool = False,
│ │ @@ -104,14 +110,16 @@
│ │                  bypassing the route handler.
│ │              cache: Enables response caching if configured on the application level. Valid values are ``True`` or a number
│ │                  of seconds (e.g. ``120``) to cache the response.
│ │              cache_control: A ``cache-control`` header of type
│ │                  :class:`CacheControlHeader <.datastructures.CacheControlHeader>` that will be added to the response.
│ │              cache_key_builder: A :class:`cache-key builder function <.types.CacheKeyBuilder>`. Allows for customization
│ │                  of the cache key if caching is configured on the application level.
│ │ +            dto: :class:`DTOInterface <.dto.interface.DTOInterface>` to use for (de)serializing and
│ │ +                validation of request data.
│ │              dependencies: A string keyed mapping of dependency :class:`Provider <.di.Provide>` instances.
│ │              etag: An ``etag`` header of type :class:`ETag <.datastructures.ETag>` that will be added to the response.
│ │              exception_handlers: A mapping of status codes and/or exception types to handler functions.
│ │              guards: A sequence of :class:`Guard <.types.Guard>` callables.
│ │              http_method: An :class:`http method string <.types.Method>`, a member of the enum
│ │                  :class:`HttpMethod <litestar.enums.HttpMethod>` or a list of these that correlates to the methods the
│ │                  route handler function should handle.
│ │ @@ -124,14 +132,16 @@
│ │              response_class: A custom subclass of :class:`Response <.response.Response>` to be used as route handler's
│ │                  default response.
│ │              response_cookies: A sequence of :class:`Cookie <.datastructures.Cookie>` instances.
│ │              response_headers: A string keyed mapping of :class:`ResponseHeader <.datastructures.ResponseHeader>`
│ │                  instances.
│ │              responses: A mapping of additional status codes and a description of their expected content.
│ │                  This information will be included in the OpenAPI schema
│ │ +            return_dto: :class:`DTOInterface <.dto.interface.DTOInterface>` to use for serializing
│ │ +                outbound response data.
│ │              signature_namespace: A mapping of names to types for use in forward reference resolution during signature modelling.
│ │              status_code: An http status code for the response. Defaults to ``200`` for mixed method or ``GET``, ``PUT``
│ │                  and ``PATCH``, ``201`` for ``POST`` and ``204`` for ``DELETE``.
│ │              sync_to_thread: A boolean dictating whether the handler function will be executed in a worker thread or the
│ │                  main event loop. This has an effect only for sync handler functions. See using sync handler functions.
│ │              content_encoding: A string describing the encoding of the content, e.g. ``base64``.
│ │              content_media_type: A string designating the media-type of the content, e.g. ``image/png``.
│ │ @@ -160,14 +170,15 @@
│ │              cache_control=cache_control,
│ │              cache_key_builder=cache_key_builder,
│ │              content_encoding=content_encoding,
│ │              content_media_type=content_media_type,
│ │              dependencies=dependencies,
│ │              deprecated=deprecated,
│ │              description=description,
│ │ +            dto=dto,
│ │              etag=etag,
│ │              exception_handlers=exception_handlers,
│ │              guards=guards,
│ │              http_method=HttpMethod.DELETE,
│ │              include_in_schema=include_in_schema,
│ │              media_type=media_type,
│ │              middleware=middleware,
│ │ @@ -177,14 +188,15 @@
│ │              path=path,
│ │              raises=raises,
│ │              response_class=response_class,
│ │              response_cookies=response_cookies,
│ │              response_description=response_description,
│ │              response_headers=response_headers,
│ │              responses=responses,
│ │ +            return_dto=return_dto,
│ │              security=security,
│ │              signature_namespace=signature_namespace,
│ │              status_code=status_code,
│ │              summary=summary,
│ │              sync_to_thread=sync_to_thread,
│ │              tags=tags,
│ │              type_encoders=type_encoders,
│ │ @@ -206,24 +218,26 @@
│ │          after_response: AfterResponseHookHandler | None = None,
│ │          background: BackgroundTask | BackgroundTasks | None = None,
│ │          before_request: BeforeRequestHookHandler | None = None,
│ │          cache: bool | int | type[CACHE_FOREVER] = False,
│ │          cache_control: CacheControlHeader | None = None,
│ │          cache_key_builder: CacheKeyBuilder | None = None,
│ │          dependencies: dict[str, Provide] | None = None,
│ │ +        dto: type[DTOInterface] | None | EmptyType = Empty,
│ │          etag: ETag | None = None,
│ │          exception_handlers: ExceptionHandlersMap | None = None,
│ │          guards: list[Guard] | None = None,
│ │          media_type: MediaType | str | None = None,
│ │          middleware: list[Middleware] | None = None,
│ │          name: str | None = None,
│ │          opt: dict[str, Any] | None = None,
│ │          response_class: ResponseType | None = None,
│ │          response_cookies: ResponseCookies | None = None,
│ │          response_headers: ResponseHeaders | None = None,
│ │ +        return_dto: type[DTOInterface] | None | EmptyType = Empty,
│ │          signature_namespace: Mapping[str, Any] | None = None,
│ │          status_code: int | None = None,
│ │          sync_to_thread: bool = False,
│ │          # OpenAPI related attributes
│ │          content_encoding: str | None = None,
│ │          content_media_type: str | None = None,
│ │          deprecated: bool = False,
│ │ @@ -258,14 +272,16 @@
│ │              cache: Enables response caching if configured on the application level. Valid values are ``True`` or a number
│ │                  of seconds (e.g. ``120``) to cache the response.
│ │              cache_control: A ``cache-control`` header of type
│ │                  :class:`CacheControlHeader <.datastructures.CacheControlHeader>` that will be added to the response.
│ │              cache_key_builder: A :class:`cache-key builder function <.types.CacheKeyBuilder>`. Allows for customization
│ │                  of the cache key if caching is configured on the application level.
│ │              dependencies: A string keyed mapping of dependency :class:`Provider <.di.Provide>` instances.
│ │ +            dto: :class:`DTOInterface <.dto.interface.DTOInterface>` to use for (de)serializing and
│ │ +                validation of request data.
│ │              etag: An ``etag`` header of type :class:`ETag <.datastructures.ETag>` that will be added to the response.
│ │              exception_handlers: A mapping of status codes and/or exception types to handler functions.
│ │              guards: A sequence of :class:`Guard <.types.Guard>` callables.
│ │              http_method: An :class:`http method string <.types.Method>`, a member of the enum
│ │                  :class:`HttpMethod <litestar.enums.HttpMethod>` or a list of these that correlates to the methods the
│ │                  route handler function should handle.
│ │              media_type: A member of the :class:`MediaType <.enums.MediaType>` enum or a string with a
│ │ @@ -277,14 +293,16 @@
│ │              response_class: A custom subclass of :class:`Response <.response.Response>` to be used as route handler's
│ │                  default response.
│ │              response_cookies: A sequence of :class:`Cookie <.datastructures.Cookie>` instances.
│ │              response_headers: A string keyed mapping of :class:`ResponseHeader <.datastructures.ResponseHeader>`
│ │                  instances.
│ │              responses: A mapping of additional status codes and a description of their expected content.
│ │                  This information will be included in the OpenAPI schema
│ │ +            return_dto: :class:`DTOInterface <.dto.interface.DTOInterface>` to use for serializing
│ │ +                outbound response data.
│ │              signature_namespace: A mapping of names to types for use in forward reference resolution during signature modelling.
│ │              status_code: An http status code for the response. Defaults to ``200`` for mixed method or ``GET``, ``PUT`` and
│ │                  ``PATCH``, ``201`` for ``POST`` and ``204`` for ``DELETE``.
│ │              sync_to_thread: A boolean dictating whether the handler function will be executed in a worker thread or the
│ │                  main event loop. This has an effect only for sync handler functions. See using sync handler functions.
│ │              content_encoding: A string describing the encoding of the content, e.g. ``base64``.
│ │              content_media_type: A string designating the media-type of the content, e.g. ``image/png``.
│ │ @@ -314,14 +332,15 @@
│ │              cache_control=cache_control,
│ │              cache_key_builder=cache_key_builder,
│ │              content_encoding=content_encoding,
│ │              content_media_type=content_media_type,
│ │              dependencies=dependencies,
│ │              deprecated=deprecated,
│ │              description=description,
│ │ +            dto=dto,
│ │              etag=etag,
│ │              exception_handlers=exception_handlers,
│ │              guards=guards,
│ │              http_method=HttpMethod.GET,
│ │              include_in_schema=include_in_schema,
│ │              media_type=media_type,
│ │              middleware=middleware,
│ │ @@ -331,14 +350,15 @@
│ │              path=path,
│ │              raises=raises,
│ │              response_class=response_class,
│ │              response_cookies=response_cookies,
│ │              response_description=response_description,
│ │              response_headers=response_headers,
│ │              responses=responses,
│ │ +            return_dto=return_dto,
│ │              security=security,
│ │              signature_namespace=signature_namespace,
│ │              status_code=status_code,
│ │              summary=summary,
│ │              sync_to_thread=sync_to_thread,
│ │              tags=tags,
│ │              type_encoders=type_encoders,
│ │ @@ -360,14 +380,15 @@
│ │          after_response: AfterResponseHookHandler | None = None,
│ │          background: BackgroundTask | BackgroundTasks | None = None,
│ │          before_request: BeforeRequestHookHandler | None = None,
│ │          cache: bool | int | type[CACHE_FOREVER] = False,
│ │          cache_control: CacheControlHeader | None = None,
│ │          cache_key_builder: CacheKeyBuilder | None = None,
│ │          dependencies: dict[str, Provide] | None = None,
│ │ +        dto: type[DTOInterface] | None | EmptyType = Empty,
│ │          etag: ETag | None = None,
│ │          exception_handlers: ExceptionHandlersMap | None = None,
│ │          guards: list[Guard] | None = None,
│ │          media_type: MediaType | str | None = None,
│ │          middleware: list[Middleware] | None = None,
│ │          name: str | None = None,
│ │          opt: dict[str, Any] | None = None,
│ │ @@ -383,14 +404,15 @@
│ │          deprecated: bool = False,
│ │          description: str | None = None,
│ │          include_in_schema: bool = True,
│ │          operation_id: str | None = None,
│ │          raises: list[type[HTTPException]] | None = None,
│ │          response_description: str | None = None,
│ │          responses: dict[int, ResponseSpec] | None = None,
│ │ +        return_dto: type[DTOInterface] | None | EmptyType = Empty,
│ │          security: list[SecurityRequirement] | None = None,
│ │          summary: str | None = None,
│ │          tags: list[str] | None = None,
│ │          type_encoders: TypeEncodersMap | None = None,
│ │          **kwargs: Any,
│ │      ) -> None:
│ │          """Initialize ``head``.
│ │ @@ -416,14 +438,16 @@
│ │              cache: Enables response caching if configured on the application level. Valid values are ``True`` or a number
│ │                  of seconds (e.g. ``120``) to cache the response.
│ │              cache_control: A ``cache-control`` header of type
│ │                  :class:`CacheControlHeader <.datastructures.CacheControlHeader>` that will be added to the response.
│ │              cache_key_builder: A :class:`cache-key builder function <.types.CacheKeyBuilder>`. Allows for customization
│ │                  of the cache key if caching is configured on the application level.
│ │              dependencies: A string keyed mapping of dependency :class:`Provider <.di.Provide>` instances.
│ │ +            dto: :class:`DTOInterface <.dto.interface.DTOInterface>` to use for (de)serializing and
│ │ +                validation of request data.
│ │              etag: An ``etag`` header of type :class:`ETag <.datastructures.ETag>` that will be added to the response.
│ │              exception_handlers: A mapping of status codes and/or exception types to handler functions.
│ │              guards: A sequence of :class:`Guard <.types.Guard>` callables.
│ │              http_method: An :class:`http method string <.types.Method>`, a member of the enum
│ │                  :class:`HttpMethod <litestar.enums.HttpMethod>` or a list of these that correlates to the methods the
│ │                  route handler function should handle.
│ │              media_type: A member of the :class:`MediaType <.enums.MediaType>` enum or a string with a
│ │ @@ -435,14 +459,16 @@
│ │              response_class: A custom subclass of :class:`Response <.response.Response>` to be used as route handler's
│ │                  default response.
│ │              response_cookies: A sequence of :class:`Cookie <.datastructures.Cookie>` instances.
│ │              response_headers: A string keyed mapping of :class:`ResponseHeader <.datastructures.ResponseHeader>`
│ │                  instances.
│ │              responses: A mapping of additional status codes and a description of their expected content.
│ │                  This information will be included in the OpenAPI schema
│ │ +            return_dto: :class:`DTOInterface <.dto.interface.DTOInterface>` to use for serializing
│ │ +                outbound response data.
│ │              signature_namespace: A mapping of names to types for use in forward reference resolution during signature modelling.
│ │              status_code: An http status code for the response. Defaults to ``200`` for mixed method or ``GET``, ``PUT`` and
│ │                  ``PATCH``, ``201`` for ``POST`` and ``204`` for ``DELETE``.
│ │              sync_to_thread: A boolean dictating whether the handler function will be executed in a worker thread or the
│ │                  main event loop. This has an effect only for sync handler functions. See using sync handler functions.
│ │              content_encoding: A string describing the encoding of the content, e.g. ``base64``.
│ │              content_media_type: A string designating the media-type of the content, e.g. ``image/png``.
│ │ @@ -472,14 +498,15 @@
│ │              cache_control=cache_control,
│ │              cache_key_builder=cache_key_builder,
│ │              content_encoding=content_encoding,
│ │              content_media_type=content_media_type,
│ │              dependencies=dependencies,
│ │              deprecated=deprecated,
│ │              description=description,
│ │ +            dto=dto,
│ │              etag=etag,
│ │              exception_handlers=exception_handlers,
│ │              guards=guards,
│ │              http_method=HttpMethod.HEAD,
│ │              include_in_schema=include_in_schema,
│ │              media_type=media_type,
│ │              middleware=middleware,
│ │ @@ -489,14 +516,15 @@
│ │              path=path,
│ │              raises=raises,
│ │              response_class=response_class,
│ │              response_cookies=response_cookies,
│ │              response_description=response_description,
│ │              response_headers=response_headers,
│ │              responses=responses,
│ │ +            return_dto=return_dto,
│ │              security=security,
│ │              signature_namespace=signature_namespace,
│ │              status_code=status_code,
│ │              summary=summary,
│ │              sync_to_thread=sync_to_thread,
│ │              tags=tags,
│ │              type_encoders=type_encoders,
│ │ @@ -504,22 +532,21 @@
│ │          )
│ │  
│ │      def _validate_handler_function(self) -> None:
│ │          """Validate the route handler function once it is set by inspecting its return annotations."""
│ │          super()._validate_handler_function()
│ │  
│ │          # we allow here File and FileResponse because these have special setting for head responses
│ │ +        return_annotation = self.parsed_fn_signature.return_type.annotation
│ │          if not (
│ │ -            self.signature.return_annotation in {None, "None", "FileResponse", "File"}
│ │ -            or is_class_and_subclass(self.signature.return_annotation, File)
│ │ -            or is_class_and_subclass(self.signature.return_annotation, FileResponse)
│ │ +            return_annotation in {NoneType, None}
│ │ +            or is_class_and_subclass(return_annotation, File)
│ │ +            or is_class_and_subclass(return_annotation, FileResponse)
│ │          ):
│ │ -            raise ImproperlyConfiguredException(
│ │ -                "A response to a head request should not have a body",
│ │ -            )
│ │ +            raise ImproperlyConfiguredException("A response to a head request should not have a body")
│ │  
│ │  
│ │  class patch(HTTPRouteHandler):
│ │      """PATCH Route Decorator.
│ │  
│ │      Use this decorator to decorate an HTTP handler for PATCH requests.
│ │      """
│ │ @@ -532,24 +559,26 @@
│ │          after_response: AfterResponseHookHandler | None = None,
│ │          background: BackgroundTask | BackgroundTasks | None = None,
│ │          before_request: BeforeRequestHookHandler | None = None,
│ │          cache: bool | int | type[CACHE_FOREVER] = False,
│ │          cache_control: CacheControlHeader | None = None,
│ │          cache_key_builder: CacheKeyBuilder | None = None,
│ │          dependencies: dict[str, Provide] | None = None,
│ │ +        dto: type[DTOInterface] | None | EmptyType = Empty,
│ │          etag: ETag | None = None,
│ │          exception_handlers: ExceptionHandlersMap | None = None,
│ │          guards: list[Guard] | None = None,
│ │          media_type: MediaType | str | None = None,
│ │          middleware: list[Middleware] | None = None,
│ │          name: str | None = None,
│ │          opt: dict[str, Any] | None = None,
│ │          response_class: ResponseType | None = None,
│ │          response_cookies: ResponseCookies | None = None,
│ │          response_headers: ResponseHeaders | None = None,
│ │ +        return_dto: type[DTOInterface] | None | EmptyType = Empty,
│ │          signature_namespace: Mapping[str, Any] | None = None,
│ │          status_code: int | None = None,
│ │          sync_to_thread: bool = False,
│ │          # OpenAPI related attributes
│ │          content_encoding: str | None = None,
│ │          content_media_type: str | None = None,
│ │          deprecated: bool = False,
│ │ @@ -584,14 +613,16 @@
│ │              cache: Enables response caching if configured on the application level. Valid values are ``True`` or a number
│ │                  of seconds (e.g. ``120``) to cache the response.
│ │              cache_control: A ``cache-control`` header of type
│ │                  :class:`CacheControlHeader <.datastructures.CacheControlHeader>` that will be added to the response.
│ │              cache_key_builder: A :class:`cache-key builder function <.types.CacheKeyBuilder>`. Allows for customization
│ │                  of the cache key if caching is configured on the application level.
│ │              dependencies: A string keyed mapping of dependency :class:`Provider <.di.Provide>` instances.
│ │ +            dto: :class:`DTOInterface <.dto.interface.DTOInterface>` to use for (de)serializing and
│ │ +                validation of request data.
│ │              etag: An ``etag`` header of type :class:`ETag <.datastructures.ETag>` that will be added to the response.
│ │              exception_handlers: A mapping of status codes and/or exception types to handler functions.
│ │              guards: A sequence of :class:`Guard <.types.Guard>` callables.
│ │              http_method: An :class:`http method string <.types.Method>`, a member of the enum
│ │                  :class:`HttpMethod <litestar.enums.HttpMethod>` or a list of these that correlates to the methods the
│ │                  route handler function should handle.
│ │              media_type: A member of the :class:`MediaType <.enums.MediaType>` enum or a string with a
│ │ @@ -603,14 +634,16 @@
│ │              response_class: A custom subclass of :class:`Response <.response.Response>` to be used as route handler's
│ │                  default response.
│ │              response_cookies: A sequence of :class:`Cookie <.datastructures.Cookie>` instances.
│ │              response_headers: A string keyed mapping of :class:`ResponseHeader <.datastructures.ResponseHeader>`
│ │                  instances.
│ │              responses: A mapping of additional status codes and a description of their expected content.
│ │                  This information will be included in the OpenAPI schema
│ │ +            return_dto: :class:`DTOInterface <.dto.interface.DTOInterface>` to use for serializing
│ │ +                outbound response data.
│ │              signature_namespace: A mapping of names to types for use in forward reference resolution during signature modelling.
│ │              status_code: An http status code for the response. Defaults to ``200`` for mixed method or ``GET``, ``PUT`` and
│ │                  ``PATCH``, ``201`` for ``POST`` and ``204`` for ``DELETE``.
│ │              sync_to_thread: A boolean dictating whether the handler function will be executed in a worker thread or the
│ │                  main event loop. This has an effect only for sync handler functions. See using sync handler functions.
│ │              content_encoding: A string describing the encoding of the content, e.g. ``base64``.
│ │              content_media_type: A string designating the media-type of the content, e.g. ``image/png``.
│ │ @@ -639,14 +672,15 @@
│ │              cache_control=cache_control,
│ │              cache_key_builder=cache_key_builder,
│ │              content_encoding=content_encoding,
│ │              content_media_type=content_media_type,
│ │              dependencies=dependencies,
│ │              deprecated=deprecated,
│ │              description=description,
│ │ +            dto=dto,
│ │              etag=etag,
│ │              exception_handlers=exception_handlers,
│ │              guards=guards,
│ │              http_method=HttpMethod.PATCH,
│ │              include_in_schema=include_in_schema,
│ │              media_type=media_type,
│ │              middleware=middleware,
│ │ @@ -656,14 +690,15 @@
│ │              path=path,
│ │              raises=raises,
│ │              response_class=response_class,
│ │              response_cookies=response_cookies,
│ │              response_description=response_description,
│ │              response_headers=response_headers,
│ │              responses=responses,
│ │ +            return_dto=return_dto,
│ │              security=security,
│ │              signature_namespace=signature_namespace,
│ │              status_code=status_code,
│ │              summary=summary,
│ │              sync_to_thread=sync_to_thread,
│ │              tags=tags,
│ │              type_encoders=type_encoders,
│ │ @@ -685,24 +720,26 @@
│ │          after_response: AfterResponseHookHandler | None = None,
│ │          background: BackgroundTask | BackgroundTasks | None = None,
│ │          before_request: BeforeRequestHookHandler | None = None,
│ │          cache: bool | int | type[CACHE_FOREVER] = False,
│ │          cache_control: CacheControlHeader | None = None,
│ │          cache_key_builder: CacheKeyBuilder | None = None,
│ │          dependencies: dict[str, Provide] | None = None,
│ │ +        dto: type[DTOInterface] | None | EmptyType = Empty,
│ │          etag: ETag | None = None,
│ │          exception_handlers: ExceptionHandlersMap | None = None,
│ │          guards: list[Guard] | None = None,
│ │          media_type: MediaType | str | None = None,
│ │          middleware: list[Middleware] | None = None,
│ │          name: str | None = None,
│ │          opt: dict[str, Any] | None = None,
│ │          response_class: ResponseType | None = None,
│ │          response_cookies: ResponseCookies | None = None,
│ │          response_headers: ResponseHeaders | None = None,
│ │ +        return_dto: type[DTOInterface] | None | EmptyType = Empty,
│ │          signature_namespace: Mapping[str, Any] | None = None,
│ │          status_code: int | None = None,
│ │          sync_to_thread: bool = False,
│ │          # OpenAPI related attributes
│ │          content_encoding: str | None = None,
│ │          content_media_type: str | None = None,
│ │          deprecated: bool = False,
│ │ @@ -737,14 +774,16 @@
│ │              cache: Enables response caching if configured on the application level. Valid values are ``True`` or a number
│ │                  of seconds (e.g. ``120``) to cache the response.
│ │              cache_control: A ``cache-control`` header of type
│ │                  :class:`CacheControlHeader <.datastructures.CacheControlHeader>` that will be added to the response.
│ │              cache_key_builder: A :class:`cache-key builder function <.types.CacheKeyBuilder>`. Allows for customization
│ │                  of the cache key if caching is configured on the application level.
│ │              dependencies: A string keyed mapping of dependency :class:`Provider <.di.Provide>` instances.
│ │ +            dto: :class:`DTOInterface <.dto.interface.DTOInterface>` to use for (de)serializing and
│ │ +                validation of request data.
│ │              etag: An ``etag`` header of type :class:`ETag <.datastructures.ETag>` that will be added to the response.
│ │              exception_handlers: A mapping of status codes and/or exception types to handler functions.
│ │              guards: A sequence of :class:`Guard <.types.Guard>` callables.
│ │              http_method: An :class:`http method string <.types.Method>`, a member of the enum
│ │                  :class:`HttpMethod <litestar.enums.HttpMethod>` or a list of these that correlates to the methods the
│ │                  route handler function should handle.
│ │              media_type: A member of the :class:`MediaType <.enums.MediaType>` enum or a string with a
│ │ @@ -756,14 +795,16 @@
│ │              response_class: A custom subclass of :class:`Response <.response.Response>` to be used as route handler's
│ │                  default response.
│ │              response_cookies: A sequence of :class:`Cookie <.datastructures.Cookie>` instances.
│ │              response_headers: A string keyed mapping of :class:`ResponseHeader <.datastructures.ResponseHeader>`
│ │                  instances.
│ │              responses: A mapping of additional status codes and a description of their expected content.
│ │                  This information will be included in the OpenAPI schema
│ │ +            return_dto: :class:`DTOInterface <.dto.interface.DTOInterface>` to use for serializing
│ │ +                outbound response data.
│ │              signature_namespace: A mapping of names to types for use in forward reference resolution during signature modelling.
│ │              status_code: An http status code for the response. Defaults to ``200`` for mixed method or ``GET``, ``PUT`` and
│ │                  ``PATCH``, ``201`` for ``POST`` and ``204`` for ``DELETE``.
│ │              sync_to_thread: A boolean dictating whether the handler function will be executed in a worker thread or the
│ │                  main event loop. This has an effect only for sync handler functions. See using sync handler functions.
│ │              content_encoding: A string describing the encoding of the content, e.g. ``base64``.
│ │              content_media_type: A string designating the media-type of the content, e.g. ``image/png``.
│ │ @@ -792,14 +833,15 @@
│ │              cache_control=cache_control,
│ │              cache_key_builder=cache_key_builder,
│ │              content_encoding=content_encoding,
│ │              content_media_type=content_media_type,
│ │              dependencies=dependencies,
│ │              deprecated=deprecated,
│ │              description=description,
│ │ +            dto=dto,
│ │              exception_handlers=exception_handlers,
│ │              etag=etag,
│ │              guards=guards,
│ │              http_method=HttpMethod.POST,
│ │              include_in_schema=include_in_schema,
│ │              media_type=media_type,
│ │              middleware=middleware,
│ │ @@ -809,14 +851,15 @@
│ │              path=path,
│ │              raises=raises,
│ │              response_class=response_class,
│ │              response_cookies=response_cookies,
│ │              response_description=response_description,
│ │              response_headers=response_headers,
│ │              responses=responses,
│ │ +            return_dto=return_dto,
│ │              signature_namespace=signature_namespace,
│ │              security=security,
│ │              status_code=status_code,
│ │              summary=summary,
│ │              sync_to_thread=sync_to_thread,
│ │              tags=tags,
│ │              type_encoders=type_encoders,
│ │ @@ -838,24 +881,26 @@
│ │          after_response: AfterResponseHookHandler | None = None,
│ │          background: BackgroundTask | BackgroundTasks | None = None,
│ │          before_request: BeforeRequestHookHandler | None = None,
│ │          cache: bool | int | type[CACHE_FOREVER] = False,
│ │          cache_control: CacheControlHeader | None = None,
│ │          cache_key_builder: CacheKeyBuilder | None = None,
│ │          dependencies: dict[str, Provide] | None = None,
│ │ +        dto: type[DTOInterface] | None | EmptyType = Empty,
│ │          etag: ETag | None = None,
│ │          exception_handlers: ExceptionHandlersMap | None = None,
│ │          guards: list[Guard] | None = None,
│ │          media_type: MediaType | str | None = None,
│ │          middleware: list[Middleware] | None = None,
│ │          name: str | None = None,
│ │          opt: dict[str, Any] | None = None,
│ │          response_class: ResponseType | None = None,
│ │          response_cookies: ResponseCookies | None = None,
│ │          response_headers: ResponseHeaders | None = None,
│ │ +        return_dto: type[DTOInterface] | None | EmptyType = Empty,
│ │          signature_namespace: Mapping[str, Any] | None = None,
│ │          status_code: int | None = None,
│ │          sync_to_thread: bool = False,
│ │          # OpenAPI related attributes
│ │          content_encoding: str | None = None,
│ │          content_media_type: str | None = None,
│ │          deprecated: bool = False,
│ │ @@ -890,14 +935,16 @@
│ │              cache: Enables response caching if configured on the application level. Valid values are ``True`` or a number
│ │                  of seconds (e.g. ``120``) to cache the response.
│ │              cache_control: A ``cache-control`` header of type
│ │                  :class:`CacheControlHeader <.datastructures.CacheControlHeader>` that will be added to the response.
│ │              cache_key_builder: A :class:`cache-key builder function <.types.CacheKeyBuilder>`. Allows for customization
│ │                  of the cache key if caching is configured on the application level.
│ │              dependencies: A string keyed mapping of dependency :class:`Provider <.di.Provide>` instances.
│ │ +            dto: :class:`DTOInterface <.dto.interface.DTOInterface>` to use for (de)serializing and
│ │ +                validation of request data.
│ │              etag: An ``etag`` header of type :class:`ETag <.datastructures.ETag>` that will be added to the response.
│ │              exception_handlers: A mapping of status codes and/or exception types to handler functions.
│ │              guards: A sequence of :class:`Guard <.types.Guard>` callables.
│ │              http_method: An :class:`http method string <.types.Method>`, a member of the enum
│ │                  :class:`HttpMethod <litestar.enums.HttpMethod>` or a list of these that correlates to the methods the
│ │                  route handler function should handle.
│ │              media_type: A member of the :class:`MediaType <.enums.MediaType>` enum or a string with a
│ │ @@ -909,14 +956,16 @@
│ │              response_class: A custom subclass of :class:`Response <.response.Response>` to be used as route handler's
│ │                  default response.
│ │              response_cookies: A sequence of :class:`Cookie <.datastructures.Cookie>` instances.
│ │              response_headers: A string keyed mapping of :class:`ResponseHeader <.datastructures.ResponseHeader>`
│ │                  instances.
│ │              responses: A mapping of additional status codes and a description of their expected content.
│ │                  This information will be included in the OpenAPI schema
│ │ +            return_dto: :class:`DTOInterface <.dto.interface.DTOInterface>` to use for serializing
│ │ +                outbound response data.
│ │              signature_namespace: A mapping of names to types for use in forward reference resolution during signature modelling.
│ │              status_code: An http status code for the response. Defaults to ``200`` for mixed method or ``GET``, ``PUT`` and
│ │                  ``PATCH``, ``201`` for ``POST`` and ``204`` for ``DELETE``.
│ │              sync_to_thread: A boolean dictating whether the handler function will be executed in a worker thread or the
│ │                  main event loop. This has an effect only for sync handler functions. See using sync handler functions.
│ │              content_encoding: A string describing the encoding of the content, e.g. ``base64``.
│ │              content_media_type: A string designating the media-type of the content, e.g. ``image/png``.
│ │ @@ -945,14 +994,15 @@
│ │              cache_control=cache_control,
│ │              cache_key_builder=cache_key_builder,
│ │              content_encoding=content_encoding,
│ │              content_media_type=content_media_type,
│ │              dependencies=dependencies,
│ │              deprecated=deprecated,
│ │              description=description,
│ │ +            dto=dto,
│ │              exception_handlers=exception_handlers,
│ │              etag=etag,
│ │              guards=guards,
│ │              http_method=HttpMethod.PUT,
│ │              include_in_schema=include_in_schema,
│ │              media_type=media_type,
│ │              middleware=middleware,
│ │ @@ -962,14 +1012,15 @@
│ │              path=path,
│ │              raises=raises,
│ │              response_class=response_class,
│ │              response_cookies=response_cookies,
│ │              response_description=response_description,
│ │              response_headers=response_headers,
│ │              responses=responses,
│ │ +            return_dto=return_dto,
│ │              security=security,
│ │              signature_namespace=signature_namespace,
│ │              status_code=status_code,
│ │              summary=summary,
│ │              sync_to_thread=sync_to_thread,
│ │              tags=tags,
│ │              type_encoders=type_encoders,
│ │   --- litestar-1.0.0a0/litestar/logging/_utils.py
│ ├── +++ litestar-2.0.0a3/litestar/logging/_utils.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/logging/config.py
│ ├── +++ litestar-2.0.0a3/litestar/logging/config.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/logging/picologging.py
│ ├── +++ litestar-2.0.0a3/litestar/logging/picologging.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/logging/standard.py
│ ├── +++ litestar-2.0.0a3/litestar/logging/standard.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/middleware/_utils.py
│ ├── +++ litestar-2.0.0a3/litestar/middleware/_utils.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/middleware/allowed_hosts.py
│ ├── +++ litestar-2.0.0a3/litestar/middleware/allowed_hosts.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/middleware/authentication.py
│ ├── +++ litestar-2.0.0a3/litestar/middleware/authentication.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/middleware/base.py
│ ├── +++ litestar-2.0.0a3/litestar/middleware/base.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/middleware/compression.py
│ ├── +++ litestar-2.0.0a3/litestar/middleware/compression.py
│ │┄ Files 0% similar despite different names
│ │ @@ -47,15 +47,15 @@
│ │              config: The app compression config.
│ │          """
│ │          self.buffer = buffer
│ │          self.compression_encoding = compression_encoding
│ │  
│ │          if compression_encoding == CompressionEncoding.BROTLI:
│ │              try:
│ │ -                pass
│ │ +                import brotli  # noqa: F401
│ │              except ImportError as e:
│ │                  raise MissingDependencyException("brotli") from e
│ │  
│ │              from brotli import MODE_FONT, MODE_GENERIC, MODE_TEXT, Compressor
│ │  
│ │              modes: dict[Literal["generic", "text", "font"], int] = {
│ │                  "text": int(MODE_TEXT),
│ │   --- litestar-1.0.0a0/litestar/middleware/cors.py
│ ├── +++ litestar-2.0.0a3/litestar/middleware/cors.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/middleware/csrf.py
│ ├── +++ litestar-2.0.0a3/litestar/middleware/csrf.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/middleware/exceptions/_debug_response.py
│ ├── +++ litestar-2.0.0a3/litestar/middleware/exceptions/_debug_response.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/middleware/exceptions/middleware.py
│ ├── +++ litestar-2.0.0a3/litestar/middleware/exceptions/middleware.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/middleware/exceptions/templates/scripts.js
│ ├── +++ litestar-2.0.0a3/litestar/middleware/exceptions/templates/scripts.js
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/middleware/exceptions/templates/styles.css
│ ├── +++ litestar-2.0.0a3/litestar/middleware/exceptions/templates/styles.css
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/middleware/logging.py
│ ├── +++ litestar-2.0.0a3/litestar/middleware/logging.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/middleware/rate_limit.py
│ ├── +++ litestar-2.0.0a3/litestar/middleware/rate_limit.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/middleware/session/base.py
│ ├── +++ litestar-2.0.0a3/litestar/middleware/session/base.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/middleware/session/client_side.py
│ ├── +++ litestar-2.0.0a3/litestar/middleware/session/client_side.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/middleware/session/server_side.py
│ ├── +++ litestar-2.0.0a3/litestar/middleware/session/server_side.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/openapi/config.py
│ ├── +++ litestar-2.0.0a3/litestar/openapi/config.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/openapi/controller.py
│ ├── +++ litestar-2.0.0a3/litestar/openapi/controller.py
│ │┄ Files 4% similar despite different names
│ │ @@ -83,14 +83,18 @@
│ │      """Download url for the Stoplight Elements JS bundle."""
│ │  
│ │      # internal
│ │      _dumped_schema: str = ""
│ │      # until swagger-ui supports v3.1.* of OpenAPI officially, we need to modify the schema for it and keep it
│ │      # separate from the redoc version of the schema, which is unmodified.
│ │      _dumped_modified_schema: str = ""
│ │ +    # set the dto types to `None` to ensure that if a dto is supplied at the application layer, they don't apply to
│ │ +    # this controller.
│ │ +    dto = None
│ │ +    return_dto = None
│ │  
│ │      @staticmethod
│ │      def get_schema_from_request(request: Request) -> "OpenAPI":
│ │          """Return the OpenAPI pydantic model from the request instance.
│ │  
│ │          Args:
│ │              request: A :class:`Litestar <.connection.Request>` instance.
│ │   --- litestar-1.0.0a0/litestar/openapi/datastructures.py
│ ├── +++ litestar-2.0.0a3/litestar/openapi/datastructures.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/openapi/spec/__init__.py
│ ├── +++ litestar-2.0.0a3/litestar/openapi/spec/__init__.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/openapi/spec/base.py
│ ├── +++ litestar-2.0.0a3/litestar/openapi/spec/base.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/openapi/spec/callback.py
│ ├── +++ litestar-2.0.0a3/litestar/openapi/spec/callback.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/openapi/spec/components.py
│ ├── +++ litestar-2.0.0a3/litestar/openapi/spec/components.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/openapi/spec/contact.py
│ ├── +++ litestar-2.0.0a3/litestar/openapi/spec/contact.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/openapi/spec/discriminator.py
│ ├── +++ litestar-2.0.0a3/litestar/openapi/spec/discriminator.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/openapi/spec/encoding.py
│ ├── +++ litestar-2.0.0a3/litestar/openapi/spec/encoding.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/openapi/spec/enums.py
│ ├── +++ litestar-2.0.0a3/litestar/openapi/spec/enums.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/openapi/spec/example.py
│ ├── +++ litestar-2.0.0a3/litestar/openapi/spec/example.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/openapi/spec/external_documentation.py
│ ├── +++ litestar-2.0.0a3/litestar/openapi/spec/external_documentation.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/openapi/spec/header.py
│ ├── +++ litestar-2.0.0a3/litestar/openapi/spec/header.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/openapi/spec/info.py
│ ├── +++ litestar-2.0.0a3/litestar/openapi/spec/info.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/openapi/spec/license.py
│ ├── +++ litestar-2.0.0a3/litestar/openapi/spec/license.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/openapi/spec/link.py
│ ├── +++ litestar-2.0.0a3/litestar/openapi/spec/link.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/openapi/spec/media_type.py
│ ├── +++ litestar-2.0.0a3/litestar/openapi/spec/media_type.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/openapi/spec/oauth_flow.py
│ ├── +++ litestar-2.0.0a3/litestar/openapi/spec/oauth_flow.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/openapi/spec/oauth_flows.py
│ ├── +++ litestar-2.0.0a3/litestar/openapi/spec/oauth_flows.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/openapi/spec/open_api.py
│ ├── +++ litestar-2.0.0a3/litestar/openapi/spec/open_api.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/openapi/spec/operation.py
│ ├── +++ litestar-2.0.0a3/litestar/openapi/spec/operation.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/openapi/spec/parameter.py
│ ├── +++ litestar-2.0.0a3/litestar/openapi/spec/parameter.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/openapi/spec/path_item.py
│ ├── +++ litestar-2.0.0a3/litestar/openapi/spec/path_item.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/openapi/spec/paths.py
│ ├── +++ litestar-2.0.0a3/litestar/openapi/spec/paths.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/openapi/spec/reference.py
│ ├── +++ litestar-2.0.0a3/litestar/openapi/spec/reference.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/openapi/spec/request_body.py
│ ├── +++ litestar-2.0.0a3/litestar/openapi/spec/request_body.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/openapi/spec/response.py
│ ├── +++ litestar-2.0.0a3/litestar/openapi/spec/response.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/openapi/spec/responses.py
│ ├── +++ litestar-2.0.0a3/litestar/openapi/spec/responses.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/openapi/spec/schema.py
│ ├── +++ litestar-2.0.0a3/litestar/openapi/spec/schema.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/openapi/spec/security_requirement.py
│ ├── +++ litestar-2.0.0a3/litestar/openapi/spec/security_requirement.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/openapi/spec/security_scheme.py
│ ├── +++ litestar-2.0.0a3/litestar/openapi/spec/security_scheme.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/openapi/spec/server.py
│ ├── +++ litestar-2.0.0a3/litestar/openapi/spec/server.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/openapi/spec/server_variable.py
│ ├── +++ litestar-2.0.0a3/litestar/openapi/spec/server_variable.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/openapi/spec/tag.py
│ ├── +++ litestar-2.0.0a3/litestar/openapi/spec/tag.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/openapi/spec/xml.py
│ ├── +++ litestar-2.0.0a3/litestar/openapi/spec/xml.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/pagination.py
│ ├── +++ litestar-2.0.0a3/litestar/pagination.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/params.py
│ ├── +++ litestar-2.0.0a3/litestar/params.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/partial.py
│ ├── +++ litestar-2.0.0a3/litestar/partial.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/plugins.py
│ ├── +++ litestar-2.0.0a3/litestar/plugins.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/response/base.py
│ ├── +++ litestar-2.0.0a3/litestar/response/base.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/response/file.py
│ ├── +++ litestar-2.0.0a3/litestar/response/file.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/response/redirect.py
│ ├── +++ litestar-2.0.0a3/litestar/response/redirect.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/response/streaming.py
│ ├── +++ litestar-2.0.0a3/litestar/response/streaming.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/response/template.py
│ ├── +++ litestar-2.0.0a3/litestar/response/template.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/response_containers.py
│ ├── +++ litestar-2.0.0a3/litestar/response_containers.py
│ │┄ Files 2% similar despite different names
│ │ @@ -217,16 +217,14 @@
│ │      """The encoding to be used for the response headers."""
│ │      status_code: Literal[301, 302, 303, 307, 308] | None = None
│ │      """Redirect status code"""
│ │  
│ │      def to_response(  # type: ignore[override]
│ │          self,
│ │          headers: dict[str, Any],
│ │ -        # TODO: update the redirect response to support HTML as well.
│ │ -        #   This argument is currently ignored.
│ │          media_type: MediaType | str,
│ │          status_code: Literal[301, 302, 303, 307, 308],
│ │          app: Litestar,
│ │          request: Request,
│ │      ) -> RedirectResponse:
│ │          """Create a RedirectResponse instance.
│ │   --- litestar-1.0.0a0/litestar/router.py
│ ├── +++ litestar-2.0.0a3/litestar/router.py
│ │┄ Files 4% similar despite different names
│ │ @@ -5,25 +5,27 @@
│ │  from typing import TYPE_CHECKING, Any, DefaultDict, Mapping, Sequence, cast
│ │  
│ │  from litestar._layers.utils import narrow_response_cookies, narrow_response_headers
│ │  from litestar.controller import Controller
│ │  from litestar.exceptions import ImproperlyConfiguredException
│ │  from litestar.handlers.asgi_handlers import ASGIRouteHandler
│ │  from litestar.handlers.http_handlers import HTTPRouteHandler
│ │ -from litestar.handlers.websocket_handlers import WebsocketRouteHandler
│ │ +from litestar.handlers.websocket_handlers import WebsocketListener, WebsocketRouteHandler
│ │  from litestar.routes import ASGIRoute, HTTPRoute, WebSocketRoute
│ │ +from litestar.types.empty import Empty
│ │  from litestar.utils import find_index, is_class_and_subclass, join_paths, normalize_path, unique
│ │  from litestar.utils.sync import AsyncCallable
│ │  
│ │  __all__ = ("Router",)
│ │  
│ │  
│ │  if TYPE_CHECKING:
│ │      from litestar.datastructures import CacheControlHeader, ETag
│ │      from litestar.di import Provide
│ │ +    from litestar.dto.interface import DTOInterface
│ │      from litestar.openapi.spec import SecurityRequirement
│ │      from litestar.routes import BaseRoute
│ │      from litestar.types import (
│ │          AfterRequestHookHandler,
│ │          AfterResponseHookHandler,
│ │          BeforeRequestHookHandler,
│ │          ControllerRouterHandler,
│ │ @@ -34,40 +36,43 @@
│ │          ResponseCookies,
│ │          ResponseType,
│ │          RouteHandlerMapItem,
│ │          RouteHandlerType,
│ │          TypeEncodersMap,
│ │      )
│ │      from litestar.types.composite_types import ResponseHeaders
│ │ +    from litestar.types.empty import EmptyType
│ │  
│ │  
│ │  class Router:
│ │      """The Litestar Router class.
│ │  
│ │      A Router instance is used to group controller, routers and route handler functions under a shared path fragment
│ │      """
│ │  
│ │      __slots__ = (
│ │          "after_request",
│ │          "after_response",
│ │          "before_request",
│ │          "cache_control",
│ │          "dependencies",
│ │ +        "dto",
│ │          "etag",
│ │          "exception_handlers",
│ │          "guards",
│ │          "middleware",
│ │          "opt",
│ │          "owner",
│ │          "parameters",
│ │          "path",
│ │          "registered_route_handler_ids",
│ │          "response_class",
│ │          "response_cookies",
│ │          "response_headers",
│ │ +        "return_dto",
│ │          "routes",
│ │          "security",
│ │          "signature_namespace",
│ │          "tags",
│ │          "type_encoders",
│ │      )
│ │  
│ │ @@ -76,23 +81,25 @@
│ │          path: str,
│ │          *,
│ │          after_request: AfterRequestHookHandler | None = None,
│ │          after_response: AfterResponseHookHandler | None = None,
│ │          before_request: BeforeRequestHookHandler | None = None,
│ │          cache_control: CacheControlHeader | None = None,
│ │          dependencies: Mapping[str, Provide] | None = None,
│ │ +        dto: type[DTOInterface] | None | EmptyType = Empty,
│ │          etag: ETag | None = None,
│ │          exception_handlers: ExceptionHandlersMap | None = None,
│ │          guards: Sequence[Guard] | None = None,
│ │          middleware: Sequence[Middleware] | None = None,
│ │          opt: Mapping[str, Any] | None = None,
│ │          parameters: ParametersMap | None = None,
│ │          response_class: ResponseType | None = None,
│ │          response_cookies: ResponseCookies | None = None,
│ │          response_headers: ResponseHeaders | None = None,
│ │ +        return_dto: type[DTOInterface] | None | EmptyType = Empty,
│ │          route_handlers: Sequence[ControllerRouterHandler],
│ │          security: Sequence[SecurityRequirement] | None = None,
│ │          signature_namespace: Mapping[str, Any] | None = None,
│ │          tags: Sequence[str] | None = None,
│ │          type_encoders: TypeEncodersMap | None = None,
│ │      ) -> None:
│ │          """Initialize a ``Router``.
│ │ @@ -106,14 +113,16 @@
│ │              before_request: A sync or async function called immediately before calling the route handler. Receives
│ │                  the :class:`litestar.connection.Request` instance and any non-``None`` return value is used for the
│ │                  response, bypassing the route handler.
│ │              cache_control: A ``cache-control`` header of type
│ │                  :class:`CacheControlHeader <.datastructures.CacheControlHeader>` to add to route handlers of
│ │                  this router. Can be overridden by route handlers.
│ │              dependencies: A string keyed mapping of dependency :class:`Provide <.di.Provide>` instances.
│ │ +            dto: :class:`DTOInterface <.dto.interface.DTOInterface>` to use for (de)serializing and
│ │ +                validation of request data.
│ │              etag: An ``etag`` header of type :class:`ETag <.datastructures.ETag>` to add to route handlers of this app.
│ │              exception_handlers: A mapping of status codes and/or exception types to handler functions.
│ │              guards: A sequence of :data:`Guard <.types.Guard>` callables.
│ │              middleware: A sequence of :data:`Middleware <.types.Middleware>`.
│ │              opt: A string keyed mapping of arbitrary values that can be accessed in :data:`Guards <.types.Guard>` or
│ │                  wherever you have access to :class:`Request <.connection.Request>` or
│ │                  :data:`ASGI Scope <.types.Scope>`.
│ │ @@ -122,14 +131,16 @@
│ │              path: A path fragment that is prefixed to all route handlers, controllers and other routers associated
│ │                  with the router instance.
│ │              response_class: A custom subclass of :class:`Response <.response.Response>` to be used as the default for
│ │                  all route handlers, controllers and other routers associated with the router instance.
│ │              response_cookies: A sequence of :class:`Cookie <.datastructures.Cookie>` instances.
│ │              response_headers: A string keyed mapping of :class:`ResponseHeader <.datastructures.ResponseHeader>`
│ │                  instances.
│ │ +            return_dto: :class:`DTOInterface <.dto.interface.DTOInterface>` to use for serializing
│ │ +                outbound response data.
│ │              route_handlers: A required sequence of route handlers, which can include instances of
│ │                  :class:`Router <.router.Router>`, subclasses of :class:`Controller <.controller.Controller>` or any
│ │                  function decorated by the route handler decorators.
│ │              security: A sequence of dicts that will be added to the schema of all route handlers in the application.
│ │                  See :data:`SecurityRequirement <.openapi.spec.SecurityRequirement>`
│ │                  for details.
│ │              signature_namespace: A mapping of names to types for use in forward reference resolution during signature modelling.
│ │ @@ -138,26 +149,28 @@
│ │              type_encoders: A mapping of types to callables that transform them into types supported for serialization.
│ │          """
│ │  
│ │          self.after_request = AsyncCallable(after_request) if after_request else None  # type: ignore[arg-type]
│ │          self.after_response = AsyncCallable(after_response) if after_response else None
│ │          self.before_request = AsyncCallable(before_request) if before_request else None
│ │          self.cache_control = cache_control
│ │ +        self.dto = dto
│ │          self.etag = etag
│ │          self.dependencies = dict(dependencies or {})
│ │          self.exception_handlers = dict(exception_handlers or {})
│ │          self.guards = list(guards or [])
│ │          self.middleware = list(middleware or [])
│ │          self.opt = dict(opt or {})
│ │          self.owner: Router | None = None
│ │          self.parameters = dict(parameters or {})
│ │          self.path = normalize_path(path)
│ │          self.response_class = response_class
│ │          self.response_cookies = narrow_response_cookies(response_cookies)
│ │          self.response_headers = narrow_response_headers(response_headers)
│ │ +        self.return_dto = return_dto
│ │          self.routes: list[HTTPRoute | ASGIRoute | WebSocketRoute] = []
│ │          self.security = list(security or [])
│ │          self.signature_namespace = signature_namespace or {}
│ │          self.tags = list(tags or [])
│ │          self.registered_route_handler_ids: set[int] = set()
│ │          self.type_encoders = dict(type_encoders) if type_encoders is not None else None
│ │  
│ │ @@ -272,14 +285,18 @@
│ │          return handlers_map
│ │  
│ │      def _validate_registration_value(self, value: ControllerRouterHandler) -> Controller | RouteHandlerType | Router:
│ │          """Ensure values passed to the register method are supported."""
│ │          if is_class_and_subclass(value, Controller):
│ │              return value(owner=self)
│ │  
│ │ +        # this narrows down to an ABC, but we assume a non-abstract subclass of the ABC superclass
│ │ +        if is_class_and_subclass(value, WebsocketListener):  # type: ignore[type-abstract]
│ │ +            return value()._handler  # pyright: ignore
│ │ +
│ │          if isinstance(value, Router):
│ │              if value.owner:
│ │                  raise ImproperlyConfiguredException(f"Router with path {value.path} has already been registered")
│ │              if value is self:
│ │                  raise ImproperlyConfiguredException("Cannot register a router on itself")
│ │  
│ │              value.owner = self
│ │   --- litestar-1.0.0a0/litestar/routes/asgi.py
│ ├── +++ litestar-2.0.0a3/litestar/routes/asgi.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/routes/http.py
│ ├── +++ litestar-2.0.0a3/litestar/routes/http.py
│ │┄ Files 0% similar despite different names
│ │ @@ -77,15 +77,15 @@
│ │          response = await self._get_response_for_request(
│ │              scope=scope, request=request, route_handler=route_handler, parameter_model=parameter_model
│ │          )
│ │  
│ │          await response(scope, receive, send)
│ │  
│ │          if after_response_handler := route_handler.resolve_after_response():
│ │ -            await after_response_handler(request)  # type: ignore
│ │ +            await after_response_handler(request)
│ │  
│ │          if form_data := scope.get("_form", {}):
│ │              await self._cleanup_temporary_files(form_data=cast("dict[str, Any]", form_data))
│ │  
│ │      def create_handler_map(self) -> None:
│ │          """Parse the ``router_handlers`` of this route and return a mapping of
│ │          http- methods and route handlers.
│ │   --- litestar-1.0.0a0/litestar/routes/websocket.py
│ ├── +++ litestar-2.0.0a3/litestar/routes/websocket.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/security/base.py
│ ├── +++ litestar-2.0.0a3/litestar/security/base.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/security/session_auth/auth.py
│ ├── +++ litestar-2.0.0a3/litestar/security/session_auth/auth.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/security/session_auth/middleware.py
│ ├── +++ litestar-2.0.0a3/litestar/security/session_auth/middleware.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/serialization.py
│ ├── +++ litestar-2.0.0a3/litestar/serialization.py
│ │┄ Files 1% similar despite different names
│ │ @@ -80,15 +80,15 @@
│ │      deque: list,
│ │      Decimal: decimal_encoder,
│ │      StrictBool: int,
│ │      Pattern: _enc_pattern,
│ │      # support subclasses of stdlib types, If no previous type matched, these will be
│ │      # the last type in the mro, so we use this to (attempt to) convert a subclass into
│ │      # its base class. # see https://github.com/jcrist/msgspec/issues/248
│ │ -    # and https://github.com/starlite-api/litestar/issues/1003
│ │ +    # and https://github.com/litestar-org/litestar/issues/1003
│ │      str: str,
│ │      int: int,
│ │      float: float,
│ │      set: set,
│ │      frozenset: frozenset,
│ │  }
│ │   --- litestar-1.0.0a0/litestar/static_files/base.py
│ ├── +++ litestar-2.0.0a3/litestar/static_files/base.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/static_files/config.py
│ ├── +++ litestar-2.0.0a3/litestar/static_files/config.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/status_codes.py
│ ├── +++ litestar-2.0.0a3/litestar/status_codes.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/stores/base.py
│ ├── +++ litestar-2.0.0a3/litestar/stores/base.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/stores/file.py
│ ├── +++ litestar-2.0.0a3/litestar/stores/file.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/stores/memory.py
│ ├── +++ litestar-2.0.0a3/litestar/stores/memory.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/stores/redis.py
│ ├── +++ litestar-2.0.0a3/litestar/stores/redis.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/stores/registry.py
│ ├── +++ litestar-2.0.0a3/litestar/stores/registry.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/template/base.py
│ ├── +++ litestar-2.0.0a3/litestar/template/base.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/template/config.py
│ ├── +++ litestar-2.0.0a3/litestar/template/config.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/testing/__init__.py
│ ├── +++ litestar-2.0.0a3/litestar/testing/__init__.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/testing/client/__init__.py
│ ├── +++ litestar-2.0.0a3/litestar/testing/client/__init__.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/testing/client/async_client.py
│ ├── +++ litestar-2.0.0a3/litestar/testing/client/async_client.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/testing/client/base.py
│ ├── +++ litestar-2.0.0a3/litestar/testing/client/base.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/testing/client/sync_client.py
│ ├── +++ litestar-2.0.0a3/litestar/testing/client/sync_client.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/testing/helpers.py
│ ├── +++ litestar-2.0.0a3/litestar/testing/helpers.py
│ │┄ Files 2% similar despite different names
│ │ @@ -13,14 +13,15 @@
│ │      from litestar import Request, WebSocket
│ │      from litestar.config.allowed_hosts import AllowedHostsConfig
│ │      from litestar.config.compression import CompressionConfig
│ │      from litestar.config.cors import CORSConfig
│ │      from litestar.config.csrf import CSRFConfig
│ │      from litestar.config.response_cache import ResponseCacheConfig
│ │      from litestar.datastructures import CacheControlHeader, ETag, ResponseHeader, State
│ │ +    from litestar.dto.interface import DTOInterface
│ │      from litestar.events import BaseEventEmitterBackend, EventListener
│ │      from litestar.logging.config import BaseLoggingConfig
│ │      from litestar.middleware.session.base import BaseBackendConfig
│ │      from litestar.openapi.config import OpenAPIConfig
│ │      from litestar.openapi.spec import SecurityRequirement
│ │      from litestar.plugins import PluginProtocol
│ │      from litestar.static_files.config import StaticFilesConfig
│ │ @@ -68,14 +69,15 @@
│ │      before_startup: OptionalSequence[LifeSpanHookHandler] = None,
│ │      cache_control: CacheControlHeader | None = None,
│ │      compression_config: CompressionConfig | None = None,
│ │      cors_config: CORSConfig | None = None,
│ │      csrf_config: CSRFConfig | None = None,
│ │      debug: bool = False,
│ │      dependencies: Dependencies | None = None,
│ │ +    dto: type[DTOInterface] | None | EmptyType = Empty,
│ │      etag: ETag | None = None,
│ │      event_emitter_backend: type[BaseEventEmitterBackend] = SimpleEventEmitter,
│ │      exception_handlers: ExceptionHandlersMap | None = None,
│ │      guards: OptionalSequence[Guard] = None,
│ │      listeners: OptionalSequence[EventListener] = None,
│ │      logging_config: BaseLoggingConfig | EmptyType | None = Empty,
│ │      middleware: OptionalSequence[Middleware] = None,
│ │ @@ -90,14 +92,15 @@
│ │      preferred_validation_backend: Literal["pydantic", "attrs"] = "attrs",
│ │      raise_server_exceptions: bool = True,
│ │      request_class: type[Request] | None = None,
│ │      response_cache_config: ResponseCacheConfig | None = None,
│ │      response_class: ResponseType | None = None,
│ │      response_cookies: ResponseCookies | None = None,
│ │      response_headers: OptionalSequence[ResponseHeader] = None,
│ │ +    return_dto: type[DTOInterface] | None | EmptyType = Empty,
│ │      root_path: str = "",
│ │      security: OptionalSequence[SecurityRequirement] = None,
│ │      session_config: BaseBackendConfig | None = None,
│ │      signature_namespace: Mapping[str, Any] | None = None,
│ │      state: State | None = None,
│ │      static_files_config: OptionalSequence[StaticFilesConfig] = None,
│ │      stores: StoreRegistry | dict[str, Store] | None = None,
│ │ @@ -170,14 +173,16 @@
│ │              this app. Can be overridden by route handlers.
│ │          compression_config: Configures compression behaviour of the application, this enabled a builtin or user
│ │              defined Compression middleware.
│ │          cors_config: If set, configures :class:`CORSMiddleware <.middleware.cors.CORSMiddleware>`.
│ │          csrf_config: If set, configures :class:`CSRFMiddleware <.middleware.csrf.CSRFMiddleware>`.
│ │          debug: If ``True``, app errors rendered as HTML with a stack trace.
│ │          dependencies: A string keyed mapping of dependency :class:`Providers <.di.Provide>`.
│ │ +        dto: :class:`DTOInterface <.dto.interface.DTOInterface>` to use for (de)serializing and
│ │ +            validation of request data.
│ │          etag: An ``etag`` header of type :class:`ETag <.datastructures.ETag>` to add to route handlers of this app.
│ │              Can be overridden by route handlers.
│ │          event_emitter_backend: A subclass of
│ │              :class:`BaseEventEmitterBackend <.events.emitter.BaseEventEmitterBackend>`.
│ │          exception_handlers: A mapping of status codes and/or exception types to handler functions.
│ │          guards: A sequence of :class:`Guard <.types.Guard>` callables.
│ │          listeners: A sequence of :class:`EventListener <.events.listener.EventListener>`.
│ │ @@ -203,14 +208,16 @@
│ │          preferred_validation_backend: Validation backend to use, if multiple are installed.
│ │          request_class: An optional subclass of :class:`Request <.connection.Request>` to use for http connections.
│ │          response_class: A custom subclass of :class:`Response <.response.Response>` to be used as the app's default
│ │              response.
│ │          response_cookies: A sequence of :class:`Cookie <.datastructures.Cookie>`.
│ │          response_headers: A string keyed mapping of :class:`ResponseHeader <.datastructures.ResponseHeader>`
│ │          response_cache_config: Configures caching behavior of the application.
│ │ +        return_dto: :class:`DTOInterface <.dto.interface.DTOInterface>` to use for serializing
│ │ +            outbound response data.
│ │          route_handlers: A sequence of route handlers, which can include instances of
│ │              :class:`Router <.router.Router>`, subclasses of :class:`Controller <.controller.Controller>` or any
│ │              callable decorated by the route handler decorators.
│ │          security: A sequence of dicts that will be added to the schema of all route handlers in the application.
│ │              See
│ │              :data:`SecurityRequirement <.openapi.spec.SecurityRequirement>` for details.
│ │          signature_namespace: A mapping of names to types for use in forward reference resolution during signature modelling.
│ │ @@ -247,14 +254,15 @@
│ │          before_startup=before_startup,
│ │          cache_control=cache_control,
│ │          compression_config=compression_config,
│ │          cors_config=cors_config,
│ │          csrf_config=csrf_config,
│ │          debug=debug,
│ │          dependencies=dependencies,
│ │ +        dto=dto,
│ │          etag=etag,
│ │          event_emitter_backend=event_emitter_backend,
│ │          exception_handlers=exception_handlers,
│ │          guards=guards,
│ │          listeners=listeners,
│ │          logging_config=logging_config,
│ │          middleware=middleware,
│ │ @@ -268,14 +276,15 @@
│ │          plugins=plugins,
│ │          preferred_validation_backend=preferred_validation_backend,
│ │          request_class=request_class,
│ │          response_cache_config=response_cache_config,
│ │          response_class=response_class,
│ │          response_cookies=response_cookies,
│ │          response_headers=response_headers,
│ │ +        return_dto=return_dto,
│ │          route_handlers=route_handlers,
│ │          security=security,
│ │          signature_namespace=signature_namespace,
│ │          state=state,
│ │          static_files_config=static_files_config,
│ │          stores=stores,
│ │          tags=tags,
│ │ @@ -313,14 +322,15 @@
│ │      before_startup: OptionalSequence[LifeSpanHookHandler] = None,
│ │      cache_control: CacheControlHeader | None = None,
│ │      compression_config: CompressionConfig | None = None,
│ │      cors_config: CORSConfig | None = None,
│ │      csrf_config: CSRFConfig | None = None,
│ │      debug: bool = False,
│ │      dependencies: Dependencies | None = None,
│ │ +    dto: type[DTOInterface] | None | EmptyType = Empty,
│ │      etag: ETag | None = None,
│ │      event_emitter_backend: type[BaseEventEmitterBackend] = SimpleEventEmitter,
│ │      exception_handlers: ExceptionHandlersMap | None = None,
│ │      guards: OptionalSequence[Guard] = None,
│ │      listeners: OptionalSequence[EventListener] = None,
│ │      logging_config: BaseLoggingConfig | EmptyType | None = Empty,
│ │      middleware: OptionalSequence[Middleware] = None,
│ │ @@ -335,14 +345,15 @@
│ │      preferred_validation_backend: Literal["pydantic", "attrs"] = "attrs",
│ │      raise_server_exceptions: bool = True,
│ │      request_class: type[Request] | None = None,
│ │      response_cache_config: ResponseCacheConfig | None = None,
│ │      response_class: ResponseType | None = None,
│ │      response_cookies: ResponseCookies | None = None,
│ │      response_headers: OptionalSequence[ResponseHeader] = None,
│ │ +    return_dto: type[DTOInterface] | None | EmptyType = Empty,
│ │      root_path: str = "",
│ │      security: OptionalSequence[SecurityRequirement] = None,
│ │      session_config: BaseBackendConfig | None = None,
│ │      signature_namespace: Mapping[str, Any] | None = None,
│ │      state: State | None = None,
│ │      static_files_config: OptionalSequence[StaticFilesConfig] = None,
│ │      stores: StoreRegistry | dict[str, Store] | None = None,
│ │ @@ -414,14 +425,16 @@
│ │              this app. Can be overridden by route handlers.
│ │          compression_config: Configures compression behaviour of the application, this enabled a builtin or user
│ │              defined Compression middleware.
│ │          cors_config: If set, configures :class:`CORSMiddleware <.middleware.cors.CORSMiddleware>`.
│ │          csrf_config: If set, configures :class:`CSRFMiddleware <.middleware.csrf.CSRFMiddleware>`.
│ │          debug: If ``True``, app errors rendered as HTML with a stack trace.
│ │          dependencies: A string keyed mapping of dependency :class:`Providers <.di.Provide>`.
│ │ +        dto: :class:`DTOInterface <.dto.interface.DTOInterface>` to use for (de)serializing and
│ │ +            validation of request data.
│ │          etag: An ``etag`` header of type :class:`ETag <.datastructures.ETag>` to add to route handlers of this app.
│ │              Can be overridden by route handlers.
│ │          event_emitter_backend: A subclass of
│ │              :class:`BaseEventEmitterBackend <.events.emitter.BaseEventEmitterBackend>`.
│ │          exception_handlers: A mapping of status codes and/or exception types to handler functions.
│ │          guards: A sequence of :class:`Guard <.types.Guard>` callables.
│ │          listeners: A sequence of :class:`EventListener <.events.listener.EventListener>`.
│ │ @@ -447,14 +460,16 @@
│ │          preferred_validation_backend: Validation backend to use, if multiple are installed.
│ │          request_class: An optional subclass of :class:`Request <.connection.Request>` to use for http connections.
│ │          response_class: A custom subclass of :class:`Response <.response.Response>` to be used as the app's default
│ │              response.
│ │          response_cookies: A sequence of :class:`Cookie <.datastructures.Cookie>`.
│ │          response_headers: A string keyed mapping of :class:`ResponseHeader <.datastructures.ResponseHeader>`
│ │          response_cache_config: Configures caching behavior of the application.
│ │ +        return_dto: :class:`DTOInterface <.dto.interface.DTOInterface>` to use for serializing
│ │ +            outbound response data.
│ │          route_handlers: A sequence of route handlers, which can include instances of
│ │              :class:`Router <.router.Router>`, subclasses of :class:`Controller <.controller.Controller>` or any
│ │              callable decorated by the route handler decorators.
│ │          security: A sequence of dicts that will be added to the schema of all route handlers in the application.
│ │              See
│ │              :data:`SecurityRequirement <.openapi.spec.SecurityRequirement>` for details.
│ │          signature_namespace: A mapping of names to types for use in forward reference resolution during signature modelling.
│ │ @@ -491,14 +506,15 @@
│ │          before_startup=before_startup,
│ │          cache_control=cache_control,
│ │          compression_config=compression_config,
│ │          cors_config=cors_config,
│ │          csrf_config=csrf_config,
│ │          debug=debug,
│ │          dependencies=dependencies,
│ │ +        dto=dto,
│ │          etag=etag,
│ │          event_emitter_backend=event_emitter_backend,
│ │          exception_handlers=exception_handlers,
│ │          guards=guards,
│ │          listeners=listeners,
│ │          logging_config=logging_config,
│ │          middleware=middleware,
│ │ @@ -512,14 +528,15 @@
│ │          plugins=plugins,
│ │          preferred_validation_backend=preferred_validation_backend,
│ │          request_class=request_class,
│ │          response_cache_config=response_cache_config,
│ │          response_class=response_class,
│ │          response_cookies=response_cookies,
│ │          response_headers=response_headers,
│ │ +        return_dto=return_dto,
│ │          route_handlers=route_handlers,
│ │          security=security,
│ │          signature_namespace=signature_namespace,
│ │          state=state,
│ │          static_files_config=static_files_config,
│ │          stores=stores,
│ │          tags=tags,
│ │   --- litestar-1.0.0a0/litestar/testing/life_span_handler.py
│ ├── +++ litestar-2.0.0a3/litestar/testing/life_span_handler.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/testing/request_factory.py
│ ├── +++ litestar-2.0.0a3/litestar/testing/request_factory.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/testing/transport.py
│ ├── +++ litestar-2.0.0a3/litestar/testing/transport.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/testing/websocket_test_session.py
│ ├── +++ litestar-2.0.0a3/litestar/testing/websocket_test_session.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/types/__init__.py
│ ├── +++ litestar-2.0.0a3/litestar/types/__init__.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/types/asgi_types.py
│ ├── +++ litestar-2.0.0a3/litestar/types/asgi_types.py
│ │┄ Files 1% similar despite different names
│ │ @@ -80,14 +80,15 @@
│ │      "Scope",
│ │      "ScopeSession",
│ │      "Send",
│ │      "WebSocketAcceptEvent",
│ │      "WebSocketCloseEvent",
│ │      "WebSocketConnectEvent",
│ │      "WebSocketDisconnectEvent",
│ │ +    "WebSocketMode",
│ │      "WebSocketReceiveEvent",
│ │      "WebSocketReceiveMessage",
│ │      "WebSocketResponseBodyEvent",
│ │      "WebSocketResponseStartEvent",
│ │      "WebSocketScope",
│ │      "WebSocketSendEvent",
│ │      "WebSocketSendMessage",
│ │ @@ -334,7 +335,8 @@
│ │  ReceiveMessage = Union[HTTPReceiveMessage, WebSocketReceiveMessage]
│ │  Scope = Union[HTTPScope, WebSocketScope]
│ │  Receive = Callable[..., Awaitable[Union[HTTPReceiveMessage, WebSocketReceiveMessage]]]
│ │  Send = Callable[[Message], Awaitable[None]]
│ │  ASGIApp = Callable[[Scope, Receive, Send], Awaitable[None]]
│ │  RawHeaders = Iterable[Tuple[bytes, bytes]]
│ │  RawHeadersList = List[Tuple[bytes, bytes]]
│ │ +WebSocketMode = Literal["text", "binary"]
│ │   --- litestar-1.0.0a0/litestar/types/callable_types.py
│ ├── +++ litestar-2.0.0a3/litestar/types/callable_types.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/types/composite_types.py
│ ├── +++ litestar-2.0.0a3/litestar/types/composite_types.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/types/file_types.py
│ ├── +++ litestar-2.0.0a3/litestar/types/file_types.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/types/internal_types.py
│ ├── +++ litestar-2.0.0a3/litestar/types/internal_types.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/types/protocols.py
│ ├── +++ litestar-2.0.0a3/litestar/types/protocols.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/types/serialization.py
│ ├── +++ litestar-2.0.0a3/litestar/types/serialization.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/utils/__init__.py
│ ├── +++ litestar-2.0.0a3/litestar/utils/__init__.py
│ │┄ Files 9% similar despite different names
│ │ @@ -1,27 +1,24 @@
│ │  from litestar.utils.deprecation import deprecated, warn_deprecation
│ │  
│ │  from .helpers import Ref, get_enum_string_value, get_name
│ │  from .path import join_paths, normalize_path
│ │  from .predicates import (
│ │      is_any,
│ │ +    is_attrs_class,
│ │      is_class_and_subclass,
│ │      is_dataclass_class,
│ │      is_mapping,
│ │      is_optional_union,
│ │ +    is_pydantic_constrained_field,
│ │      is_pydantic_model_class,
│ │      is_pydantic_model_instance,
│ │      is_typed_dict,
│ │      is_union,
│ │  )
│ │ -from .pydantic import (
│ │ -    convert_dataclass_to_model,
│ │ -    convert_typeddict_to_model,
│ │ -    create_parsed_model_field,
│ │ -)
│ │  from .scope import (
│ │      delete_litestar_scope_state,
│ │      get_litestar_scope_state,
│ │      get_serializer_from_scope,
│ │      set_litestar_scope_state,
│ │  )
│ │  from .sequence import compact, find_index, unique
│ │ @@ -38,31 +35,30 @@
│ │      "AsyncCallable",
│ │      "AsyncIteratorWrapper",
│ │      "Ref",
│ │      "annotation_is_iterable_of_type",
│ │      "as_async_callable_list",
│ │      "async_partial",
│ │      "compact",
│ │ -    "convert_dataclass_to_model",
│ │ -    "convert_typeddict_to_model",
│ │ -    "create_parsed_model_field",
│ │      "delete_litestar_scope_state",
│ │      "deprecated",
│ │      "find_index",
│ │      "get_enum_string_value",
│ │      "get_name",
│ │      "get_origin_or_inner_type",
│ │      "get_serializer_from_scope",
│ │      "get_litestar_scope_state",
│ │      "is_any",
│ │      "is_async_callable",
│ │ +    "is_attrs_class",
│ │      "is_class_and_subclass",
│ │      "is_dataclass_class",
│ │      "is_mapping",
│ │      "is_optional_union",
│ │ +    "is_pydantic_constrained_field",
│ │      "is_pydantic_model_class",
│ │      "is_pydantic_model_instance",
│ │      "is_typed_dict",
│ │      "is_union",
│ │      "join_paths",
│ │      "make_non_optional_union",
│ │      "normalize_path",
│ │   --- litestar-1.0.0a0/litestar/utils/compat.py
│ ├── +++ litestar-2.0.0a3/litestar/utils/compat.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/utils/dataclass.py
│ ├── +++ litestar-2.0.0a3/litestar/utils/dataclass.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/utils/deprecation.py
│ ├── +++ litestar-2.0.0a3/litestar/utils/deprecation.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/utils/helpers.py
│ ├── +++ litestar-2.0.0a3/litestar/utils/helpers.py
│ │┄ Files 2% similar despite different names
│ │ @@ -26,15 +26,15 @@
│ │          return cast("str", value.__name__)
│ │      return type(value).__name__
│ │  
│ │  
│ │  def get_enum_string_value(value: Enum | str) -> str:
│ │      """Return the string value of a string enum.
│ │  
│ │ -    See: https://github.com/starlite-api/litestar/pull/633#issuecomment-1286519267
│ │ +    See: https://github.com/litestar-org/litestar/pull/633#issuecomment-1286519267
│ │  
│ │      Args:
│ │          value: An enum or string.
│ │  
│ │      Returns:
│ │          A string.
│ │      """
│ │   --- litestar-1.0.0a0/litestar/utils/path.py
│ ├── +++ litestar-2.0.0a3/litestar/utils/path.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/utils/predicates.py
│ ├── +++ litestar-2.0.0a3/litestar/utils/predicates.py
│ │┄ Files 14% similar despite different names
│ │ @@ -52,15 +52,15 @@
│ │  P = ParamSpec("P")
│ │  T = TypeVar("T")
│ │  
│ │  
│ │  def is_class_and_subclass(annotation: Any, t_type: type[T]) -> TypeGuard[type[T]]:
│ │      """Return ``True`` if ``value`` is a ``class`` and is a subtype of ``t_type``.
│ │  
│ │ -    See https://github.com/starlite-api/litestar/issues/367
│ │ +    See https://github.com/litestar-org/litestar/issues/367
│ │  
│ │      Args:
│ │          annotation: The value to check if is class and subclass of ``t_type``.
│ │          t_type: Type used for :func:`issubclass` check of ``value``
│ │  
│ │      Returns:
│ │          bool
│ │ @@ -260,7 +260,49 @@
│ │  
│ │      Returns:
│ │          A typeguard determining whether the type is an attrs class.
│ │      """
│ │      if attrs is not Empty:  # type: ignore[comparison-overlap]
│ │          return attrs.has(annotation)  # pyright: ignore
│ │      return False  # pragma: no cover
│ │ +
│ │ +
│ │ +def is_pydantic_constrained_field(
│ │ +    annotation: Any,
│ │ +) -> TypeGuard[
│ │ +    type[pydantic.ConstrainedBytes]  # pyright: ignore
│ │ +    | type[pydantic.ConstrainedDate]  # pyright: ignore
│ │ +    | type[pydantic.ConstrainedDecimal]  # pyright: ignore
│ │ +    | type[pydantic.ConstrainedFloat]  # pyright: ignore
│ │ +    | type[pydantic.ConstrainedFrozenSet]  # pyright: ignore
│ │ +    | type[pydantic.ConstrainedInt]  # pyright: ignore
│ │ +    | type[pydantic.ConstrainedList]  # pyright: ignore
│ │ +    | type[pydantic.ConstrainedSet]  # pyright: ignore
│ │ +    | type[pydantic.ConstrainedStr]  # pyright: ignore
│ │ +]:
│ │ +    """Check if the given annotation is a constrained pydantic type.
│ │ +
│ │ +    Args:
│ │ +        annotation: A type annotation
│ │ +
│ │ +    Returns:
│ │ +        True if pydantic is installed and the type is a constrained type, otherwise False.
│ │ +    """
│ │ +    try:
│ │ +        import pydantic
│ │ +
│ │ +        return any(
│ │ +            is_class_and_subclass(annotation, constrained_type)
│ │ +            for constrained_type in (
│ │ +                pydantic.ConstrainedBytes,
│ │ +                pydantic.ConstrainedDate,
│ │ +                pydantic.ConstrainedDecimal,
│ │ +                pydantic.ConstrainedFloat,
│ │ +                pydantic.ConstrainedFrozenSet,
│ │ +                pydantic.ConstrainedInt,
│ │ +                pydantic.ConstrainedList,
│ │ +                pydantic.ConstrainedSet,
│ │ +                pydantic.ConstrainedStr,
│ │ +            )
│ │ +        )
│ │ +    except ImportError:
│ │ +        return False
│ │   --- litestar-1.0.0a0/litestar/utils/scope.py
│ ├── +++ litestar-2.0.0a3/litestar/utils/scope.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/utils/sequence.py
│ ├── +++ litestar-2.0.0a3/litestar/utils/sequence.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/litestar/utils/sync.py
│ ├── +++ litestar-2.0.0a3/litestar/utils/sync.py
│ │┄ Files 26% similar despite different names
│ │ @@ -1,28 +1,36 @@
│ │  from __future__ import annotations
│ │  
│ │  from asyncio import iscoroutinefunction
│ │  from functools import partial
│ │  from inspect import getfullargspec, ismethod
│ │  from typing import (
│ │ +    TYPE_CHECKING,
│ │      Any,
│ │      AsyncGenerator,
│ │      Awaitable,
│ │      Callable,
│ │      Generic,
│ │      Iterable,
│ │      Iterator,
│ │      TypeVar,
│ │ +    cast,
│ │  )
│ │  
│ │  from anyio.to_thread import run_sync
│ │  from typing_extensions import ParamSpec, TypeGuard
│ │  
│ │ +from litestar.exceptions import ImproperlyConfiguredException
│ │ +from litestar.types import Empty
│ │  from litestar.utils.helpers import Ref
│ │  
│ │ +if TYPE_CHECKING:
│ │ +    from litestar.types.empty import EmptyType
│ │ +    from litestar.types.parsed_signature import ParsedSignature
│ │ +
│ │  __all__ = ("AsyncCallable", "AsyncIteratorWrapper", "as_async_callable_list", "async_partial", "is_async_callable")
│ │  
│ │  
│ │  P = ParamSpec("P")
│ │  T = TypeVar("T")
│ │  
│ │  
│ │ @@ -41,22 +49,23 @@
│ │  
│ │      return iscoroutinefunction(value) or (callable(value) and iscoroutinefunction(value.__call__))  # type: ignore[operator]
│ │  
│ │  
│ │  class AsyncCallable(Generic[P, T]):
│ │      """Wrap a callable into an asynchronous callable."""
│ │  
│ │ -    __slots__ = ("args", "kwargs", "ref", "is_method", "num_expected_args")
│ │ +    __slots__ = ("args", "kwargs", "ref", "is_method", "num_expected_args", "_parsed_signature")
│ │  
│ │      def __init__(self, fn: Callable[P, T]) -> None:
│ │          """Initialize the wrapper from any callable.
│ │  
│ │          Args:
│ │              fn: Callable to wrap - can be any sync or async callable.
│ │          """
│ │ +        self._parsed_signature: ParsedSignature | EmptyType = Empty
│ │          self.is_method = ismethod(fn) or (callable(fn) and ismethod(fn.__call__))  # type: ignore
│ │          self.num_expected_args = len(getfullargspec(fn).args) - (1 if self.is_method else 0)
│ │          self.ref = Ref[Callable[..., Awaitable[T]]](
│ │              fn if is_async_callable(fn) else async_partial(fn)  # pyright: ignore
│ │          )
│ │  
│ │      async def __call__(self, *args: P.args, **kwargs: P.kwargs) -> T:
│ │ @@ -67,14 +76,33 @@
│ │              **kwargs: Kwargs of the wrapper function.
│ │  
│ │          Returns:
│ │              The return value of the wrapped function.
│ │          """
│ │          return await self.ref.value(*args, **kwargs)
│ │  
│ │ +    @property
│ │ +    def parsed_signature(self) -> ParsedSignature:
│ │ +        if self._parsed_signature is Empty:
│ │ +            raise ImproperlyConfiguredException(
│ │ +                "Parsed signature is not set. Call `set_parsed_signature()` at an appropriate time during handler"
│ │ +                "registration."
│ │ +            )
│ │ +        return cast("ParsedSignature", self._parsed_signature)
│ │ +
│ │ +    def set_parsed_signature(self, namespace: dict[str, Any]) -> None:
│ │ +        """Set the parsed signature of the wrapped function.
│ │ +
│ │ +        Args:
│ │ +            namespace: Namespace for forward ref resolution.
│ │ +        """
│ │ +        from litestar.types.parsed_signature import ParsedSignature
│ │ +
│ │ +        self._parsed_signature = ParsedSignature.from_fn(self.ref.value, namespace)
│ │ +
│ │  
│ │  def as_async_callable_list(value: Callable | list[Callable]) -> list[AsyncCallable]:
│ │      """Wrap callables in ``AsyncCallable`` s.
│ │  
│ │      Args:
│ │          value: A callable or list of callables.
│ │   --- litestar-1.0.0a0/litestar/utils/version.py
│ ├── +++ litestar-2.0.0a3/litestar/utils/version.py
│ │┄ Files identical despite different names
│ │   --- litestar-1.0.0a0/pyproject.toml
│ ├── +++ litestar-2.0.0a3/pyproject.toml
│ │┄ Files 22% similar despite different names
│ │ @@ -1,10 +1,10 @@
│ │  [tool.poetry]
│ │  name = "litestar"
│ │ -version = "1.0.0alpha0"
│ │ +version = "2.0.0alpha3"
│ │  description = "Performant, light and flexible ASGI API Framework"
│ │  authors = [
│ │      "Na'aman Hirschfeld <nhirschfeld@gmail.com>",
│ │      "Peter Schutt <peter.github@proton.me>",
│ │      "Cody Fincher <cody.fincher@gmail.com>",
│ │      "Janek Nouvertné <provinzkraut@posteo.de>",
│ │  ]
│ │ @@ -12,18 +12,29 @@
│ │      "Na'aman Hirschfeld <nhirschfeld@gmail.com>",
│ │      "Peter Schutt <peter.github@proton.me>",
│ │      "Cody Fincher <cody.fincher@gmail.com>",
│ │      "Janek Nouvertné <provinzkraut@posteo.de>",
│ │  ]
│ │  license = "MIT"
│ │  readme = "README.md"
│ │ -homepage = "https://starliteproject.dev/"
│ │ -repository = "https://github.com/starlite-api/starlite"
│ │ -documentation = "https://docs.starliteproject.dev/"
│ │ -keywords = ["api", "rest", "http", "asgi", "pydantic", "litestar", "framework", "websocket", "starlite"]
│ │ +homepage = "https://litestar.dev/"
│ │ +repository = "https://github.com/litestar-org/litestar"
│ │ +documentation = "https://docs.litestar.dev/"
│ │ +keywords = [
│ │ +    "api",
│ │ +    "rest",
│ │ +    "http",
│ │ +    "asgi",
│ │ +    "pydantic",
│ │ +    "litestar",
│ │ +    "starlite",
│ │ +    "framework",
│ │ +    "websocket",
│ │ +    "litestar",
│ │ +]
│ │  classifiers = [
│ │      "Development Status :: 5 - Production/Stable",
│ │      "Environment :: Web Environment",
│ │      "License :: OSI Approved :: MIT License",
│ │      "Natural Language :: English",
│ │      "Operating System :: OS Independent",
│ │      "Programming Language :: Python :: 3.8",
│ │ @@ -32,14 +43,15 @@
│ │      "Programming Language :: Python :: 3.11",
│ │      "Programming Language :: Python",
│ │      "Topic :: Internet :: WWW/HTTP",
│ │      "Topic :: Software Development :: Libraries",
│ │      "Topic :: Software Development",
│ │      "Typing :: Typed",
│ │  ]
│ │ +include = ["CHANGELOG.rst"]
│ │  packages = [{ include = "litestar" }]
│ │  
│ │  [tool.poetry.dependencies]
│ │  python = ">=3.8,<4.0"
│ │  alembic = { version = "*", optional = true }
│ │  anyio = ">=3"
│ │  attrs = { version = "*", optional = true }
│ │ @@ -53,16 +65,16 @@
│ │  jinja2 = { version = ">=3.1.2", optional = true }
│ │  jsbeautifier = { version = "*", optional = true }
│ │  mako = { version = ">=1.2.4", optional = true }
│ │  msgspec = "*"
│ │  multidict = ">=6.0.2"
│ │  opentelemetry-instrumentation-asgi = { version = "*", optional = true }
│ │  picologging = { version = "*", optional = true }
│ │ -pydantic = "*"
│ │ -pydantic-factories = "*"
│ │ +polyfactory = "*"
│ │ +pydantic = "<2"
│ │  python-dateutil = { version = "*", optional = true }
│ │  python-jose = { version = "*", optional = true }
│ │  pytimeparse = { version = "*", optional = true }
│ │  pyyaml = "*"
│ │  redis = { version = ">=4.4.4,!=4.5.0,!=4.5.1,!=4.5.2,!=4.5.3", optional = true, extras = ["hiredis"] }
│ │  rich = { version = ">=13.0.0", optional = true }
│ │  sqlalchemy = { version = ">=2.0.4", optional = true }
│ │ @@ -119,15 +131,15 @@
│ │  black = "*"
│ │  httpx = "*"
│ │  sphinx = ">=5.3.0,<=6"
│ │  sphinx-autobuild = "*"
│ │  sphinx-copybutton = ">=0.5.1"
│ │  sphinx-design = ">=0.3.0,<1"
│ │  sphinxcontrib-mermaid = ">=0.8.1,<1"
│ │ -litestar-sphinx-theme = { git = "https://github.com/starlite-api/litestar-sphinx-theme.git" }
│ │ +litestar-sphinx-theme = { git = "https://github.com/litestar-org/litestar-sphinx-theme.git" }
│ │  uvicorn = "*"
│ │  
│ │  [tool.poetry.extras]
│ │  attrs = ["attrs", "cattrs", "python-dateutil", "pytimeparse"]
│ │  brotli = ["brotli"]
│ │  cli = ["click", "rich", "jsbeautifier"]
│ │  cryptography = ["cryptography"]
│ │ @@ -203,138 +215,138 @@
│ │  
│ │  [tool.slotscheck]
│ │  strict-imports = false
│ │  
│ │  [tool.ruff]
│ │  select = [
│ │      "A", # flake8-builtins
│ │ -    "B", # flake8-bugbear
│ │ +    "B",   # flake8-bugbear
│ │      "BLE", # flake8-blind-except
│ │ -    "C4", # flake8-comprehensions
│ │ +    "C4",  # flake8-comprehensions
│ │      "C90", # mccabe
│ │ -    "D", # pydocstyle
│ │ -    "DJ", # flake8-django
│ │ +    "D",   # pydocstyle
│ │ +    "DJ",  # flake8-django
│ │      "DTZ", # flake8-datetimez
│ │ -    "E", # pycodestyle errors
│ │ +    "E",   # pycodestyle errors
│ │      "ERA", # eradicate
│ │      "EXE", # flake8-executable
│ │ -    "F", # pyflakes
│ │ -    "G", # flake8-logging-format
│ │ -    "I", # isort
│ │ +    "F",   # pyflakes
│ │ +    "G",   # flake8-logging-format
│ │ +    "I",   # isort
│ │      "ICN", # flake8-import-conventions
│ │      "ISC", # flake8-implicit-str-concat
│ │ -    "N", # pep8-naming
│ │ +    "N",   # pep8-naming
│ │      "PIE", # flake8-pie
│ │      "PLC", # pylint - convention
│ │      "PLE", # pylint - error
│ │      "PLW", # pylint - warning
│ │      "PTH", # flake8-use-pathlib
│ │ -    "Q", # flake8-quotes
│ │ +    "Q",   # flake8-quotes
│ │      "RET", # flake8-return
│ │      "RUF", # Ruff-specific rules
│ │ -    "S", # flake8-bandit
│ │ +    "S",   # flake8-bandit
│ │      "SIM", # flake8-simplify
│ │      "T10", # flake8-debugger
│ │      "T20", # flake8-print
│ │      "TCH", # flake8-type-checking
│ │      "TID", # flake8-tidy-imports
│ │ -    "UP", # pyupgrade
│ │ -    "W", # pycodestyle - warning
│ │ +    "UP",  # pyupgrade
│ │ +    "W",   # pycodestyle - warning
│ │      "YTT", # flake8-2020
│ │  ]
│ │  
│ │  ignore = [
│ │ -    "E501", # pycodestyle line too long, handled by black
│ │ -    "D100", # pydocstyle - missing docstring in public module
│ │ -    "D101", # pydocstyle - missing docstring in public class
│ │ -    "D102", # pydocstyle - missing docstring in public method
│ │ -    "D103", # pydocstyle - missing docstring in public function
│ │ -    "D104", # pydocstyle - missing docstring in public package
│ │ -    "D105", # pydocstyle - missing docstring in magic method
│ │ -    "D106", # pydocstyle - missing docstring in public nested class
│ │ -    "D107", # pydocstyle - missing docstring in __init__
│ │ -    "D202", # pydocstyle - no blank lines allowed after function docstring
│ │ -    "D205", # pydocstyle - 1 blank line required between summary line and description
│ │ -    "D415", # pydocstyle - first line should end with a period, question mark, or exclamation point
│ │ +    "A003",  # flake8-builtins - class attribute {name} is shadowing a python builtin
│ │ +    "B010",  # flake8-bugbear - do not call setattr with a constant attribute value
│ │ +    "D100",  # pydocstyle - missing docstring in public module
│ │ +    "D101",  # pydocstyle - missing docstring in public class
│ │ +    "D102",  # pydocstyle - missing docstring in public method
│ │ +    "D103",  # pydocstyle - missing docstring in public function
│ │ +    "D104",  # pydocstyle - missing docstring in public package
│ │ +    "D105",  # pydocstyle - missing docstring in magic method
│ │ +    "D106",  # pydocstyle - missing docstring in public nested class
│ │ +    "D107",  # pydocstyle - missing docstring in __init__
│ │ +    "D202",  # pydocstyle - no blank lines allowed after function docstring
│ │ +    "D205",  # pydocstyle - 1 blank line required between summary line and description
│ │ +    "D415",  # pydocstyle - first line should end with a period, question mark, or exclamation point
│ │ +    "E501",  # pycodestyle line too long, handled by black
│ │      "UP037", # pyupgrade - removes quotes from type annotation
│ │ -    "A003", # flake8-builtins - class attribute {name} is shadowing a python builtin
│ │ -    "B010", # flake8-bugbear - do not call setattr with a constant attribute value
│ │  ]
│ │  line-length = 120
│ │  src = ["litestar", "tests", "docs/examples"]
│ │  target-version = "py38"
│ │  
│ │  [tool.ruff.pydocstyle]
│ │  convention = "google"
│ │  
│ │  [tool.ruff.mccabe]
│ │  max-complexity = 12
│ │  
│ │  [tool.ruff.pep8-naming]
│ │  classmethod-decorators = [
│ │      "classmethod",
│ │ -    "pydantic.validator",
│ │      "pydantic.root_validator",
│ │ +    "pydantic.validator",
│ │      "sqlalchemy.ext.declarative.declared_attr",
│ │      "sqlalchemy.orm.declared_attr.directive",
│ │  ]
│ │  
│ │  [tool.ruff.isort]
│ │  known-first-party = ["litestar", "tests", "examples"]
│ │  
│ │  [tool.ruff.per-file-ignores]
│ │  "tests/**/*.*" = [
│ │ -    "S101",
│ │ -    "D",
│ │ +    "A",
│ │      "ARG",
│ │ -    "PGH",
│ │      "B",
│ │ -    "FBT",
│ │ -    "PTH",
│ │ -    "A",
│ │ -    "TCH",
│ │ +    "BLE",
│ │ +    "C901",
│ │ +    "D",
│ │      "DTZ",
│ │ -    "TRY",
│ │      "EM",
│ │ -    "S",
│ │ +    "FBT",
│ │ +    "G",
│ │      "N",
│ │ -    "SIM",
│ │ +    "PGH",
│ │ +    "PIE",
│ │      "PLR",
│ │ -    "BLE",
│ │ -    "RSE",
│ │ -    "C901",
│ │      "PLW",
│ │ -    "G",
│ │ -    "PIE",
│ │ +    "PTH",
│ │ +    "RSE",
│ │ +    "S",
│ │ +    "S101",
│ │ +    "SIM",
│ │ +    "TCH",
│ │ +    "TRY",
│ │  ]
│ │  "docs/examples/application_hooks/before_send_hook.py" = ["UP006"]
│ │  "docs/examples/tests/**/*.*" = [
│ │ -    "S101",
│ │ -    "D",
│ │ +    "A",
│ │      "ARG",
│ │ -    "PGH",
│ │      "B",
│ │ -    "FBT",
│ │ -    "PTH",
│ │ -    "A",
│ │ -    "TCH",
│ │ +    "BLE",
│ │ +    "C901",
│ │ +    "D",
│ │      "DTZ",
│ │ -    "TRY",
│ │      "EM",
│ │ -    "S",
│ │ +    "FBT",
│ │ +    "G",
│ │      "N",
│ │ -    "SIM",
│ │ +    "PGH",
│ │ +    "PIE",
│ │      "PLR",
│ │ -    "BLE",
│ │ -    "RSE",
│ │ -    "C901",
│ │      "PLW",
│ │ -    "G",
│ │ -    "PIE",
│ │ +    "PTH",
│ │ +    "RSE",
│ │ +    "S",
│ │ +    "S101",
│ │ +    "SIM",
│ │ +    "TCH",
│ │ +    "TRY",
│ │  ]
│ │  "docs/**/*.*" = ["S", "B", "DTZ", "A", "TCH", "ERA", "D", "RET"]
│ │ -"test_apps/**/*.*" = ["D", "TRY", "EM", "S", "PTH"]
│ │ -"tools/**/*.*" = ["D", "ARG", "EM", "TRY", "G", "FBT"]
│ │ +"docs/examples/**" = ["T201"]
│ │ +"litestar/exceptions/*.*" = ["N818"]
│ │  "litestar/handlers/**/*.*" = ["N801"]
│ │  "litestar/params.py" = ["N802"]
│ │ -"litestar/exceptions/*.*" = ["N818"]
│ │ -"docs/examples/**" = ["T201"]
│ │ +"test_apps/**/*.*" = ["D", "TRY", "EM", "S", "PTH"]
│ │ +"tools/**/*.*" = ["D", "ARG", "EM", "TRY", "G", "FBT"]
